//
// AnimationMenuView.swift
// Generated by Core Animator version 1.5.2 on 1/30/18.
//
// DO NOT MODIFY THIS FILE. IT IS AUTO-GENERATED AND WILL BE OVERWRITTEN
//

import UIKit

private class _AnimationMenuPassthroughView: UIView {
    override func point(inside point: CGPoint, with event: UIEvent?) -> Bool {
        for subview in subviews as [UIView] {
            if subview.point(inside: convert(point, to: subview), with: event) { return true }
        }
        return false
    }
}

@IBDesignable
class AnimationMenuView : UIView, CAAnimationDelegate {


	var animationCompletions = Dictionary<CAAnimation, (Bool) -> Void>()
	var viewsByName: [String : UIView]!

	// - MARK: Life Cycle

	convenience init() {
		self.init(frame: CGRect(x: 0, y: 0, width: 9791, height: 7346))
	}

	override init(frame: CGRect) {
		super.init(frame: frame)
		self.setupHierarchy()
	}

	required init?(coder aDecoder: NSCoder) {
		super.init(coder: aDecoder)
		self.setupHierarchy()
	}

	// - MARK: Scaling

	override func layoutSubviews() {
		super.layoutSubviews()

		if let scalingView = self.viewsByName["__scaling__"] {
			var xScale = self.bounds.size.width / scalingView.bounds.size.width
			var yScale = self.bounds.size.height / scalingView.bounds.size.height
			switch contentMode {
			case .scaleToFill:
				break
			case .scaleAspectFill:
				let scale = max(xScale, yScale)
				xScale = scale
				yScale = scale
			default:
				let scale = min(xScale, yScale)
				xScale = scale
				yScale = scale
			}
			scalingView.transform = CGAffineTransform(scaleX: xScale, y: yScale)
			scalingView.center = CGPoint(x:self.bounds.midX, y:self.bounds.midY)
		}
	}

	// - MARK: Setup

	func setupHierarchy() {
		var viewsByName: [String : UIView] = [:]
		let bundle = Bundle(for:type(of: self))
		let __scaling__ = UIView()
		__scaling__.bounds = CGRect(x:0, y:0, width:9791, height:7346)
		__scaling__.center = CGPoint(x:4895.9, y:3673.3)
		__scaling__.clipsToBounds = true
		self.addSubview(__scaling__)
		viewsByName["__scaling__"] = __scaling__

		let menuBackframepng17__root = _AnimationMenuPassthroughView()
		let menuBackframepng17__xScale = _AnimationMenuPassthroughView()
		let menuBackframepng17__yScale = _AnimationMenuPassthroughView()
		let menuBackframepng17 = UIImageView()
		let imgMenuBackframepng17 = UIImage(named:"menu_backframepng-17.png", in: bundle, compatibleWith: nil)
		if imgMenuBackframepng17 == nil {
			print("** Warning: Could not create image from 'menu_backframepng-17.png'")
		}
		menuBackframepng17.image = imgMenuBackframepng17
		menuBackframepng17.contentMode = .center
		menuBackframepng17.bounds = CGRect(x:0, y:0, width:2049.0, height:1537.0)
		menuBackframepng17__root.layer.position = CGPoint(x:4888.931, y:3667.295)
		menuBackframepng17__xScale.transform = CGAffineTransform(scaleX: 4.77, y: 1.00)
		menuBackframepng17__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 4.77)
		menuBackframepng17__root.transform = CGAffineTransform(rotationAngle: 0.000)
		menuBackframepng17__root.addSubview(menuBackframepng17__xScale)
		menuBackframepng17__xScale.addSubview(menuBackframepng17__yScale)
		menuBackframepng17__yScale.addSubview(menuBackframepng17)
		__scaling__.addSubview(menuBackframepng17__root)
		viewsByName["menu_backframepng-17__root"] = menuBackframepng17__root
		viewsByName["menu_backframepng-17__xScale"] = menuBackframepng17__xScale
		viewsByName["menu_backframepng-17__yScale"] = menuBackframepng17__yScale
		viewsByName["menu_backframepng-17"] = menuBackframepng17

		let icon02Menu01__root = _AnimationMenuPassthroughView()
		let icon02Menu01__xScale = _AnimationMenuPassthroughView()
		let icon02Menu01__yScale = _AnimationMenuPassthroughView()
		let icon02Menu01 = UIImageView()
		let imgIcon02Menu01 = UIImage(named:"icon_02_menu-01.png", in: bundle, compatibleWith: nil)
		if imgIcon02Menu01 == nil {
			print("** Warning: Could not create image from 'icon_02_menu-01.png'")
		}
		icon02Menu01.image = imgIcon02Menu01
		icon02Menu01.contentMode = .center
		icon02Menu01.bounds = CGRect(x:0, y:0, width:2917.0, height:2917.0)
		icon02Menu01__root.layer.position = CGPoint(x:1653.887, y:5692.767)
		icon02Menu01__xScale.transform = CGAffineTransform(scaleX: 1.13, y: 1.00)
		icon02Menu01__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.13)
		icon02Menu01__root.transform = CGAffineTransform(rotationAngle: 0.000)
		icon02Menu01__root.addSubview(icon02Menu01__xScale)
		icon02Menu01__xScale.addSubview(icon02Menu01__yScale)
		icon02Menu01__yScale.addSubview(icon02Menu01)
		__scaling__.addSubview(icon02Menu01__root)
		viewsByName["icon_02_menu-01__root"] = icon02Menu01__root
		viewsByName["icon_02_menu-01__xScale"] = icon02Menu01__xScale
		viewsByName["icon_02_menu-01__yScale"] = icon02Menu01__yScale
		viewsByName["icon_02_menu-01"] = icon02Menu01

		let icon01Power__root = _AnimationMenuPassthroughView()
		let icon01Power__xScale = _AnimationMenuPassthroughView()
		let icon01Power__yScale = _AnimationMenuPassthroughView()
		let icon01Power = UIImageView()
		let imgIcon01Power = UIImage(named:"icon_01_power_.png", in: bundle, compatibleWith: nil)
		if imgIcon01Power == nil {
			print("** Warning: Could not create image from 'icon_01_power_.png'")
		}
		icon01Power.image = imgIcon01Power
		icon01Power.contentMode = .center
		icon01Power.bounds = CGRect(x:0, y:0, width:1357.0, height:1391.0)
		icon01Power__root.layer.position = CGPoint(x:702.931, y:6597.696)
		icon01Power__root.alpha = 0.00
		icon01Power__xScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		icon01Power__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		icon01Power__root.transform = CGAffineTransform(rotationAngle: 0.000)
		icon01Power__root.addSubview(icon01Power__xScale)
		icon01Power__xScale.addSubview(icon01Power__yScale)
		icon01Power__yScale.addSubview(icon01Power)
		__scaling__.addSubview(icon01Power__root)
		viewsByName["icon_01_power___root"] = icon01Power__root
		viewsByName["icon_01_power___xScale"] = icon01Power__xScale
		viewsByName["icon_01_power___yScale"] = icon01Power__yScale
		viewsByName["icon_01_power_"] = icon01Power

		let menuIcons011__root = _AnimationMenuPassthroughView()
		let menuIcons011__xScale = _AnimationMenuPassthroughView()
		let menuIcons011__yScale = _AnimationMenuPassthroughView()
		let menuIcons011 = UIImageView()
		let imgMenuIcons011 = UIImage(named:"menu_icons-01_1.png", in: bundle, compatibleWith: nil)
		if imgMenuIcons011 == nil {
			print("** Warning: Could not create image from 'menu_icons-01_1.png'")
		}
		menuIcons011.image = imgMenuIcons011
		menuIcons011.contentMode = .center
		menuIcons011.bounds = CGRect(x:0, y:0, width:642.0, height:642.0)
		menuIcons011__root.layer.position = CGPoint(x:739.017, y:4674.193)
		menuIcons011__xScale.transform = CGAffineTransform(scaleX: 1.12, y: 1.00)
		menuIcons011__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.12)
		menuIcons011__root.transform = CGAffineTransform(rotationAngle: 0.000)
		menuIcons011__root.addSubview(menuIcons011__xScale)
		menuIcons011__xScale.addSubview(menuIcons011__yScale)
		menuIcons011__yScale.addSubview(menuIcons011)
		__scaling__.addSubview(menuIcons011__root)
		viewsByName["menu_icons-01_1__root"] = menuIcons011__root
		viewsByName["menu_icons-01_1__xScale"] = menuIcons011__xScale
		viewsByName["menu_icons-01_1__yScale"] = menuIcons011__yScale
		viewsByName["menu_icons-01_1"] = menuIcons011

		let menuIcons02__root = _AnimationMenuPassthroughView()
		let menuIcons02__xScale = _AnimationMenuPassthroughView()
		let menuIcons02__yScale = _AnimationMenuPassthroughView()
		let menuIcons02 = UIImageView()
		let imgMenuIcons02 = UIImage(named:"menu_icons-02.png", in: bundle, compatibleWith: nil)
		if imgMenuIcons02 == nil {
			print("** Warning: Could not create image from 'menu_icons-02.png'")
		}
		menuIcons02.image = imgMenuIcons02
		menuIcons02.contentMode = .center
		menuIcons02.bounds = CGRect(x:0, y:0, width:642.0, height:642.0)
		menuIcons02__root.layer.position = CGPoint(x:1631.876, y:5051.398)
		menuIcons02__xScale.transform = CGAffineTransform(scaleX: 1.13, y: 1.00)
		menuIcons02__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.13)
		menuIcons02__root.transform = CGAffineTransform(rotationAngle: 0.000)
		menuIcons02__root.addSubview(menuIcons02__xScale)
		menuIcons02__xScale.addSubview(menuIcons02__yScale)
		menuIcons02__yScale.addSubview(menuIcons02)
		__scaling__.addSubview(menuIcons02__root)
		viewsByName["menu_icons-02__root"] = menuIcons02__root
		viewsByName["menu_icons-02__xScale"] = menuIcons02__xScale
		viewsByName["menu_icons-02__yScale"] = menuIcons02__yScale
		viewsByName["menu_icons-02"] = menuIcons02

		let menuIcons03__root = _AnimationMenuPassthroughView()
		let menuIcons03__xScale = _AnimationMenuPassthroughView()
		let menuIcons03__yScale = _AnimationMenuPassthroughView()
		let menuIcons03 = UIImageView()
		let imgMenuIcons03 = UIImage(named:"menu_icons-03.png", in: bundle, compatibleWith: nil)
		if imgMenuIcons03 == nil {
			print("** Warning: Could not create image from 'menu_icons-03.png'")
		}
		menuIcons03.image = imgMenuIcons03
		menuIcons03.contentMode = .center
		menuIcons03.bounds = CGRect(x:0, y:0, width:642.0, height:642.0)
		menuIcons03__root.layer.position = CGPoint(x:2316.488, y:5737.325)
		menuIcons03__xScale.transform = CGAffineTransform(scaleX: 1.13, y: 1.00)
		menuIcons03__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.13)
		menuIcons03__root.transform = CGAffineTransform(rotationAngle: 0.000)
		menuIcons03__root.addSubview(menuIcons03__xScale)
		menuIcons03__xScale.addSubview(menuIcons03__yScale)
		menuIcons03__yScale.addSubview(menuIcons03)
		__scaling__.addSubview(menuIcons03__root)
		viewsByName["menu_icons-03__root"] = menuIcons03__root
		viewsByName["menu_icons-03__xScale"] = menuIcons03__xScale
		viewsByName["menu_icons-03__yScale"] = menuIcons03__yScale
		viewsByName["menu_icons-03"] = menuIcons03

		let menuIcons04__root = _AnimationMenuPassthroughView()
		let menuIcons04__xScale = _AnimationMenuPassthroughView()
		let menuIcons04__yScale = _AnimationMenuPassthroughView()
		let menuIcons04 = UIImageView()
		let imgMenuIcons04 = UIImage(named:"menu_icons-04.png", in: bundle, compatibleWith: nil)
		if imgMenuIcons04 == nil {
			print("** Warning: Could not create image from 'menu_icons-04.png'")
		}
		menuIcons04.image = imgMenuIcons04
		menuIcons04.contentMode = .center
		menuIcons04.bounds = CGRect(x:0, y:0, width:642.0, height:642.0)
		menuIcons04__root.layer.position = CGPoint(x:2674.879, y:6636.195)
		menuIcons04__xScale.transform = CGAffineTransform(scaleX: 1.12, y: 1.00)
		menuIcons04__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.12)
		menuIcons04__root.transform = CGAffineTransform(rotationAngle: 0.000)
		menuIcons04__root.addSubview(menuIcons04__xScale)
		menuIcons04__xScale.addSubview(menuIcons04__yScale)
		menuIcons04__yScale.addSubview(menuIcons04)
		__scaling__.addSubview(menuIcons04__root)
		viewsByName["menu_icons-04__root"] = menuIcons04__root
		viewsByName["menu_icons-04__xScale"] = menuIcons04__xScale
		viewsByName["menu_icons-04__yScale"] = menuIcons04__yScale
		viewsByName["menu_icons-04"] = menuIcons04

		let _00012__root = _AnimationMenuPassthroughView()
		let _00012__xScale = _AnimationMenuPassthroughView()
		let _00012__yScale = _AnimationMenuPassthroughView()
		let _00012 = UIImageView()
		let img0001 = UIImage(named:"0001.png", in: bundle, compatibleWith: nil)
		if img0001 == nil {
			print("** Warning: Could not create image from '0001.png'")
		}
		_00012.image = img0001
		_00012.contentMode = .center
		_00012.bounds = CGRect(x:0, y:0, width:420.0, height:420.0)
		_00012__root.layer.position = CGPoint(x:430.195, y:5893.589)
		_00012__xScale.transform = CGAffineTransform(scaleX: 0.22, y: 1.00)
		_00012__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 0.93)
		_00012__root.transform = CGAffineTransform(rotationAngle: 0.161)
		_00012__root.addSubview(_00012__xScale)
		_00012__xScale.addSubview(_00012__yScale)
		_00012__yScale.addSubview(_00012)
		__scaling__.addSubview(_00012__root)
		viewsByName["0001 2__root"] = _00012__root
		viewsByName["0001 2__xScale"] = _00012__xScale
		viewsByName["0001 2__yScale"] = _00012__yScale
		viewsByName["0001 2"] = _00012

		let _000122__root = _AnimationMenuPassthroughView()
		let _000122__xScale = _AnimationMenuPassthroughView()
		let _000122__yScale = _AnimationMenuPassthroughView()
		let _000122 = UIImageView()
		_000122.image = img0001
		_000122.contentMode = .center
		_000122.bounds = CGRect(x:0, y:0, width:420.0, height:420.0)
		_000122__root.layer.position = CGPoint(x:508.000, y:5907.610)
		_000122__xScale.transform = CGAffineTransform(scaleX: 0.22, y: 1.00)
		_000122__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 0.93)
		_000122__root.transform = CGAffineTransform(rotationAngle: 0.236)
		_000122__root.addSubview(_000122__xScale)
		_000122__xScale.addSubview(_000122__yScale)
		_000122__yScale.addSubview(_000122)
		__scaling__.addSubview(_000122__root)
		viewsByName["0001 2 2__root"] = _000122__root
		viewsByName["0001 2 2__xScale"] = _000122__xScale
		viewsByName["0001 2 2__yScale"] = _000122__yScale
		viewsByName["0001 2 2"] = _000122

		let _000124__root = _AnimationMenuPassthroughView()
		let _000124__xScale = _AnimationMenuPassthroughView()
		let _000124__yScale = _AnimationMenuPassthroughView()
		let _000124 = UIImageView()
		_000124.image = img0001
		_000124.contentMode = .center
		_000124.layer.anchorPoint = CGPoint(x:0.610, y:0.506)
		_000124.bounds = CGRect(x:0, y:0, width:420.0, height:420.0)
		_000124__root.layer.position = CGPoint(x:822.078, y:4199.500)
		_000124__root.alpha = 0.00
		_000124__xScale.transform = CGAffineTransform(scaleX: 0.12, y: 1.00)
		_000124__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.60)
		_000124__root.transform = CGAffineTransform(rotationAngle: 1.728)
		_000124__root.addSubview(_000124__xScale)
		_000124__xScale.addSubview(_000124__yScale)
		_000124__yScale.addSubview(_000124)
		__scaling__.addSubview(_000124__root)
		viewsByName["0001 2 4__root"] = _000124__root
		viewsByName["0001 2 4__xScale"] = _000124__xScale
		viewsByName["0001 2 4__yScale"] = _000124__yScale
		viewsByName["0001 2 4"] = _000124

		let _000126__root = _AnimationMenuPassthroughView()
		let _000126__xScale = _AnimationMenuPassthroughView()
		let _000126__yScale = _AnimationMenuPassthroughView()
		let _000126 = UIImageView()
		_000126.image = img0001
		_000126.contentMode = .center
		_000126.bounds = CGRect(x:0, y:0, width:420.0, height:420.0)
		_000126__root.layer.position = CGPoint(x:4246.885, y:6773.545)
		_000126__root.alpha = 0.00
		_000126__xScale.transform = CGAffineTransform(scaleX: 0.05, y: 1.00)
		_000126__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.42)
		_000126__root.transform = CGAffineTransform(rotationAngle: 0.013)
		_000126__root.addSubview(_000126__xScale)
		_000126__xScale.addSubview(_000126__yScale)
		_000126__yScale.addSubview(_000126)
		__scaling__.addSubview(_000126__root)
		viewsByName["0001 2 6__root"] = _000126__root
		viewsByName["0001 2 6__xScale"] = _000126__xScale
		viewsByName["0001 2 6__yScale"] = _000126__yScale
		viewsByName["0001 2 6"] = _000126

		let _000127__root = _AnimationMenuPassthroughView()
		let _000127__xScale = _AnimationMenuPassthroughView()
		let _000127__yScale = _AnimationMenuPassthroughView()
		let _000127 = UIImageView()
		_000127.image = img0001
		_000127.contentMode = .center
		_000127.bounds = CGRect(x:0, y:0, width:420.0, height:420.0)
		_000127__root.layer.position = CGPoint(x:4974.768, y:6344.367)
		_000127__root.alpha = 0.00
		_000127__xScale.transform = CGAffineTransform(scaleX: 0.10, y: 1.00)
		_000127__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.19)
		_000127__root.transform = CGAffineTransform(rotationAngle: 1.398)
		_000127__root.addSubview(_000127__xScale)
		_000127__xScale.addSubview(_000127__yScale)
		_000127__yScale.addSubview(_000127)
		__scaling__.addSubview(_000127__root)
		viewsByName["0001 2 7__root"] = _000127__root
		viewsByName["0001 2 7__xScale"] = _000127__xScale
		viewsByName["0001 2 7__yScale"] = _000127__yScale
		viewsByName["0001 2 7"] = _000127

		let _000125__root = _AnimationMenuPassthroughView()
		let _000125__xScale = _AnimationMenuPassthroughView()
		let _000125__yScale = _AnimationMenuPassthroughView()
		let _000125 = UIImageView()
		_000125.image = img0001
		_000125.contentMode = .center
		_000125.layer.anchorPoint = CGPoint(x:0.500, y:0.507)
		_000125.bounds = CGRect(x:0, y:0, width:420.0, height:420.0)
		_000125__root.layer.position = CGPoint(x:6393.479, y:6334.638)
		_000125__xScale.transform = CGAffineTransform(scaleX: 0.11, y: 1.00)
		_000125__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.12)
		_000125__root.transform = CGAffineTransform(rotationAngle: 1.431)
		_000125__root.addSubview(_000125__xScale)
		_000125__xScale.addSubview(_000125__yScale)
		_000125__yScale.addSubview(_000125)
		__scaling__.addSubview(_000125__root)
		viewsByName["0001 2 5__root"] = _000125__root
		viewsByName["0001 2 5__xScale"] = _000125__xScale
		viewsByName["0001 2 5__yScale"] = _000125__yScale
		viewsByName["0001 2 5"] = _000125

		let _000123__root = _AnimationMenuPassthroughView()
		let _000123__xScale = _AnimationMenuPassthroughView()
		let _000123__yScale = _AnimationMenuPassthroughView()
		let _000123 = UIImageView()
		_000123.image = img0001
		_000123.contentMode = .center
		_000123.bounds = CGRect(x:0, y:0, width:420.0, height:420.0)
		_000123__root.layer.position = CGPoint(x:7834.405, y:6310.969)
		_000123__xScale.transform = CGAffineTransform(scaleX: 0.11, y: 1.00)
		_000123__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.51)
		_000123__root.transform = CGAffineTransform(rotationAngle: 1.444)
		_000123__root.addSubview(_000123__xScale)
		_000123__xScale.addSubview(_000123__yScale)
		_000123__yScale.addSubview(_000123)
		__scaling__.addSubview(_000123__root)
		viewsByName["0001 2 3__root"] = _000123__root
		viewsByName["0001 2 3__xScale"] = _000123__xScale
		viewsByName["0001 2 3__yScale"] = _000123__yScale
		viewsByName["0001 2 3"] = _000123

		let homeArrows05__root = _AnimationMenuPassthroughView()
		let homeArrows05__xScale = _AnimationMenuPassthroughView()
		let homeArrows05__yScale = _AnimationMenuPassthroughView()
		let homeArrows05 = UIImageView()
		let imgHomeArrows05 = UIImage(named:"Home_Arrows-05.png", in: bundle, compatibleWith: nil)
		if imgHomeArrows05 == nil {
			print("** Warning: Could not create image from 'Home_Arrows-05.png'")
		}
		homeArrows05.image = imgHomeArrows05
		homeArrows05.contentMode = .center
		homeArrows05.bounds = CGRect(x:0, y:0, width:946.0, height:946.0)
		homeArrows05__root.layer.position = CGPoint(x:4720.444, y:5003.654)
		homeArrows05__root.alpha = 0.00
		homeArrows05__xScale.transform = CGAffineTransform(scaleX: 1.32, y: 1.00)
		homeArrows05__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.32)
		homeArrows05__root.transform = CGAffineTransform(rotationAngle: 0.000)
		homeArrows05__root.addSubview(homeArrows05__xScale)
		homeArrows05__xScale.addSubview(homeArrows05__yScale)
		homeArrows05__yScale.addSubview(homeArrows05)
		__scaling__.addSubview(homeArrows05__root)
		viewsByName["Home_Arrows-05__root"] = homeArrows05__root
		viewsByName["Home_Arrows-05__xScale"] = homeArrows05__xScale
		viewsByName["Home_Arrows-05__yScale"] = homeArrows05__yScale
		viewsByName["Home_Arrows-05"] = homeArrows05

		let homeArrows01__root = _AnimationMenuPassthroughView()
		let homeArrows01__xScale = _AnimationMenuPassthroughView()
		let homeArrows01__yScale = _AnimationMenuPassthroughView()
		let homeArrows01 = UIImageView()
		let imgHomeArrows01 = UIImage(named:"Home_Arrows-01.png", in: bundle, compatibleWith: nil)
		if imgHomeArrows01 == nil {
			print("** Warning: Could not create image from 'Home_Arrows-01.png'")
		}
		homeArrows01.image = imgHomeArrows01
		homeArrows01.contentMode = .center
		homeArrows01.bounds = CGRect(x:0, y:0, width:946.0, height:946.0)
		homeArrows01__root.layer.position = CGPoint(x:2712.767, y:2892.165)
		homeArrows01__root.alpha = 0.00
		homeArrows01__xScale.transform = CGAffineTransform(scaleX: 1.31, y: 1.00)
		homeArrows01__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.31)
		homeArrows01__root.transform = CGAffineTransform(rotationAngle: 0.000)
		homeArrows01__root.addSubview(homeArrows01__xScale)
		homeArrows01__xScale.addSubview(homeArrows01__yScale)
		homeArrows01__yScale.addSubview(homeArrows01)
		__scaling__.addSubview(homeArrows01__root)
		viewsByName["Home_Arrows-01__root"] = homeArrows01__root
		viewsByName["Home_Arrows-01__xScale"] = homeArrows01__xScale
		viewsByName["Home_Arrows-01__yScale"] = homeArrows01__yScale
		viewsByName["Home_Arrows-01"] = homeArrows01

		let homeIcon__root = _AnimationMenuPassthroughView()
		let homeIcon__xScale = _AnimationMenuPassthroughView()
		let homeIcon__yScale = _AnimationMenuPassthroughView()
		let homeIcon = UIImageView()
		let imgHomeIcon = UIImage(named:"home_icon.png", in: bundle, compatibleWith: nil)
		if imgHomeIcon == nil {
			print("** Warning: Could not create image from 'home_icon.png'")
		}
		homeIcon.image = imgHomeIcon
		homeIcon.contentMode = .center
		homeIcon.layer.anchorPoint = CGPoint(x:0.526, y:0.519)
		homeIcon.bounds = CGRect(x:0, y:0, width:545.0, height:545.0)
		homeIcon__root.layer.position = CGPoint(x:556.872, y:566.819)
		homeIcon__root.alpha = 0.00
		homeIcon__xScale.transform = CGAffineTransform(scaleX: 1.14, y: 1.00)
		homeIcon__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.14)
		homeIcon__root.transform = CGAffineTransform(rotationAngle: 0.000)
		homeIcon__root.addSubview(homeIcon__xScale)
		homeIcon__xScale.addSubview(homeIcon__yScale)
		homeIcon__yScale.addSubview(homeIcon)
		__scaling__.addSubview(homeIcon__root)
		viewsByName["home_icon__root"] = homeIcon__root
		viewsByName["home_icon__xScale"] = homeIcon__xScale
		viewsByName["home_icon__yScale"] = homeIcon__yScale
		viewsByName["home_icon"] = homeIcon

		let homeArrows04__root = _AnimationMenuPassthroughView()
		let homeArrows04__xScale = _AnimationMenuPassthroughView()
		let homeArrows04__yScale = _AnimationMenuPassthroughView()
		let homeArrows04 = UIImageView()
		let imgHomeArrows04 = UIImage(named:"Home_Arrows-04.png", in: bundle, compatibleWith: nil)
		if imgHomeArrows04 == nil {
			print("** Warning: Could not create image from 'Home_Arrows-04.png'")
		}
		homeArrows04.image = imgHomeArrows04
		homeArrows04.contentMode = .center
		homeArrows04.bounds = CGRect(x:0, y:0, width:946.0, height:946.0)
		homeArrows04__root.layer.position = CGPoint(x:4625.437, y:793.755)
		homeArrows04__root.alpha = 0.00
		homeArrows04__xScale.transform = CGAffineTransform(scaleX: 1.32, y: 1.00)
		homeArrows04__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.32)
		homeArrows04__root.transform = CGAffineTransform(rotationAngle: 0.000)
		homeArrows04__root.addSubview(homeArrows04__xScale)
		homeArrows04__xScale.addSubview(homeArrows04__yScale)
		homeArrows04__yScale.addSubview(homeArrows04)
		__scaling__.addSubview(homeArrows04__root)
		viewsByName["Home_Arrows-04__root"] = homeArrows04__root
		viewsByName["Home_Arrows-04__xScale"] = homeArrows04__xScale
		viewsByName["Home_Arrows-04__yScale"] = homeArrows04__yScale
		viewsByName["Home_Arrows-04"] = homeArrows04

		let homeArrows03__root = _AnimationMenuPassthroughView()
		let homeArrows03__xScale = _AnimationMenuPassthroughView()
		let homeArrows03__yScale = _AnimationMenuPassthroughView()
		let homeArrows03 = UIImageView()
		let imgHomeArrows03 = UIImage(named:"Home_Arrows-03.png", in: bundle, compatibleWith: nil)
		if imgHomeArrows03 == nil {
			print("** Warning: Could not create image from 'Home_Arrows-03.png'")
		}
		homeArrows03.image = imgHomeArrows03
		homeArrows03.contentMode = .center
		homeArrows03.bounds = CGRect(x:0, y:0, width:946.0, height:946.0)
		homeArrows03__root.layer.position = CGPoint(x:6640.646, y:2871.124)
		homeArrows03__root.alpha = 0.00
		homeArrows03__xScale.transform = CGAffineTransform(scaleX: 1.30, y: 1.00)
		homeArrows03__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.30)
		homeArrows03__root.transform = CGAffineTransform(rotationAngle: 0.000)
		homeArrows03__root.addSubview(homeArrows03__xScale)
		homeArrows03__xScale.addSubview(homeArrows03__yScale)
		homeArrows03__yScale.addSubview(homeArrows03)
		__scaling__.addSubview(homeArrows03__root)
		viewsByName["Home_Arrows-03__root"] = homeArrows03__root
		viewsByName["Home_Arrows-03__xScale"] = homeArrows03__xScale
		viewsByName["Home_Arrows-03__yScale"] = homeArrows03__yScale
		viewsByName["Home_Arrows-03"] = homeArrows03

		let cameraPlus__root = _AnimationMenuPassthroughView()
		let cameraPlus__xScale = _AnimationMenuPassthroughView()
		let cameraPlus__yScale = _AnimationMenuPassthroughView()
		let cameraPlus = UIImageView()
		let imgCameraPlus = UIImage(named:"Camera_plus.png", in: bundle, compatibleWith: nil)
		if imgCameraPlus == nil {
			print("** Warning: Could not create image from 'Camera_plus.png'")
		}
		cameraPlus.image = imgCameraPlus
		cameraPlus.contentMode = .center
		cameraPlus.bounds = CGRect(x:0, y:0, width:470.0, height:638.0)
		cameraPlus__root.layer.position = CGPoint(x:7555.816, y:1780.656)
		cameraPlus__root.alpha = 0.00
		cameraPlus__xScale.transform = CGAffineTransform(scaleX: 1.95, y: 1.00)
		cameraPlus__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.95)
		cameraPlus__root.transform = CGAffineTransform(rotationAngle: 0.000)
		cameraPlus__root.addSubview(cameraPlus__xScale)
		cameraPlus__xScale.addSubview(cameraPlus__yScale)
		cameraPlus__yScale.addSubview(cameraPlus)
		__scaling__.addSubview(cameraPlus__root)
		viewsByName["Camera_plus__root"] = cameraPlus__root
		viewsByName["Camera_plus__xScale"] = cameraPlus__xScale
		viewsByName["Camera_plus__yScale"] = cameraPlus__yScale
		viewsByName["Camera_plus"] = cameraPlus

		let cameraMinus__root = _AnimationMenuPassthroughView()
		let cameraMinus__xScale = _AnimationMenuPassthroughView()
		let cameraMinus__yScale = _AnimationMenuPassthroughView()
		let cameraMinus = UIImageView()
		let imgCameraMinus = UIImage(named:"Camera_minus.png", in: bundle, compatibleWith: nil)
		if imgCameraMinus == nil {
			print("** Warning: Could not create image from 'Camera_minus.png'")
		}
		cameraMinus.image = imgCameraMinus
		cameraMinus.contentMode = .center
		cameraMinus.bounds = CGRect(x:0, y:0, width:470.0, height:638.0)
		cameraMinus__root.layer.position = CGPoint(x:7565.122, y:3742.016)
		cameraMinus__root.alpha = 0.00
		cameraMinus__xScale.transform = CGAffineTransform(scaleX: 1.99, y: 1.00)
		cameraMinus__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.99)
		cameraMinus__root.transform = CGAffineTransform(rotationAngle: 0.000)
		cameraMinus__root.addSubview(cameraMinus__xScale)
		cameraMinus__xScale.addSubview(cameraMinus__yScale)
		cameraMinus__yScale.addSubview(cameraMinus)
		__scaling__.addSubview(cameraMinus__root)
		viewsByName["Camera_minus__root"] = cameraMinus__root
		viewsByName["Camera_minus__xScale"] = cameraMinus__xScale
		viewsByName["Camera_minus__yScale"] = cameraMinus__yScale
		viewsByName["Camera_minus"] = cameraMinus

		let zoom__root = _AnimationMenuPassthroughView()
		let zoom__xScale = _AnimationMenuPassthroughView()
		let zoom__yScale = _AnimationMenuPassthroughView()
		let zoom = UIImageView()
		let imgZoom = UIImage(named:"zoom.png", in: bundle, compatibleWith: nil)
		if imgZoom == nil {
			print("** Warning: Could not create image from 'zoom.png'")
		}
		zoom.image = imgZoom
		zoom.contentMode = .center
		zoom.bounds = CGRect(x:0, y:0, width:225.0, height:77.0)
		zoom__root.layer.position = CGPoint(x:7561.963, y:2773.815)
		zoom__root.alpha = 0.00
		zoom__xScale.transform = CGAffineTransform(scaleX: 3.35, y: 1.00)
		zoom__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 3.35)
		zoom__root.transform = CGAffineTransform(rotationAngle: 0.000)
		zoom__root.addSubview(zoom__xScale)
		zoom__xScale.addSubview(zoom__yScale)
		zoom__yScale.addSubview(zoom)
		__scaling__.addSubview(zoom__root)
		viewsByName["zoom__root"] = zoom__root
		viewsByName["zoom__xScale"] = zoom__xScale
		viewsByName["zoom__yScale"] = zoom__yScale
		viewsByName["zoom"] = zoom

		let info__root = _AnimationMenuPassthroughView()
		let info__xScale = _AnimationMenuPassthroughView()
		let info__yScale = _AnimationMenuPassthroughView()
		let info = UIImageView()
		let imgInfo = UIImage(named:"info.png", in: bundle, compatibleWith: nil)
		if imgInfo == nil {
			print("** Warning: Could not create image from 'info.png'")
		}
		info.image = imgInfo
		info.contentMode = .center
		info.bounds = CGRect(x:0, y:0, width:552.0, height:552.0)
		info__root.layer.position = CGPoint(x:9211.127, y:529.611)
		info__root.alpha = 0.00
		info__xScale.transform = CGAffineTransform(scaleX: 1.13, y: 1.00)
		info__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.13)
		info__root.transform = CGAffineTransform(rotationAngle: 0.000)
		info__root.addSubview(info__xScale)
		info__xScale.addSubview(info__yScale)
		info__yScale.addSubview(info)
		__scaling__.addSubview(info__root)
		viewsByName["info__root"] = info__root
		viewsByName["info__xScale"] = info__xScale
		viewsByName["info__yScale"] = info__yScale
		viewsByName["info"] = info

		let numpad__root = _AnimationMenuPassthroughView()
		let numpad__xScale = _AnimationMenuPassthroughView()
		let numpad__yScale = _AnimationMenuPassthroughView()
		let numpad = UIImageView()
		let imgNumpad = UIImage(named:"numpad.png", in: bundle, compatibleWith: nil)
		if imgNumpad == nil {
			print("** Warning: Could not create image from 'numpad.png'")
		}
		numpad.image = imgNumpad
		numpad.contentMode = .center
		numpad.bounds = CGRect(x:0, y:0, width:637.0, height:845.0)
		numpad__root.layer.position = CGPoint(x:577.820, y:2723.210)
		numpad__root.alpha = 0.00
		numpad__xScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		numpad__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		numpad__root.transform = CGAffineTransform(rotationAngle: 0.000)
		numpad__root.addSubview(numpad__xScale)
		numpad__xScale.addSubview(numpad__yScale)
		numpad__yScale.addSubview(numpad)
		__scaling__.addSubview(numpad__root)
		viewsByName["numpad__root"] = numpad__root
		viewsByName["numpad__xScale"] = numpad__xScale
		viewsByName["numpad__yScale"] = numpad__yScale
		viewsByName["numpad"] = numpad

		let circle01__root = _AnimationMenuPassthroughView()
		let circle01__xScale = _AnimationMenuPassthroughView()
		let circle01__yScale = _AnimationMenuPassthroughView()
		let circle01 = UIImageView()
		let imgCircle01 = UIImage(named:"Circle-01.png", in: bundle, compatibleWith: nil)
		if imgCircle01 == nil {
			print("** Warning: Could not create image from 'Circle-01.png'")
		}
		circle01.image = imgCircle01
		circle01.contentMode = .center
		circle01.bounds = CGRect(x:0, y:0, width:413.0, height:413.0)
		circle01__root.layer.position = CGPoint(x:735.547, y:4674.837)
		circle01__xScale.transform = CGAffineTransform(scaleX: 2.27, y: 1.00)
		circle01__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 2.27)
		circle01__root.transform = CGAffineTransform(rotationAngle: 0.000)
		circle01__root.addSubview(circle01__xScale)
		circle01__xScale.addSubview(circle01__yScale)
		circle01__yScale.addSubview(circle01)
		__scaling__.addSubview(circle01__root)
		viewsByName["Circle-01__root"] = circle01__root
		viewsByName["Circle-01__xScale"] = circle01__xScale
		viewsByName["Circle-01__yScale"] = circle01__yScale
		viewsByName["Circle-01"] = circle01

		let circle01Mask__root = _AnimationMenuPassthroughView()
		let circle01Mask__xScale = _AnimationMenuPassthroughView()
		let circle01Mask__yScale = _AnimationMenuPassthroughView()
		let circle01Mask = UIImageView()
		let imgSquare = UIImage(named:"square.png", in: bundle, compatibleWith: nil)
		if imgSquare == nil {
			print("** Warning: Could not create image from 'square.png'")
		}
		circle01Mask.image = imgSquare
		circle01Mask.contentMode = .center
		circle01Mask.bounds = CGRect(x:0, y:0, width:185.0, height:184.5)
		circle01Mask__root.layer.position = CGPoint(x:166.173, y:428.452)
		circle01Mask__xScale.transform = CGAffineTransform(scaleX: 2.91, y: 1.00)
		circle01Mask__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 0.19)
		circle01Mask__root.transform = CGAffineTransform(rotationAngle: 0.162)
		circle01Mask__root.addSubview(circle01Mask__xScale)
		circle01Mask__xScale.addSubview(circle01Mask__yScale)
		circle01Mask__yScale.addSubview(circle01Mask)
		circle01.mask = circle01Mask__root
		viewsByName["Circle-01_mask__root"] = circle01Mask__root
		viewsByName["Circle-01_mask__xScale"] = circle01Mask__xScale
		viewsByName["Circle-01_mask__yScale"] = circle01Mask__yScale
		viewsByName["Circle-01_mask"] = circle01Mask

		let fsIcon01__root = _AnimationMenuPassthroughView()
		let fsIcon01__xScale = _AnimationMenuPassthroughView()
		let fsIcon01__yScale = _AnimationMenuPassthroughView()
		let fsIcon01 = UIImageView()
		let imgFsIcon01 = UIImage(named:"fs_icon-01.png", in: bundle, compatibleWith: nil)
		if imgFsIcon01 == nil {
			print("** Warning: Could not create image from 'fs_icon-01.png'")
		}
		fsIcon01.image = imgFsIcon01
		fsIcon01.contentMode = .center
		fsIcon01.bounds = CGRect(x:0, y:0, width:638.0, height:638.0)
		fsIcon01__root.layer.position = CGPoint(x:3805.199, y:6757.217)
		fsIcon01__root.alpha = 0.00
		fsIcon01__xScale.transform = CGAffineTransform(scaleX: 1.30, y: 1.00)
		fsIcon01__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.30)
		fsIcon01__root.transform = CGAffineTransform(rotationAngle: 0.000)
		fsIcon01__root.addSubview(fsIcon01__xScale)
		fsIcon01__xScale.addSubview(fsIcon01__yScale)
		fsIcon01__yScale.addSubview(fsIcon01)
		__scaling__.addSubview(fsIcon01__root)
		viewsByName["fs_icon-01__root"] = fsIcon01__root
		viewsByName["fs_icon-01__xScale"] = fsIcon01__xScale
		viewsByName["fs_icon-01__yScale"] = fsIcon01__yScale
		viewsByName["fs_icon-01"] = fsIcon01

		let fsIcon02__root = _AnimationMenuPassthroughView()
		let fsIcon02__xScale = _AnimationMenuPassthroughView()
		let fsIcon02__yScale = _AnimationMenuPassthroughView()
		let fsIcon02 = UIImageView()
		let imgFsIcon02 = UIImage(named:"fs_icon-02.png", in: bundle, compatibleWith: nil)
		if imgFsIcon02 == nil {
			print("** Warning: Could not create image from 'fs_icon-02.png'")
		}
		fsIcon02.image = imgFsIcon02
		fsIcon02.contentMode = .center
		fsIcon02.bounds = CGRect(x:0, y:0, width:638.0, height:638.0)
		fsIcon02__root.layer.position = CGPoint(x:5147.223, y:6757.479)
		fsIcon02__root.alpha = 0.00
		fsIcon02__xScale.transform = CGAffineTransform(scaleX: 1.31, y: 1.00)
		fsIcon02__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.31)
		fsIcon02__root.transform = CGAffineTransform(rotationAngle: 0.000)
		fsIcon02__root.addSubview(fsIcon02__xScale)
		fsIcon02__xScale.addSubview(fsIcon02__yScale)
		fsIcon02__yScale.addSubview(fsIcon02)
		__scaling__.addSubview(fsIcon02__root)
		viewsByName["fs_icon-02__root"] = fsIcon02__root
		viewsByName["fs_icon-02__xScale"] = fsIcon02__xScale
		viewsByName["fs_icon-02__yScale"] = fsIcon02__yScale
		viewsByName["fs_icon-02"] = fsIcon02

		let fsIcon03__root = _AnimationMenuPassthroughView()
		let fsIcon03__xScale = _AnimationMenuPassthroughView()
		let fsIcon03__yScale = _AnimationMenuPassthroughView()
		let fsIcon03 = UIImageView()
		let imgFsIcon03 = UIImage(named:"fs_icon-03.png", in: bundle, compatibleWith: nil)
		if imgFsIcon03 == nil {
			print("** Warning: Could not create image from 'fs_icon-03.png'")
		}
		fsIcon03.image = imgFsIcon03
		fsIcon03.contentMode = .center
		fsIcon03.bounds = CGRect(x:0, y:0, width:638.0, height:638.0)
		fsIcon03__root.layer.position = CGPoint(x:6498.644, y:6756.886)
		fsIcon03__root.alpha = 0.00
		fsIcon03__xScale.transform = CGAffineTransform(scaleX: 1.31, y: 1.00)
		fsIcon03__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.31)
		fsIcon03__root.transform = CGAffineTransform(rotationAngle: 0.000)
		fsIcon03__root.addSubview(fsIcon03__xScale)
		fsIcon03__xScale.addSubview(fsIcon03__yScale)
		fsIcon03__yScale.addSubview(fsIcon03)
		__scaling__.addSubview(fsIcon03__root)
		viewsByName["fs_icon-03__root"] = fsIcon03__root
		viewsByName["fs_icon-03__xScale"] = fsIcon03__xScale
		viewsByName["fs_icon-03__yScale"] = fsIcon03__yScale
		viewsByName["fs_icon-03"] = fsIcon03

		let fsIcon04__root = _AnimationMenuPassthroughView()
		let fsIcon04__xScale = _AnimationMenuPassthroughView()
		let fsIcon04__yScale = _AnimationMenuPassthroughView()
		let fsIcon04 = UIImageView()
		let imgFsIcon04 = UIImage(named:"fs_icon-04.png", in: bundle, compatibleWith: nil)
		if imgFsIcon04 == nil {
			print("** Warning: Could not create image from 'fs_icon-04.png'")
		}
		fsIcon04.image = imgFsIcon04
		fsIcon04.contentMode = .center
		fsIcon04.bounds = CGRect(x:0, y:0, width:638.0, height:638.0)
		fsIcon04__root.layer.position = CGPoint(x:7836.519, y:6757.972)
		fsIcon04__root.alpha = 0.00
		fsIcon04__xScale.transform = CGAffineTransform(scaleX: 1.31, y: 1.00)
		fsIcon04__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.31)
		fsIcon04__root.transform = CGAffineTransform(rotationAngle: 0.000)
		fsIcon04__root.addSubview(fsIcon04__xScale)
		fsIcon04__xScale.addSubview(fsIcon04__yScale)
		fsIcon04__yScale.addSubview(fsIcon04)
		__scaling__.addSubview(fsIcon04__root)
		viewsByName["fs_icon-04__root"] = fsIcon04__root
		viewsByName["fs_icon-04__xScale"] = fsIcon04__xScale
		viewsByName["fs_icon-04__yScale"] = fsIcon04__yScale
		viewsByName["fs_icon-04"] = fsIcon04

		let fsIcon05__root = _AnimationMenuPassthroughView()
		let fsIcon05__xScale = _AnimationMenuPassthroughView()
		let fsIcon05__yScale = _AnimationMenuPassthroughView()
		let fsIcon05 = UIImageView()
		let imgFsIcon05 = UIImage(named:"fs_icon-05.png", in: bundle, compatibleWith: nil)
		if imgFsIcon05 == nil {
			print("** Warning: Could not create image from 'fs_icon-05.png'")
		}
		fsIcon05.image = imgFsIcon05
		fsIcon05.contentMode = .center
		fsIcon05.bounds = CGRect(x:0, y:0, width:638.0, height:638.0)
		fsIcon05__root.layer.position = CGPoint(x:9176.281, y:6760.679)
		fsIcon05__root.alpha = 0.00
		fsIcon05__xScale.transform = CGAffineTransform(scaleX: 1.31, y: 1.00)
		fsIcon05__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.31)
		fsIcon05__root.transform = CGAffineTransform(rotationAngle: 0.000)
		fsIcon05__root.addSubview(fsIcon05__xScale)
		fsIcon05__xScale.addSubview(fsIcon05__yScale)
		fsIcon05__yScale.addSubview(fsIcon05)
		__scaling__.addSubview(fsIcon05__root)
		viewsByName["fs_icon-05__root"] = fsIcon05__root
		viewsByName["fs_icon-05__xScale"] = fsIcon05__xScale
		viewsByName["fs_icon-05__yScale"] = fsIcon05__yScale
		viewsByName["fs_icon-05"] = fsIcon05

		let homeArrows02__root = _AnimationMenuPassthroughView()
		let homeArrows02__xScale = _AnimationMenuPassthroughView()
		let homeArrows02__yScale = _AnimationMenuPassthroughView()
		let homeArrows02 = UIImageView()
		let imgHomeArrows02 = UIImage(named:"Home_Arrows-02.png", in: bundle, compatibleWith: nil)
		if imgHomeArrows02 == nil {
			print("** Warning: Could not create image from 'Home_Arrows-02.png'")
		}
		homeArrows02.image = imgHomeArrows02
		homeArrows02.contentMode = .center
		homeArrows02.bounds = CGRect(x:0, y:0, width:946.0, height:946.0)
		homeArrows02__root.layer.position = CGPoint(x:4676.375, y:2692.976)
		homeArrows02__root.alpha = 0.00
		homeArrows02__xScale.transform = CGAffineTransform(scaleX: 1.31, y: 1.00)
		homeArrows02__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.31)
		homeArrows02__root.transform = CGAffineTransform(rotationAngle: 0.000)
		homeArrows02__root.addSubview(homeArrows02__xScale)
		homeArrows02__xScale.addSubview(homeArrows02__yScale)
		homeArrows02__yScale.addSubview(homeArrows02)
		__scaling__.addSubview(homeArrows02__root)
		viewsByName["Home_Arrows-02__root"] = homeArrows02__root
		viewsByName["Home_Arrows-02__xScale"] = homeArrows02__xScale
		viewsByName["Home_Arrows-02__yScale"] = homeArrows02__yScale
		viewsByName["Home_Arrows-02"] = homeArrows02

		let acceptCall01__root = _AnimationMenuPassthroughView()
		let acceptCall01__xScale = _AnimationMenuPassthroughView()
		let acceptCall01__yScale = _AnimationMenuPassthroughView()
		let acceptCall01 = UIImageView()
		let imgAcceptCall01 = UIImage(named:"AcceptCall-01.png", in: bundle, compatibleWith: nil)
		if imgAcceptCall01 == nil {
			print("** Warning: Could not create image from 'AcceptCall-01.png'")
		}
		acceptCall01.image = imgAcceptCall01
		acceptCall01.contentMode = .center
		acceptCall01.bounds = CGRect(x:0, y:0, width:226.0, height:227.0)
		acceptCall01__root.layer.position = CGPoint(x:9122.000, y:1973.185)
		acceptCall01__root.alpha = 0.06
		acceptCall01__xScale.transform = CGAffineTransform(scaleX: 3.60, y: 1.00)
		acceptCall01__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 3.60)
		acceptCall01__root.transform = CGAffineTransform(rotationAngle: 0.000)
		acceptCall01__root.addSubview(acceptCall01__xScale)
		acceptCall01__xScale.addSubview(acceptCall01__yScale)
		acceptCall01__yScale.addSubview(acceptCall01)
		__scaling__.addSubview(acceptCall01__root)
		viewsByName["AcceptCall-01__root"] = acceptCall01__root
		viewsByName["AcceptCall-01__xScale"] = acceptCall01__xScale
		viewsByName["AcceptCall-01__yScale"] = acceptCall01__yScale
		viewsByName["AcceptCall-01"] = acceptCall01

		let rejectCall01__root = _AnimationMenuPassthroughView()
		let rejectCall01__xScale = _AnimationMenuPassthroughView()
		let rejectCall01__yScale = _AnimationMenuPassthroughView()
		let rejectCall01 = UIImageView()
		let imgRejectCall01 = UIImage(named:"RejectCall-01.png", in: bundle, compatibleWith: nil)
		if imgRejectCall01 == nil {
			print("** Warning: Could not create image from 'RejectCall-01.png'")
		}
		rejectCall01.image = imgRejectCall01
		rejectCall01.contentMode = .center
		rejectCall01.bounds = CGRect(x:0, y:0, width:226.0, height:227.0)
		rejectCall01__root.layer.position = CGPoint(x:9122.000, y:3043.618)
		rejectCall01__root.alpha = 0.06
		rejectCall01__xScale.transform = CGAffineTransform(scaleX: 3.60, y: 1.00)
		rejectCall01__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 3.60)
		rejectCall01__root.transform = CGAffineTransform(rotationAngle: 0.000)
		rejectCall01__root.addSubview(rejectCall01__xScale)
		rejectCall01__xScale.addSubview(rejectCall01__yScale)
		rejectCall01__yScale.addSubview(rejectCall01)
		__scaling__.addSubview(rejectCall01__root)
		viewsByName["RejectCall-01__root"] = rejectCall01__root
		viewsByName["RejectCall-01__xScale"] = rejectCall01__xScale
		viewsByName["RejectCall-01__yScale"] = rejectCall01__yScale
		viewsByName["RejectCall-01"] = rejectCall01

		let changeLayoutBtn01__root = _AnimationMenuPassthroughView()
		let changeLayoutBtn01__xScale = _AnimationMenuPassthroughView()
		let changeLayoutBtn01__yScale = _AnimationMenuPassthroughView()
		let changeLayoutBtn01 = UIImageView()
		let imgChangeLayoutBtn01 = UIImage(named:"changeLayoutBtn-01.png", in: bundle, compatibleWith: nil)
		if imgChangeLayoutBtn01 == nil {
			print("** Warning: Could not create image from 'changeLayoutBtn-01.png'")
		}
		changeLayoutBtn01.image = imgChangeLayoutBtn01
		changeLayoutBtn01.contentMode = .center
		changeLayoutBtn01.bounds = CGRect(x:0, y:0, width:226.0, height:227.0)
		changeLayoutBtn01__root.layer.position = CGPoint(x:9122.000, y:4580.996)
		changeLayoutBtn01__root.alpha = 0.06
		changeLayoutBtn01__xScale.transform = CGAffineTransform(scaleX: 3.60, y: 1.00)
		changeLayoutBtn01__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 3.60)
		changeLayoutBtn01__root.transform = CGAffineTransform(rotationAngle: 0.000)
		changeLayoutBtn01__root.addSubview(changeLayoutBtn01__xScale)
		changeLayoutBtn01__xScale.addSubview(changeLayoutBtn01__yScale)
		changeLayoutBtn01__yScale.addSubview(changeLayoutBtn01)
		__scaling__.addSubview(changeLayoutBtn01__root)
		viewsByName["changeLayoutBtn-01__root"] = changeLayoutBtn01__root
		viewsByName["changeLayoutBtn-01__xScale"] = changeLayoutBtn01__xScale
		viewsByName["changeLayoutBtn-01__yScale"] = changeLayoutBtn01__yScale
		viewsByName["changeLayoutBtn-01"] = changeLayoutBtn01

		let phoneBookbtn201__root = _AnimationMenuPassthroughView()
		let phoneBookbtn201__xScale = _AnimationMenuPassthroughView()
		let phoneBookbtn201__yScale = _AnimationMenuPassthroughView()
		let phoneBookbtn201 = UIImageView()
		let imgPhoneBookbtn201 = UIImage(named:"phoneBookbtn2-01.png", in: bundle, compatibleWith: nil)
		if imgPhoneBookbtn201 == nil {
			print("** Warning: Could not create image from 'phoneBookbtn2-01.png'")
		}
		phoneBookbtn201.image = imgPhoneBookbtn201
		phoneBookbtn201.contentMode = .center
		phoneBookbtn201.layer.anchorPoint = CGPoint(x:0.536, y:0.511)
		phoneBookbtn201.bounds = CGRect(x:0, y:0, width:226.0, height:227.0)
		phoneBookbtn201__root.layer.position = CGPoint(x:9121.323, y:5622.859)
		phoneBookbtn201__root.alpha = 0.06
		phoneBookbtn201__xScale.transform = CGAffineTransform(scaleX: 3.60, y: 1.00)
		phoneBookbtn201__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 3.60)
		phoneBookbtn201__root.transform = CGAffineTransform(rotationAngle: 0.000)
		phoneBookbtn201__root.addSubview(phoneBookbtn201__xScale)
		phoneBookbtn201__xScale.addSubview(phoneBookbtn201__yScale)
		phoneBookbtn201__yScale.addSubview(phoneBookbtn201)
		__scaling__.addSubview(phoneBookbtn201__root)
		viewsByName["phoneBookbtn2-01__root"] = phoneBookbtn201__root
		viewsByName["phoneBookbtn2-01__xScale"] = phoneBookbtn201__xScale
		viewsByName["phoneBookbtn2-01__yScale"] = phoneBookbtn201__yScale
		viewsByName["phoneBookbtn2-01"] = phoneBookbtn201

		self.viewsByName = viewsByName
	}

	// - MARK: Menu Animation

	func addMenuAnimation() {
		addMenuAnimation(beginTime: 0, fillMode: kCAFillModeBoth, removedOnCompletion: false, completion: nil)
	}

	func addMenuAnimation(completion: ((Bool) -> Void)?) {
		addMenuAnimation(beginTime: 0, fillMode: kCAFillModeBoth, removedOnCompletion: false, completion: completion)
	}

	func addMenuAnimation(removedOnCompletion: Bool) {
		addMenuAnimation(beginTime: 0, fillMode: removedOnCompletion ? kCAFillModeRemoved : kCAFillModeBoth, removedOnCompletion: removedOnCompletion, completion: nil)
	}

	func addMenuAnimation(removedOnCompletion: Bool, completion: ((Bool) -> Void)?) {
		addMenuAnimation(beginTime: 0, fillMode: removedOnCompletion ? kCAFillModeRemoved : kCAFillModeBoth, removedOnCompletion: removedOnCompletion, completion: completion)
	}

	func addMenuAnimation(beginTime: CFTimeInterval, fillMode: String, removedOnCompletion: Bool, completion: ((Bool) -> Void)?) {
		let linearTiming = CAMediaTimingFunction(name: kCAMediaTimingFunctionLinear)
		let instantTiming = CAMediaTimingFunction(name: kCAMediaTimingFunctionDefault)
		if let complete = completion {
			let representativeAnimation = CABasicAnimation(keyPath: "not.a.real.key")
			representativeAnimation.duration = 2.150
			representativeAnimation.delegate = self
			self.layer.add(representativeAnimation, forKey: "MenuAnimation")
			self.animationCompletions[layer.animation(forKey: "MenuAnimation")!] = complete
		}

		let circle01OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		circle01OpacityAnimation.duration = 2.150
		circle01OpacityAnimation.values = [1.000, 1.000, 0.000, 0.000] as [Float]
		circle01OpacityAnimation.keyTimes = [0.000, 0.325, 0.326, 1.000] as [NSNumber]
		circle01OpacityAnimation.timingFunctions = [instantTiming, instantTiming, linearTiming]
		circle01OpacityAnimation.beginTime = beginTime
		circle01OpacityAnimation.fillMode = fillMode
		circle01OpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Circle-01__root"]?.layer.add(circle01OpacityAnimation, forKey:"Menu Animation_Opacity")

		let homeIconOpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		homeIconOpacityAnimation.duration = 2.150
		homeIconOpacityAnimation.values = [0.000, 0.000, 1.000, 1.000] as [Float]
		homeIconOpacityAnimation.keyTimes = [0.000, 0.698, 0.767, 1.000] as [NSNumber]
		homeIconOpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		homeIconOpacityAnimation.beginTime = beginTime
		homeIconOpacityAnimation.fillMode = fillMode
		homeIconOpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["home_icon__root"]?.layer.add(homeIconOpacityAnimation, forKey:"Menu Animation_Opacity")

		let menuIcons04ScaleXAnimation = CAKeyframeAnimation(keyPath: "transform.scale.x")
		menuIcons04ScaleXAnimation.duration = 2.150
		menuIcons04ScaleXAnimation.values = [1.122, 1.119, 0.905, 0.905] as [Float]
		menuIcons04ScaleXAnimation.keyTimes = [0.000, 0.326, 0.465, 1.000] as [NSNumber]
		menuIcons04ScaleXAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		menuIcons04ScaleXAnimation.beginTime = beginTime
		menuIcons04ScaleXAnimation.fillMode = fillMode
		menuIcons04ScaleXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["menu_icons-04__xScale"]?.layer.add(menuIcons04ScaleXAnimation, forKey:"Menu Animation_ScaleX")

		let menuIcons04ScaleYAnimation = CAKeyframeAnimation(keyPath: "transform.scale.y")
		menuIcons04ScaleYAnimation.duration = 2.150
		menuIcons04ScaleYAnimation.values = [1.122, 1.119, 0.894, 0.894] as [Float]
		menuIcons04ScaleYAnimation.keyTimes = [0.000, 0.326, 0.465, 1.000] as [NSNumber]
		menuIcons04ScaleYAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		menuIcons04ScaleYAnimation.beginTime = beginTime
		menuIcons04ScaleYAnimation.fillMode = fillMode
		menuIcons04ScaleYAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["menu_icons-04__yScale"]?.layer.add(menuIcons04ScaleYAnimation, forKey:"Menu Animation_ScaleY")

		let menuIcons04TranslationXAnimation = CAKeyframeAnimation(keyPath: "transform.translation.x")
		menuIcons04TranslationXAnimation.duration = 2.150
		menuIcons04TranslationXAnimation.values = [0.000, -12.210, -1017.524, -1017.524] as [Float]
		menuIcons04TranslationXAnimation.keyTimes = [0.000, 0.326, 0.465, 1.000] as [NSNumber]
		menuIcons04TranslationXAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		menuIcons04TranslationXAnimation.beginTime = beginTime
		menuIcons04TranslationXAnimation.fillMode = fillMode
		menuIcons04TranslationXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["menu_icons-04__root"]?.layer.add(menuIcons04TranslationXAnimation, forKey:"Menu Animation_TranslationX")

		let menuIcons04TranslationYAnimation = CAKeyframeAnimation(keyPath: "transform.translation.y")
		menuIcons04TranslationYAnimation.duration = 2.150
		menuIcons04TranslationYAnimation.values = [0.000, 3.874, 322.814, 322.814] as [Float]
		menuIcons04TranslationYAnimation.keyTimes = [0.000, 0.326, 0.465, 1.000] as [NSNumber]
		menuIcons04TranslationYAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		menuIcons04TranslationYAnimation.beginTime = beginTime
		menuIcons04TranslationYAnimation.fillMode = fillMode
		menuIcons04TranslationYAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["menu_icons-04__root"]?.layer.add(menuIcons04TranslationYAnimation, forKey:"Menu Animation_TranslationY")

		let changeLayoutBtn01OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		changeLayoutBtn01OpacityAnimation.duration = 2.150
		changeLayoutBtn01OpacityAnimation.values = [0.060, 0.060, 1.000, 1.000] as [Float]
		changeLayoutBtn01OpacityAnimation.keyTimes = [0.000, 0.616, 0.663, 1.000] as [NSNumber]
		changeLayoutBtn01OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		changeLayoutBtn01OpacityAnimation.beginTime = beginTime
		changeLayoutBtn01OpacityAnimation.fillMode = fillMode
		changeLayoutBtn01OpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["changeLayoutBtn-01__root"]?.layer.add(changeLayoutBtn01OpacityAnimation, forKey:"Menu Animation_Opacity")

		let _000125RotationAnimation = CAKeyframeAnimation(keyPath: "transform.rotation.z")
		_000125RotationAnimation.duration = 2.150
		_000125RotationAnimation.values = [1.431, 1.376, 1.225, 1.112, 1.068, 0.978, 0.914, 0.645, 0.577, 0.423, 0.250, 0.146, 0.073, 0.073] as [Float]
		_000125RotationAnimation.keyTimes = [0.000, 0.558, 0.570, 0.583, 0.593, 0.605, 0.623, 0.628, 0.642, 0.660, 0.679, 0.693, 0.707, 1.000] as [NSNumber]
		_000125RotationAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming]
		_000125RotationAnimation.beginTime = beginTime
		_000125RotationAnimation.fillMode = fillMode
		_000125RotationAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["0001 2 5__root"]?.layer.add(_000125RotationAnimation, forKey:"Menu Animation_Rotation")

		let _000125OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		_000125OpacityAnimation.duration = 2.150
		_000125OpacityAnimation.values = [1.000, 1.000, 0.000, 1.000, 1.000] as [Float]
		_000125OpacityAnimation.keyTimes = [0.000, 0.623, 0.623, 0.628, 1.000] as [NSNumber]
		_000125OpacityAnimation.timingFunctions = [instantTiming, instantTiming, linearTiming, linearTiming]
		_000125OpacityAnimation.beginTime = beginTime
		_000125OpacityAnimation.fillMode = fillMode
		_000125OpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["0001 2 5__root"]?.layer.add(_000125OpacityAnimation, forKey:"Menu Animation_Opacity")

		let _000125ScaleXAnimation = CAKeyframeAnimation(keyPath: "transform.scale.x")
		_000125ScaleXAnimation.duration = 2.150
		_000125ScaleXAnimation.values = [0.106, 0.106, 1.394, 0.031, 0.945, 1.201, -0.020, -0.020] as [Float]
		_000125ScaleXAnimation.keyTimes = [0.000, 0.535, 0.616, 0.623, 0.642, 0.707, 0.721, 1.000] as [NSNumber]
		_000125ScaleXAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming]
		_000125ScaleXAnimation.beginTime = beginTime
		_000125ScaleXAnimation.fillMode = fillMode
		_000125ScaleXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["0001 2 5__xScale"]?.layer.add(_000125ScaleXAnimation, forKey:"Menu Animation_ScaleX")

		let _000125TranslationXAnimation = CAKeyframeAnimation(keyPath: "transform.translation.x")
		_000125TranslationXAnimation.duration = 2.150
		_000125TranslationXAnimation.values = [0.000, 0.000, -18.180, -111.441, -305.855, -528.746, -773.785, -982.203, -1163.953, -1338.466, -2217.396, -2819.235, -3639.039, -4372.320, -5083.742, -5620.007, -5875.513, -5875.513] as [Float]
		_000125TranslationXAnimation.keyTimes = [0.000, 0.535, 0.547, 0.558, 0.570, 0.583, 0.593, 0.605, 0.616, 0.624, 0.628, 0.642, 0.660, 0.679, 0.693, 0.707, 0.721, 1.000] as [NSNumber]
		_000125TranslationXAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming]
		_000125TranslationXAnimation.beginTime = beginTime
		_000125TranslationXAnimation.fillMode = fillMode
		_000125TranslationXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["0001 2 5__root"]?.layer.add(_000125TranslationXAnimation, forKey:"Menu Animation_TranslationX")

		let _000125TranslationYAnimation = CAKeyframeAnimation(keyPath: "transform.translation.y")
		_000125TranslationYAnimation.duration = 2.150
		_000125TranslationYAnimation.values = [0.000, 0.000, -129.599, -657.216, -1299.228, -1859.540, -2325.966, -2665.868, -2929.851, -3156.420, -4045.232, -4470.909, -4911.402, -5174.652, -5342.465, -5420.137, -5438.904, -5438.904] as [Float]
		_000125TranslationYAnimation.keyTimes = [0.000, 0.535, 0.547, 0.558, 0.570, 0.583, 0.593, 0.605, 0.616, 0.624, 0.628, 0.642, 0.660, 0.679, 0.693, 0.707, 0.721, 1.000] as [NSNumber]
		_000125TranslationYAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming]
		_000125TranslationYAnimation.beginTime = beginTime
		_000125TranslationYAnimation.fillMode = fillMode
		_000125TranslationYAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["0001 2 5__root"]?.layer.add(_000125TranslationYAnimation, forKey:"Menu Animation_TranslationY")

		let fsIcon01OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		fsIcon01OpacityAnimation.duration = 2.150
		fsIcon01OpacityAnimation.values = [0.000, 0.000, 1.000, 1.000] as [Float]
		fsIcon01OpacityAnimation.keyTimes = [0.000, 0.453, 0.477, 1.000] as [NSNumber]
		fsIcon01OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		fsIcon01OpacityAnimation.beginTime = beginTime
		fsIcon01OpacityAnimation.fillMode = fillMode
		fsIcon01OpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["fs_icon-01__root"]?.layer.add(fsIcon01OpacityAnimation, forKey:"Menu Animation_Opacity")

		let homeArrows02OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		homeArrows02OpacityAnimation.duration = 2.150
		homeArrows02OpacityAnimation.values = [0.000, 0.000, 1.000, 1.000] as [Float]
		homeArrows02OpacityAnimation.keyTimes = [0.000, 0.616, 0.640, 1.000] as [NSNumber]
		homeArrows02OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		homeArrows02OpacityAnimation.beginTime = beginTime
		homeArrows02OpacityAnimation.fillMode = fillMode
		homeArrows02OpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Home_Arrows-02__root"]?.layer.add(homeArrows02OpacityAnimation, forKey:"Menu Animation_Opacity")

		let menuIcons02ScaleXAnimation = CAKeyframeAnimation(keyPath: "transform.scale.x")
		menuIcons02ScaleXAnimation.duration = 2.150
		menuIcons02ScaleXAnimation.values = [1.133, 0.906, 0.906] as [Float]
		menuIcons02ScaleXAnimation.keyTimes = [0.000, 0.163, 1.000] as [NSNumber]
		menuIcons02ScaleXAnimation.timingFunctions = [linearTiming, linearTiming]
		menuIcons02ScaleXAnimation.beginTime = beginTime
		menuIcons02ScaleXAnimation.fillMode = fillMode
		menuIcons02ScaleXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["menu_icons-02__xScale"]?.layer.add(menuIcons02ScaleXAnimation, forKey:"Menu Animation_ScaleX")

		let menuIcons02ScaleYAnimation = CAKeyframeAnimation(keyPath: "transform.scale.y")
		menuIcons02ScaleYAnimation.duration = 2.150
		menuIcons02ScaleYAnimation.values = [1.133, 0.906, 0.906] as [Float]
		menuIcons02ScaleYAnimation.keyTimes = [0.000, 0.163, 1.000] as [NSNumber]
		menuIcons02ScaleYAnimation.timingFunctions = [linearTiming, linearTiming]
		menuIcons02ScaleYAnimation.beginTime = beginTime
		menuIcons02ScaleYAnimation.fillMode = fillMode
		menuIcons02ScaleYAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["menu_icons-02__yScale"]?.layer.add(menuIcons02ScaleYAnimation, forKey:"Menu Animation_ScaleY")

		let menuIcons02TranslationXAnimation = CAKeyframeAnimation(keyPath: "transform.translation.x")
		menuIcons02TranslationXAnimation.duration = 2.150
		menuIcons02TranslationXAnimation.values = [0.000, -469.271, -469.271] as [Float]
		menuIcons02TranslationXAnimation.keyTimes = [0.000, 0.163, 1.000] as [NSNumber]
		menuIcons02TranslationXAnimation.timingFunctions = [linearTiming, linearTiming]
		menuIcons02TranslationXAnimation.beginTime = beginTime
		menuIcons02TranslationXAnimation.fillMode = fillMode
		menuIcons02TranslationXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["menu_icons-02__root"]?.layer.add(menuIcons02TranslationXAnimation, forKey:"Menu Animation_TranslationX")

		let menuIcons02TranslationYAnimation = CAKeyframeAnimation(keyPath: "transform.translation.y")
		menuIcons02TranslationYAnimation.duration = 2.150
		menuIcons02TranslationYAnimation.values = [0.000, 714.714, 714.714] as [Float]
		menuIcons02TranslationYAnimation.keyTimes = [0.000, 0.163, 1.000] as [NSNumber]
		menuIcons02TranslationYAnimation.timingFunctions = [linearTiming, linearTiming]
		menuIcons02TranslationYAnimation.beginTime = beginTime
		menuIcons02TranslationYAnimation.fillMode = fillMode
		menuIcons02TranslationYAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["menu_icons-02__root"]?.layer.add(menuIcons02TranslationYAnimation, forKey:"Menu Animation_TranslationY")

		let homeArrows05OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		homeArrows05OpacityAnimation.duration = 2.150
		homeArrows05OpacityAnimation.values = [0.000, 0.000, 1.000, 1.000] as [Float]
		homeArrows05OpacityAnimation.keyTimes = [0.000, 0.544, 0.581, 1.000] as [NSNumber]
		homeArrows05OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		homeArrows05OpacityAnimation.beginTime = beginTime
		homeArrows05OpacityAnimation.fillMode = fillMode
		homeArrows05OpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Home_Arrows-05__root"]?.layer.add(homeArrows05OpacityAnimation, forKey:"Menu Animation_Opacity")

		let homeArrows05TranslationXAnimation = CAKeyframeAnimation(keyPath: "transform.translation.x")
		homeArrows05TranslationXAnimation.duration = 2.150
		homeArrows05TranslationXAnimation.values = [-70.990, -70.990] as [Float]
		homeArrows05TranslationXAnimation.keyTimes = [0.000, 1.000] as [NSNumber]
		homeArrows05TranslationXAnimation.timingFunctions = [linearTiming]
		homeArrows05TranslationXAnimation.beginTime = beginTime
		homeArrows05TranslationXAnimation.fillMode = fillMode
		homeArrows05TranslationXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Home_Arrows-05__root"]?.layer.add(homeArrows05TranslationXAnimation, forKey:"Menu Animation_TranslationX")

		let homeArrows05TranslationYAnimation = CAKeyframeAnimation(keyPath: "transform.translation.y")
		homeArrows05TranslationYAnimation.duration = 2.150
		homeArrows05TranslationYAnimation.values = [0.391, 0.391] as [Float]
		homeArrows05TranslationYAnimation.keyTimes = [0.000, 1.000] as [NSNumber]
		homeArrows05TranslationYAnimation.timingFunctions = [linearTiming]
		homeArrows05TranslationYAnimation.beginTime = beginTime
		homeArrows05TranslationYAnimation.fillMode = fillMode
		homeArrows05TranslationYAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Home_Arrows-05__root"]?.layer.add(homeArrows05TranslationYAnimation, forKey:"Menu Animation_TranslationY")

		let phoneBookbtn201OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		phoneBookbtn201OpacityAnimation.duration = 2.150
		phoneBookbtn201OpacityAnimation.values = [0.060, 0.060, 1.000, 1.000] as [Float]
		phoneBookbtn201OpacityAnimation.keyTimes = [0.000, 0.593, 0.640, 1.000] as [NSNumber]
		phoneBookbtn201OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		phoneBookbtn201OpacityAnimation.beginTime = beginTime
		phoneBookbtn201OpacityAnimation.fillMode = fillMode
		phoneBookbtn201OpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["phoneBookbtn2-01__root"]?.layer.add(phoneBookbtn201OpacityAnimation, forKey:"Menu Animation_Opacity")

		let rejectCall01OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		rejectCall01OpacityAnimation.duration = 2.150
		rejectCall01OpacityAnimation.values = [0.060, 0.060, 1.000, 1.000] as [Float]
		rejectCall01OpacityAnimation.keyTimes = [0.000, 0.674, 0.721, 1.000] as [NSNumber]
		rejectCall01OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		rejectCall01OpacityAnimation.beginTime = beginTime
		rejectCall01OpacityAnimation.fillMode = fillMode
		rejectCall01OpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["RejectCall-01__root"]?.layer.add(rejectCall01OpacityAnimation, forKey:"Menu Animation_Opacity")

		let acceptCall01OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		acceptCall01OpacityAnimation.duration = 2.150
		acceptCall01OpacityAnimation.values = [0.060, 0.060, 1.000, 1.000] as [Float]
		acceptCall01OpacityAnimation.keyTimes = [0.000, 0.686, 0.733, 1.000] as [NSNumber]
		acceptCall01OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		acceptCall01OpacityAnimation.beginTime = beginTime
		acceptCall01OpacityAnimation.fillMode = fillMode
		acceptCall01OpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["AcceptCall-01__root"]?.layer.add(acceptCall01OpacityAnimation, forKey:"Menu Animation_Opacity")

		let fsIcon03OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		fsIcon03OpacityAnimation.duration = 2.150
		fsIcon03OpacityAnimation.values = [0.000, 0.000, 1.000, 1.000] as [Float]
		fsIcon03OpacityAnimation.keyTimes = [0.000, 0.535, 0.558, 1.000] as [NSNumber]
		fsIcon03OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		fsIcon03OpacityAnimation.beginTime = beginTime
		fsIcon03OpacityAnimation.fillMode = fillMode
		fsIcon03OpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["fs_icon-03__root"]?.layer.add(fsIcon03OpacityAnimation, forKey:"Menu Animation_Opacity")

		let fsIcon02OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		fsIcon02OpacityAnimation.duration = 2.150
		fsIcon02OpacityAnimation.values = [0.000, 0.000, 1.000, 1.000] as [Float]
		fsIcon02OpacityAnimation.keyTimes = [0.000, 0.488, 0.512, 1.000] as [NSNumber]
		fsIcon02OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		fsIcon02OpacityAnimation.beginTime = beginTime
		fsIcon02OpacityAnimation.fillMode = fillMode
		fsIcon02OpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["fs_icon-02__root"]?.layer.add(fsIcon02OpacityAnimation, forKey:"Menu Animation_Opacity")

		let _000124RotationAnimation = CAKeyframeAnimation(keyPath: "transform.rotation.z")
		_000124RotationAnimation.duration = 2.150
		_000124RotationAnimation.values = [1.728, 1.728, 3.277, 3.362, 3.458, 3.624, 3.715, 3.854, 4.065, 4.230, 4.408, 4.534, 4.534] as [Float]
		_000124RotationAnimation.keyTimes = [0.000, 0.349, 0.349, 0.360, 0.372, 0.384, 0.395, 0.407, 0.419, 0.430, 0.442, 0.453, 1.000] as [NSNumber]
		_000124RotationAnimation.timingFunctions = [instantTiming, instantTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming]
		_000124RotationAnimation.beginTime = beginTime
		_000124RotationAnimation.fillMode = fillMode
		_000124RotationAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["0001 2 4__root"]?.layer.add(_000124RotationAnimation, forKey:"Menu Animation_Rotation")

		let _000124OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		_000124OpacityAnimation.duration = 2.150
		_000124OpacityAnimation.values = [0.000, 0.000, 1.000, 1.000, 0.000, 0.000] as [Float]
		_000124OpacityAnimation.keyTimes = [0.000, 0.325, 0.326, 0.477, 0.477, 1.000] as [NSNumber]
		_000124OpacityAnimation.timingFunctions = [instantTiming, instantTiming, instantTiming, instantTiming, linearTiming]
		_000124OpacityAnimation.beginTime = beginTime
		_000124OpacityAnimation.fillMode = fillMode
		_000124OpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["0001 2 4__root"]?.layer.add(_000124OpacityAnimation, forKey:"Menu Animation_Opacity")

		let _000124ScaleXAnimation = CAKeyframeAnimation(keyPath: "transform.scale.x")
		_000124ScaleXAnimation.duration = 2.150
		_000124ScaleXAnimation.values = [0.121, 0.121, 0.466, 0.057, 0.597, 0.746, 0.924, 1.212, 1.212, 0.106, 0.106] as [Float]
		_000124ScaleXAnimation.keyTimes = [0.000, 0.326, 0.337, 0.349, 0.360, 0.372, 0.384, 0.407, 0.453, 0.477, 1.000] as [NSNumber]
		_000124ScaleXAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming]
		_000124ScaleXAnimation.beginTime = beginTime
		_000124ScaleXAnimation.fillMode = fillMode
		_000124ScaleXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["0001 2 4__xScale"]?.layer.add(_000124ScaleXAnimation, forKey:"Menu Animation_ScaleX")

		let _000124TranslationXAnimation = CAKeyframeAnimation(keyPath: "transform.translation.x")
		_000124TranslationXAnimation.duration = 2.150
		_000124TranslationXAnimation.values = [0.000, 0.000, 13.000, 26.113, 120.122, 361.776, 787.768, 1065.932, 1424.415, 1826.974, 2170.998, 2375.451, 2493.419, 2543.710, 2543.710] as [Float]
		_000124TranslationXAnimation.keyTimes = [0.000, 0.326, 0.337, 0.349, 0.360, 0.372, 0.384, 0.395, 0.407, 0.419, 0.430, 0.442, 0.453, 0.477, 1.000] as [NSNumber]
		_000124TranslationXAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming]
		_000124TranslationXAnimation.beginTime = beginTime
		_000124TranslationXAnimation.fillMode = fillMode
		_000124TranslationXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["0001 2 4__root"]?.layer.add(_000124TranslationXAnimation, forKey:"Menu Animation_TranslationX")

		let _000124TranslationYAnimation = CAKeyframeAnimation(keyPath: "transform.translation.y")
		_000124TranslationYAnimation.duration = 2.150
		_000124TranslationYAnimation.values = [0.000, 0.000, -90.578, -183.879, -173.974, -109.137, 67.686, 223.663, 494.045, 891.896, 1378.185, 1870.842, 2248.146, 2526.698, 2526.698] as [Float]
		_000124TranslationYAnimation.keyTimes = [0.000, 0.326, 0.337, 0.349, 0.360, 0.372, 0.384, 0.395, 0.407, 0.419, 0.430, 0.442, 0.453, 0.477, 1.000] as [NSNumber]
		_000124TranslationYAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming]
		_000124TranslationYAnimation.beginTime = beginTime
		_000124TranslationYAnimation.fillMode = fillMode
		_000124TranslationYAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["0001 2 4__root"]?.layer.add(_000124TranslationYAnimation, forKey:"Menu Animation_TranslationY")

		let circle01MaskTranslationXAnimation = CAKeyframeAnimation(keyPath: "transform.translation.x")
		circle01MaskTranslationXAnimation.duration = 2.150
		circle01MaskTranslationXAnimation.values = [0.000, 0.000, 2.763, 85.522, 85.522] as [Float]
		circle01MaskTranslationXAnimation.keyTimes = [0.000, 0.198, 0.209, 0.326, 1.000] as [NSNumber]
		circle01MaskTranslationXAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming]
		circle01MaskTranslationXAnimation.beginTime = beginTime
		circle01MaskTranslationXAnimation.fillMode = fillMode
		circle01MaskTranslationXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Circle-01_mask__root"]?.layer.add(circle01MaskTranslationXAnimation, forKey:"Menu Animation_TranslationX")

		let circle01MaskTranslationYAnimation = CAKeyframeAnimation(keyPath: "transform.translation.y")
		circle01MaskTranslationYAnimation.duration = 2.150
		circle01MaskTranslationYAnimation.values = [0.000, 0.000, 0.430, -411.028, -411.028] as [Float]
		circle01MaskTranslationYAnimation.keyTimes = [0.000, 0.198, 0.209, 0.326, 1.000] as [NSNumber]
		circle01MaskTranslationYAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming]
		circle01MaskTranslationYAnimation.beginTime = beginTime
		circle01MaskTranslationYAnimation.fillMode = fillMode
		circle01MaskTranslationYAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Circle-01_mask__root"]?.layer.add(circle01MaskTranslationYAnimation, forKey:"Menu Animation_TranslationY")

		let homeArrows01OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		homeArrows01OpacityAnimation.duration = 2.150
		homeArrows01OpacityAnimation.values = [0.000, 0.000, 1.000, 1.000] as [Float]
		homeArrows01OpacityAnimation.keyTimes = [0.000, 0.628, 0.698, 1.000] as [NSNumber]
		homeArrows01OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		homeArrows01OpacityAnimation.beginTime = beginTime
		homeArrows01OpacityAnimation.fillMode = fillMode
		homeArrows01OpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Home_Arrows-01__root"]?.layer.add(homeArrows01OpacityAnimation, forKey:"Menu Animation_Opacity")

		let _000127RotationAnimation = CAKeyframeAnimation(keyPath: "transform.rotation.z")
		_000127RotationAnimation.duration = 2.150
		_000127RotationAnimation.values = [1.398, 1.342, 0.996, 0.869, 0.773, 0.712, 0.712] as [Float]
		_000127RotationAnimation.keyTimes = [0.000, 0.535, 0.570, 0.605, 0.616, 0.628, 1.000] as [NSNumber]
		_000127RotationAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming]
		_000127RotationAnimation.beginTime = beginTime
		_000127RotationAnimation.fillMode = fillMode
		_000127RotationAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["0001 2 7__root"]?.layer.add(_000127RotationAnimation, forKey:"Menu Animation_Rotation")

		let _000127OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		_000127OpacityAnimation.duration = 2.150
		_000127OpacityAnimation.values = [0.000, 0.000, 1.000, 1.000, 0.000, 0.000, 1.000, 1.000] as [Float]
		_000127OpacityAnimation.keyTimes = [0.000, 0.500, 0.500, 0.558, 0.558, 0.570, 0.570, 1.000] as [NSNumber]
		_000127OpacityAnimation.timingFunctions = [instantTiming, instantTiming, instantTiming, instantTiming, instantTiming, instantTiming, linearTiming]
		_000127OpacityAnimation.beginTime = beginTime
		_000127OpacityAnimation.fillMode = fillMode
		_000127OpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["0001 2 7__root"]?.layer.add(_000127OpacityAnimation, forKey:"Menu Animation_Opacity")

		let _000127ScaleXAnimation = CAKeyframeAnimation(keyPath: "transform.scale.x")
		_000127ScaleXAnimation.duration = 2.150
		_000127ScaleXAnimation.values = [0.097, 0.097, 0.691, 0.064, 1.081, 0.047, 0.047] as [Float]
		_000127ScaleXAnimation.keyTimes = [0.000, 0.500, 0.547, 0.570, 0.628, 0.640, 1.000] as [NSNumber]
		_000127ScaleXAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming]
		_000127ScaleXAnimation.beginTime = beginTime
		_000127ScaleXAnimation.fillMode = fillMode
		_000127ScaleXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["0001 2 7__xScale"]?.layer.add(_000127ScaleXAnimation, forKey:"Menu Animation_ScaleX")

		let _000127TranslationXAnimation = CAKeyframeAnimation(keyPath: "transform.translation.x")
		_000127TranslationXAnimation.duration = 2.150
		_000127TranslationXAnimation.values = [0.000, 0.000, -21.431, -81.119, -142.976, -172.758, -710.981, -827.110, -1088.321, -1460.782, -1651.465, -1815.831, -1815.831] as [Float]
		_000127TranslationXAnimation.keyTimes = [0.000, 0.500, 0.523, 0.535, 0.547, 0.558, 0.570, 0.593, 0.605, 0.616, 0.628, 0.640, 1.000] as [NSNumber]
		_000127TranslationXAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming]
		_000127TranslationXAnimation.beginTime = beginTime
		_000127TranslationXAnimation.fillMode = fillMode
		_000127TranslationXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["0001 2 7__root"]?.layer.add(_000127TranslationXAnimation, forKey:"Menu Animation_TranslationX")

		let _000127TranslationYAnimation = CAKeyframeAnimation(keyPath: "transform.translation.y")
		_000127TranslationYAnimation.duration = 2.150
		_000127TranslationYAnimation.values = [0.000, 0.000, -122.696, -399.519, -597.811, -725.949, -1837.336, -2016.583, -2356.329, -2749.668, -2915.958, -3057.911, -3057.911] as [Float]
		_000127TranslationYAnimation.keyTimes = [0.000, 0.500, 0.523, 0.535, 0.547, 0.558, 0.570, 0.593, 0.605, 0.616, 0.628, 0.640, 1.000] as [NSNumber]
		_000127TranslationYAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming]
		_000127TranslationYAnimation.beginTime = beginTime
		_000127TranslationYAnimation.fillMode = fillMode
		_000127TranslationYAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["0001 2 7__root"]?.layer.add(_000127TranslationYAnimation, forKey:"Menu Animation_TranslationY")

		let numpadOpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		numpadOpacityAnimation.duration = 2.150
		numpadOpacityAnimation.values = [0.000, 0.000, 1.000, 1.000] as [Float]
		numpadOpacityAnimation.keyTimes = [0.000, 0.698, 0.753, 1.000] as [NSNumber]
		numpadOpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		numpadOpacityAnimation.beginTime = beginTime
		numpadOpacityAnimation.fillMode = fillMode
		numpadOpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["numpad__root"]?.layer.add(numpadOpacityAnimation, forKey:"Menu Animation_Opacity")

		let fsIcon05OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		fsIcon05OpacityAnimation.duration = 2.150
		fsIcon05OpacityAnimation.values = [0.000, 0.000, 1.000, 1.000] as [Float]
		fsIcon05OpacityAnimation.keyTimes = [0.000, 0.640, 0.663, 1.000] as [NSNumber]
		fsIcon05OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		fsIcon05OpacityAnimation.beginTime = beginTime
		fsIcon05OpacityAnimation.fillMode = fillMode
		fsIcon05OpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["fs_icon-05__root"]?.layer.add(fsIcon05OpacityAnimation, forKey:"Menu Animation_Opacity")

		let _000126RotationAnimation = CAKeyframeAnimation(keyPath: "transform.rotation.z")
		_000126RotationAnimation.duration = 2.150
		_000126RotationAnimation.values = [0.013, 0.016, 0.016] as [Float]
		_000126RotationAnimation.keyTimes = [0.000, 0.523, 1.000] as [NSNumber]
		_000126RotationAnimation.timingFunctions = [linearTiming, linearTiming]
		_000126RotationAnimation.beginTime = beginTime
		_000126RotationAnimation.fillMode = fillMode
		_000126RotationAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["0001 2 6__root"]?.layer.add(_000126RotationAnimation, forKey:"Menu Animation_Rotation")

		let _000126OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		_000126OpacityAnimation.duration = 2.150
		_000126OpacityAnimation.values = [0.000, 0.000, 1.000, 1.000, 0.000, 0.000, 1.000, 1.000, 0.000, 0.000, 1.000, 1.000, 0.000, 0.000, 1.000, 1.000] as [Float]
		_000126OpacityAnimation.keyTimes = [0.000, 0.477, 0.477, 0.500, 0.500, 0.511, 0.512, 0.546, 0.547, 0.558, 0.558, 0.593, 0.593, 0.604, 0.605, 1.000] as [NSNumber]
		_000126OpacityAnimation.timingFunctions = [instantTiming, instantTiming, instantTiming, instantTiming, instantTiming, instantTiming, instantTiming, instantTiming, instantTiming, instantTiming, instantTiming, instantTiming, instantTiming, instantTiming, linearTiming]
		_000126OpacityAnimation.beginTime = beginTime
		_000126OpacityAnimation.fillMode = fillMode
		_000126OpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["0001 2 6__root"]?.layer.add(_000126OpacityAnimation, forKey:"Menu Animation_Opacity")

		let _000126ScaleXAnimation = CAKeyframeAnimation(keyPath: "transform.scale.x")
		_000126ScaleXAnimation.duration = 2.150
		_000126ScaleXAnimation.values = [0.052, 0.052, 0.423, 0.034, 0.202, 0.581, 0.041, 0.599, 0.052, 0.145, 0.504, 0.024, 0.024] as [Float]
		_000126ScaleXAnimation.keyTimes = [0.000, 0.477, 0.488, 0.500, 0.512, 0.535, 0.547, 0.581, 0.593, 0.605, 0.640, 0.651, 1.000] as [NSNumber]
		_000126ScaleXAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming]
		_000126ScaleXAnimation.beginTime = beginTime
		_000126ScaleXAnimation.fillMode = fillMode
		_000126ScaleXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["0001 2 6__xScale"]?.layer.add(_000126ScaleXAnimation, forKey:"Menu Animation_ScaleX")

		let _000126TranslationXAnimation = CAKeyframeAnimation(keyPath: "transform.translation.x")
		_000126TranslationXAnimation.duration = 2.150
		_000126TranslationXAnimation.values = [0.000, 0.000, 400.148, 481.876, 1324.767, 1562.803, 1712.637, 1826.058, 2679.238, 2925.466, 3043.785, 3158.612, 4007.862, 4114.901, 4402.885, 4503.861, 4503.861] as [Float]
		_000126TranslationXAnimation.keyTimes = [0.000, 0.477, 0.488, 0.500, 0.512, 0.523, 0.535, 0.547, 0.558, 0.570, 0.581, 0.593, 0.605, 0.628, 0.640, 0.651, 1.000] as [NSNumber]
		_000126TranslationXAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming]
		_000126TranslationXAnimation.beginTime = beginTime
		_000126TranslationXAnimation.fillMode = fillMode
		_000126TranslationXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["0001 2 6__root"]?.layer.add(_000126TranslationXAnimation, forKey:"Menu Animation_TranslationX")

		let _000126TranslationYAnimation = CAKeyframeAnimation(keyPath: "transform.translation.y")
		_000126TranslationYAnimation.duration = 2.150
		_000126TranslationYAnimation.values = [0.000, 0.000, -0.445, 0.601, 4.008, 5.141, -4.035, -2.253, 4.583, 5.379, 3.877, 5.682, 9.711, 11.393, 2.175, 3.762, 3.762] as [Float]
		_000126TranslationYAnimation.keyTimes = [0.000, 0.477, 0.488, 0.500, 0.512, 0.523, 0.535, 0.547, 0.558, 0.570, 0.581, 0.593, 0.605, 0.628, 0.640, 0.651, 1.000] as [NSNumber]
		_000126TranslationYAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming]
		_000126TranslationYAnimation.beginTime = beginTime
		_000126TranslationYAnimation.fillMode = fillMode
		_000126TranslationYAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["0001 2 6__root"]?.layer.add(_000126TranslationYAnimation, forKey:"Menu Animation_TranslationY")

		let icon02Menu01OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		icon02Menu01OpacityAnimation.duration = 2.150
		icon02Menu01OpacityAnimation.values = [1.000, 0.000, 0.000] as [Float]
		icon02Menu01OpacityAnimation.keyTimes = [0.000, 0.163, 1.000] as [NSNumber]
		icon02Menu01OpacityAnimation.timingFunctions = [linearTiming, linearTiming]
		icon02Menu01OpacityAnimation.beginTime = beginTime
		icon02Menu01OpacityAnimation.fillMode = fillMode
		icon02Menu01OpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["icon_02_menu-01__root"]?.layer.add(icon02Menu01OpacityAnimation, forKey:"Menu Animation_Opacity")

		let _000123RotationAnimation = CAKeyframeAnimation(keyPath: "transform.rotation.z")
		_000123RotationAnimation.duration = 2.150
		_000123RotationAnimation.values = [1.444, 1.444, 1.317, 1.174, 1.093, 0.976, 0.892, 0.794, 0.723, 0.723] as [Float]
		_000123RotationAnimation.keyTimes = [0.000, 0.605, 0.623, 0.637, 0.651, 0.674, 0.684, 0.698, 0.712, 1.000] as [NSNumber]
		_000123RotationAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming]
		_000123RotationAnimation.beginTime = beginTime
		_000123RotationAnimation.fillMode = fillMode
		_000123RotationAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["0001 2 3__root"]?.layer.add(_000123RotationAnimation, forKey:"Menu Animation_Rotation")

		let _000123OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		_000123OpacityAnimation.duration = 2.150
		_000123OpacityAnimation.values = [1.000, 1.000, 20.000, 20.000, 0.000, 0.000, 1.000, 1.000] as [Float]
		_000123OpacityAnimation.keyTimes = [0.000, 0.595, 0.595, 0.665, 0.665, 0.674, 0.674, 1.000] as [NSNumber]
		_000123OpacityAnimation.timingFunctions = [instantTiming, instantTiming, instantTiming, instantTiming, instantTiming, instantTiming, linearTiming]
		_000123OpacityAnimation.beginTime = beginTime
		_000123OpacityAnimation.fillMode = fillMode
		_000123OpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["0001 2 3__root"]?.layer.add(_000123OpacityAnimation, forKey:"Menu Animation_Opacity")

		let _000123ScaleXAnimation = CAKeyframeAnimation(keyPath: "transform.scale.x")
		_000123ScaleXAnimation.duration = 2.150
		_000123ScaleXAnimation.values = [0.108, 0.108, 1.717, 0.113, 1.212, 0.080, 0.080] as [Float]
		_000123ScaleXAnimation.keyTimes = [0.000, 0.595, 0.651, 0.674, 0.712, 0.721, 1.000] as [NSNumber]
		_000123ScaleXAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming]
		_000123ScaleXAnimation.beginTime = beginTime
		_000123ScaleXAnimation.fillMode = fillMode
		_000123ScaleXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["0001 2 3__xScale"]?.layer.add(_000123ScaleXAnimation, forKey:"Menu Animation_ScaleX")

		let _000123TranslationXAnimation = CAKeyframeAnimation(keyPath: "transform.translation.x")
		_000123TranslationXAnimation.duration = 2.150
		_000123TranslationXAnimation.values = [0.000, 0.000, -42.644, -233.269, -584.207, -751.335, -906.248, -1593.592, -1742.567, -2085.106, -2547.450, -2725.618, -2725.618] as [Float]
		_000123TranslationXAnimation.keyTimes = [0.000, 0.595, 0.605, 0.623, 0.637, 0.651, 0.665, 0.674, 0.684, 0.698, 0.712, 0.721, 1.000] as [NSNumber]
		_000123TranslationXAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming]
		_000123TranslationXAnimation.beginTime = beginTime
		_000123TranslationXAnimation.fillMode = fillMode
		_000123TranslationXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["0001 2 3__root"]?.layer.add(_000123TranslationXAnimation, forKey:"Menu Animation_TranslationX")

		let _000123TranslationYAnimation = CAKeyframeAnimation(keyPath: "transform.translation.y")
		_000123TranslationYAnimation.duration = 2.150
		_000123TranslationYAnimation.values = [0.000, 0.000, -335.137, -1279.551, -2261.328, -2643.320, -2942.264, -3959.432, -4142.831, -4526.854, -4958.156, -5115.499, -5115.499] as [Float]
		_000123TranslationYAnimation.keyTimes = [0.000, 0.595, 0.605, 0.623, 0.637, 0.651, 0.665, 0.674, 0.684, 0.698, 0.712, 0.721, 1.000] as [NSNumber]
		_000123TranslationYAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming]
		_000123TranslationYAnimation.beginTime = beginTime
		_000123TranslationYAnimation.fillMode = fillMode
		_000123TranslationYAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["0001 2 3__root"]?.layer.add(_000123TranslationYAnimation, forKey:"Menu Animation_TranslationY")

		let infoOpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		infoOpacityAnimation.duration = 2.150
		infoOpacityAnimation.values = [0.000, 0.000, 1.000, 1.000] as [Float]
		infoOpacityAnimation.keyTimes = [0.000, 0.707, 0.735, 1.000] as [NSNumber]
		infoOpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		infoOpacityAnimation.beginTime = beginTime
		infoOpacityAnimation.fillMode = fillMode
		infoOpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["info__root"]?.layer.add(infoOpacityAnimation, forKey:"Menu Animation_Opacity")

		let fsIcon04OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		fsIcon04OpacityAnimation.duration = 2.150
		fsIcon04OpacityAnimation.values = [0.000, 0.000, 1.000, 1.000] as [Float]
		fsIcon04OpacityAnimation.keyTimes = [0.000, 0.581, 0.605, 1.000] as [NSNumber]
		fsIcon04OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		fsIcon04OpacityAnimation.beginTime = beginTime
		fsIcon04OpacityAnimation.fillMode = fillMode
		fsIcon04OpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["fs_icon-04__root"]?.layer.add(fsIcon04OpacityAnimation, forKey:"Menu Animation_Opacity")

		let homeArrows03OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		homeArrows03OpacityAnimation.duration = 2.150
		homeArrows03OpacityAnimation.values = [0.000, 0.000, 1.000, 1.000, 1.000] as [Float]
		homeArrows03OpacityAnimation.keyTimes = [0.000, 0.656, 0.726, 0.837, 1.000] as [NSNumber]
		homeArrows03OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming]
		homeArrows03OpacityAnimation.beginTime = beginTime
		homeArrows03OpacityAnimation.fillMode = fillMode
		homeArrows03OpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Home_Arrows-03__root"]?.layer.add(homeArrows03OpacityAnimation, forKey:"Menu Animation_Opacity")

		let homeArrows04OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		homeArrows04OpacityAnimation.duration = 2.150
		homeArrows04OpacityAnimation.values = [0.000, 0.000, 1.000, 1.000, 1.000] as [Float]
		homeArrows04OpacityAnimation.keyTimes = [0.000, 0.712, 0.781, 0.837, 1.000] as [NSNumber]
		homeArrows04OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming]
		homeArrows04OpacityAnimation.beginTime = beginTime
		homeArrows04OpacityAnimation.fillMode = fillMode
		homeArrows04OpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Home_Arrows-04__root"]?.layer.add(homeArrows04OpacityAnimation, forKey:"Menu Animation_Opacity")

		let menuIcons03ScaleXAnimation = CAKeyframeAnimation(keyPath: "transform.scale.x")
		menuIcons03ScaleXAnimation.duration = 2.150
		menuIcons03ScaleXAnimation.values = [1.131, 1.131, 0.905, 0.905] as [Float]
		menuIcons03ScaleXAnimation.keyTimes = [0.000, 0.163, 0.326, 1.000] as [NSNumber]
		menuIcons03ScaleXAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		menuIcons03ScaleXAnimation.beginTime = beginTime
		menuIcons03ScaleXAnimation.fillMode = fillMode
		menuIcons03ScaleXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["menu_icons-03__xScale"]?.layer.add(menuIcons03ScaleXAnimation, forKey:"Menu Animation_ScaleX")

		let menuIcons03ScaleYAnimation = CAKeyframeAnimation(keyPath: "transform.scale.y")
		menuIcons03ScaleYAnimation.duration = 2.150
		menuIcons03ScaleYAnimation.values = [1.131, 1.131, 0.905, 0.905] as [Float]
		menuIcons03ScaleYAnimation.keyTimes = [0.000, 0.163, 0.326, 1.000] as [NSNumber]
		menuIcons03ScaleYAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		menuIcons03ScaleYAnimation.beginTime = beginTime
		menuIcons03ScaleYAnimation.fillMode = fillMode
		menuIcons03ScaleYAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["menu_icons-03__yScale"]?.layer.add(menuIcons03ScaleYAnimation, forKey:"Menu Animation_ScaleY")

		let menuIcons03TranslationXAnimation = CAKeyframeAnimation(keyPath: "transform.translation.x")
		menuIcons03TranslationXAnimation.duration = 2.150
		menuIcons03TranslationXAnimation.values = [0.000, 0.000, -702.993, -702.993] as [Float]
		menuIcons03TranslationXAnimation.keyTimes = [0.000, 0.163, 0.326, 1.000] as [NSNumber]
		menuIcons03TranslationXAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		menuIcons03TranslationXAnimation.beginTime = beginTime
		menuIcons03TranslationXAnimation.fillMode = fillMode
		menuIcons03TranslationXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["menu_icons-03__root"]?.layer.add(menuIcons03TranslationXAnimation, forKey:"Menu Animation_TranslationX")

		let menuIcons03TranslationYAnimation = CAKeyframeAnimation(keyPath: "transform.translation.y")
		menuIcons03TranslationYAnimation.duration = 2.150
		menuIcons03TranslationYAnimation.values = [0.000, 0.000, 507.814, 507.814] as [Float]
		menuIcons03TranslationYAnimation.keyTimes = [0.000, 0.163, 0.326, 1.000] as [NSNumber]
		menuIcons03TranslationYAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		menuIcons03TranslationYAnimation.beginTime = beginTime
		menuIcons03TranslationYAnimation.fillMode = fillMode
		menuIcons03TranslationYAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["menu_icons-03__root"]?.layer.add(menuIcons03TranslationYAnimation, forKey:"Menu Animation_TranslationY")

		let _00012RotationAnimation = CAKeyframeAnimation(keyPath: "transform.rotation.z")
		_00012RotationAnimation.duration = 2.150
		_00012RotationAnimation.values = [0.161, 0.161, 1.592, 1.592] as [Float]
		_00012RotationAnimation.keyTimes = [0.000, 0.116, 0.116, 1.000] as [NSNumber]
		_00012RotationAnimation.timingFunctions = [instantTiming, instantTiming, linearTiming]
		_00012RotationAnimation.beginTime = beginTime
		_00012RotationAnimation.fillMode = fillMode
		_00012RotationAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["0001 2__root"]?.layer.add(_00012RotationAnimation, forKey:"Menu Animation_Rotation")

		let _00012OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		_00012OpacityAnimation.duration = 2.150
		_00012OpacityAnimation.values = [1.000, 1.000, 0.000, 0.000] as [Float]
		_00012OpacityAnimation.keyTimes = [0.000, 0.256, 0.256, 1.000] as [NSNumber]
		_00012OpacityAnimation.timingFunctions = [instantTiming, instantTiming, linearTiming]
		_00012OpacityAnimation.beginTime = beginTime
		_00012OpacityAnimation.fillMode = fillMode
		_00012OpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["0001 2__root"]?.layer.add(_00012OpacityAnimation, forKey:"Menu Animation_Opacity")

		let _00012ScaleXAnimation = CAKeyframeAnimation(keyPath: "transform.scale.x")
		_00012ScaleXAnimation.duration = 2.150
		_00012ScaleXAnimation.values = [0.224, 0.224, 0.004, 0.312, 0.312] as [Float]
		_00012ScaleXAnimation.keyTimes = [0.000, 0.070, 0.116, 0.186, 1.000] as [NSNumber]
		_00012ScaleXAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming]
		_00012ScaleXAnimation.beginTime = beginTime
		_00012ScaleXAnimation.fillMode = fillMode
		_00012ScaleXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["0001 2__xScale"]?.layer.add(_00012ScaleXAnimation, forKey:"Menu Animation_ScaleX")

		let _00012TranslationXAnimation = CAKeyframeAnimation(keyPath: "transform.translation.x")
		_00012TranslationXAnimation.duration = 2.150
		_00012TranslationXAnimation.values = [0.000, -109.758, -155.271, -153.903, -163.481, -163.481] as [Float]
		_00012TranslationXAnimation.keyTimes = [0.000, 0.070, 0.116, 0.186, 0.256, 1.000] as [NSNumber]
		_00012TranslationXAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming, linearTiming]
		_00012TranslationXAnimation.beginTime = beginTime
		_00012TranslationXAnimation.fillMode = fillMode
		_00012TranslationXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["0001 2__root"]?.layer.add(_00012TranslationXAnimation, forKey:"Menu Animation_TranslationX")

		let _00012TranslationYAnimation = CAKeyframeAnimation(keyPath: "transform.translation.y")
		_00012TranslationYAnimation.duration = 2.150
		_00012TranslationYAnimation.values = [0.000, -12.406, -19.792, -84.326, -1160.544, -1160.544] as [Float]
		_00012TranslationYAnimation.keyTimes = [0.000, 0.070, 0.116, 0.186, 0.256, 1.000] as [NSNumber]
		_00012TranslationYAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming, linearTiming]
		_00012TranslationYAnimation.beginTime = beginTime
		_00012TranslationYAnimation.fillMode = fillMode
		_00012TranslationYAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["0001 2__root"]?.layer.add(_00012TranslationYAnimation, forKey:"Menu Animation_TranslationY")

		let _000122RotationAnimation = CAKeyframeAnimation(keyPath: "transform.rotation.z")
		_000122RotationAnimation.duration = 2.150
		_000122RotationAnimation.values = [0.236, 0.356, 0.356, -1.230, -1.230] as [Float]
		_000122RotationAnimation.keyTimes = [0.000, 0.070, 0.116, 0.116, 1.000] as [NSNumber]
		_000122RotationAnimation.timingFunctions = [linearTiming, instantTiming, instantTiming, linearTiming]
		_000122RotationAnimation.beginTime = beginTime
		_000122RotationAnimation.fillMode = fillMode
		_000122RotationAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["0001 2 2__root"]?.layer.add(_000122RotationAnimation, forKey:"Menu Animation_Rotation")

		let _000122OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		_000122OpacityAnimation.duration = 2.150
		_000122OpacityAnimation.values = [1.000, 1.000, 0.000, 0.000] as [Float]
		_000122OpacityAnimation.keyTimes = [0.000, 0.256, 0.256, 1.000] as [NSNumber]
		_000122OpacityAnimation.timingFunctions = [instantTiming, instantTiming, linearTiming]
		_000122OpacityAnimation.beginTime = beginTime
		_000122OpacityAnimation.fillMode = fillMode
		_000122OpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["0001 2 2__root"]?.layer.add(_000122OpacityAnimation, forKey:"Menu Animation_Opacity")

		let _000122ScaleXAnimation = CAKeyframeAnimation(keyPath: "transform.scale.x")
		_000122ScaleXAnimation.duration = 2.150
		_000122ScaleXAnimation.values = [0.224, 0.224, 0.000, -0.348, -0.348] as [Float]
		_000122ScaleXAnimation.keyTimes = [0.000, 0.070, 0.116, 0.186, 1.000] as [NSNumber]
		_000122ScaleXAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming]
		_000122ScaleXAnimation.beginTime = beginTime
		_000122ScaleXAnimation.fillMode = fillMode
		_000122ScaleXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["0001 2 2__xScale"]?.layer.add(_000122ScaleXAnimation, forKey:"Menu Animation_ScaleX")

		let _000122TranslationXAnimation = CAKeyframeAnimation(keyPath: "transform.translation.x")
		_000122TranslationXAnimation.duration = 2.150
		_000122TranslationXAnimation.values = [0.000, 131.461, 175.521, 199.923, 630.454, 630.454] as [Float]
		_000122TranslationXAnimation.keyTimes = [0.000, 0.070, 0.116, 0.186, 0.256, 1.000] as [NSNumber]
		_000122TranslationXAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming, linearTiming]
		_000122TranslationXAnimation.beginTime = beginTime
		_000122TranslationXAnimation.fillMode = fillMode
		_000122TranslationXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["0001 2 2__root"]?.layer.add(_000122TranslationXAnimation, forKey:"Menu Animation_TranslationX")

		let _000122TranslationYAnimation = CAKeyframeAnimation(keyPath: "transform.translation.y")
		_000122TranslationYAnimation.duration = 2.150
		_000122TranslationYAnimation.values = [0.000, 43.414, 59.819, -9.062, -993.593, -993.593] as [Float]
		_000122TranslationYAnimation.keyTimes = [0.000, 0.070, 0.116, 0.186, 0.256, 1.000] as [NSNumber]
		_000122TranslationYAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming, linearTiming]
		_000122TranslationYAnimation.beginTime = beginTime
		_000122TranslationYAnimation.fillMode = fillMode
		_000122TranslationYAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["0001 2 2__root"]?.layer.add(_000122TranslationYAnimation, forKey:"Menu Animation_TranslationY")
	}

	func removeMenuAnimation() {
		self.layer.removeAnimation(forKey: "MenuAnimation")
		self.viewsByName["Circle-01__root"]?.layer.removeAnimation(forKey: "Menu Animation_Opacity")
		self.viewsByName["home_icon__root"]?.layer.removeAnimation(forKey: "Menu Animation_Opacity")
		self.viewsByName["menu_icons-04__xScale"]?.layer.removeAnimation(forKey: "Menu Animation_ScaleX")
		self.viewsByName["menu_icons-04__yScale"]?.layer.removeAnimation(forKey: "Menu Animation_ScaleY")
		self.viewsByName["menu_icons-04__root"]?.layer.removeAnimation(forKey: "Menu Animation_TranslationX")
		self.viewsByName["menu_icons-04__root"]?.layer.removeAnimation(forKey: "Menu Animation_TranslationY")
		self.viewsByName["changeLayoutBtn-01__root"]?.layer.removeAnimation(forKey: "Menu Animation_Opacity")
		self.viewsByName["0001 2 5__root"]?.layer.removeAnimation(forKey: "Menu Animation_Rotation")
		self.viewsByName["0001 2 5__root"]?.layer.removeAnimation(forKey: "Menu Animation_Opacity")
		self.viewsByName["0001 2 5__xScale"]?.layer.removeAnimation(forKey: "Menu Animation_ScaleX")
		self.viewsByName["0001 2 5__root"]?.layer.removeAnimation(forKey: "Menu Animation_TranslationX")
		self.viewsByName["0001 2 5__root"]?.layer.removeAnimation(forKey: "Menu Animation_TranslationY")
		self.viewsByName["fs_icon-01__root"]?.layer.removeAnimation(forKey: "Menu Animation_Opacity")
		self.viewsByName["Home_Arrows-02__root"]?.layer.removeAnimation(forKey: "Menu Animation_Opacity")
		self.viewsByName["menu_icons-02__xScale"]?.layer.removeAnimation(forKey: "Menu Animation_ScaleX")
		self.viewsByName["menu_icons-02__yScale"]?.layer.removeAnimation(forKey: "Menu Animation_ScaleY")
		self.viewsByName["menu_icons-02__root"]?.layer.removeAnimation(forKey: "Menu Animation_TranslationX")
		self.viewsByName["menu_icons-02__root"]?.layer.removeAnimation(forKey: "Menu Animation_TranslationY")
		self.viewsByName["Home_Arrows-05__root"]?.layer.removeAnimation(forKey: "Menu Animation_Opacity")
		self.viewsByName["Home_Arrows-05__root"]?.layer.removeAnimation(forKey: "Menu Animation_TranslationX")
		self.viewsByName["Home_Arrows-05__root"]?.layer.removeAnimation(forKey: "Menu Animation_TranslationY")
		self.viewsByName["phoneBookbtn2-01__root"]?.layer.removeAnimation(forKey: "Menu Animation_Opacity")
		self.viewsByName["RejectCall-01__root"]?.layer.removeAnimation(forKey: "Menu Animation_Opacity")
		self.viewsByName["AcceptCall-01__root"]?.layer.removeAnimation(forKey: "Menu Animation_Opacity")
		self.viewsByName["fs_icon-03__root"]?.layer.removeAnimation(forKey: "Menu Animation_Opacity")
		self.viewsByName["fs_icon-02__root"]?.layer.removeAnimation(forKey: "Menu Animation_Opacity")
		self.viewsByName["0001 2 4__root"]?.layer.removeAnimation(forKey: "Menu Animation_Rotation")
		self.viewsByName["0001 2 4__root"]?.layer.removeAnimation(forKey: "Menu Animation_Opacity")
		self.viewsByName["0001 2 4__xScale"]?.layer.removeAnimation(forKey: "Menu Animation_ScaleX")
		self.viewsByName["0001 2 4__root"]?.layer.removeAnimation(forKey: "Menu Animation_TranslationX")
		self.viewsByName["0001 2 4__root"]?.layer.removeAnimation(forKey: "Menu Animation_TranslationY")
		self.viewsByName["Circle-01_mask__root"]?.layer.removeAnimation(forKey: "Menu Animation_TranslationX")
		self.viewsByName["Circle-01_mask__root"]?.layer.removeAnimation(forKey: "Menu Animation_TranslationY")
		self.viewsByName["Home_Arrows-01__root"]?.layer.removeAnimation(forKey: "Menu Animation_Opacity")
		self.viewsByName["0001 2 7__root"]?.layer.removeAnimation(forKey: "Menu Animation_Rotation")
		self.viewsByName["0001 2 7__root"]?.layer.removeAnimation(forKey: "Menu Animation_Opacity")
		self.viewsByName["0001 2 7__xScale"]?.layer.removeAnimation(forKey: "Menu Animation_ScaleX")
		self.viewsByName["0001 2 7__root"]?.layer.removeAnimation(forKey: "Menu Animation_TranslationX")
		self.viewsByName["0001 2 7__root"]?.layer.removeAnimation(forKey: "Menu Animation_TranslationY")
		self.viewsByName["numpad__root"]?.layer.removeAnimation(forKey: "Menu Animation_Opacity")
		self.viewsByName["fs_icon-05__root"]?.layer.removeAnimation(forKey: "Menu Animation_Opacity")
		self.viewsByName["0001 2 6__root"]?.layer.removeAnimation(forKey: "Menu Animation_Rotation")
		self.viewsByName["0001 2 6__root"]?.layer.removeAnimation(forKey: "Menu Animation_Opacity")
		self.viewsByName["0001 2 6__xScale"]?.layer.removeAnimation(forKey: "Menu Animation_ScaleX")
		self.viewsByName["0001 2 6__root"]?.layer.removeAnimation(forKey: "Menu Animation_TranslationX")
		self.viewsByName["0001 2 6__root"]?.layer.removeAnimation(forKey: "Menu Animation_TranslationY")
		self.viewsByName["icon_02_menu-01__root"]?.layer.removeAnimation(forKey: "Menu Animation_Opacity")
		self.viewsByName["0001 2 3__root"]?.layer.removeAnimation(forKey: "Menu Animation_Rotation")
		self.viewsByName["0001 2 3__root"]?.layer.removeAnimation(forKey: "Menu Animation_Opacity")
		self.viewsByName["0001 2 3__xScale"]?.layer.removeAnimation(forKey: "Menu Animation_ScaleX")
		self.viewsByName["0001 2 3__root"]?.layer.removeAnimation(forKey: "Menu Animation_TranslationX")
		self.viewsByName["0001 2 3__root"]?.layer.removeAnimation(forKey: "Menu Animation_TranslationY")
		self.viewsByName["info__root"]?.layer.removeAnimation(forKey: "Menu Animation_Opacity")
		self.viewsByName["fs_icon-04__root"]?.layer.removeAnimation(forKey: "Menu Animation_Opacity")
		self.viewsByName["Home_Arrows-03__root"]?.layer.removeAnimation(forKey: "Menu Animation_Opacity")
		self.viewsByName["Home_Arrows-04__root"]?.layer.removeAnimation(forKey: "Menu Animation_Opacity")
		self.viewsByName["menu_icons-03__xScale"]?.layer.removeAnimation(forKey: "Menu Animation_ScaleX")
		self.viewsByName["menu_icons-03__yScale"]?.layer.removeAnimation(forKey: "Menu Animation_ScaleY")
		self.viewsByName["menu_icons-03__root"]?.layer.removeAnimation(forKey: "Menu Animation_TranslationX")
		self.viewsByName["menu_icons-03__root"]?.layer.removeAnimation(forKey: "Menu Animation_TranslationY")
		self.viewsByName["0001 2__root"]?.layer.removeAnimation(forKey: "Menu Animation_Rotation")
		self.viewsByName["0001 2__root"]?.layer.removeAnimation(forKey: "Menu Animation_Opacity")
		self.viewsByName["0001 2__xScale"]?.layer.removeAnimation(forKey: "Menu Animation_ScaleX")
		self.viewsByName["0001 2__root"]?.layer.removeAnimation(forKey: "Menu Animation_TranslationX")
		self.viewsByName["0001 2__root"]?.layer.removeAnimation(forKey: "Menu Animation_TranslationY")
		self.viewsByName["0001 2 2__root"]?.layer.removeAnimation(forKey: "Menu Animation_Rotation")
		self.viewsByName["0001 2 2__root"]?.layer.removeAnimation(forKey: "Menu Animation_Opacity")
		self.viewsByName["0001 2 2__xScale"]?.layer.removeAnimation(forKey: "Menu Animation_ScaleX")
		self.viewsByName["0001 2 2__root"]?.layer.removeAnimation(forKey: "Menu Animation_TranslationX")
		self.viewsByName["0001 2 2__root"]?.layer.removeAnimation(forKey: "Menu Animation_TranslationY")
	}

	// - MARK: Menu Animation_reversed

	func addMenuAnimationReversedAnimation() {
		addMenuAnimationReversedAnimation(beginTime: 0, fillMode: kCAFillModeBoth, removedOnCompletion: false, completion: nil)
	}

	func addMenuAnimationReversedAnimation(completion: ((Bool) -> Void)?) {
		addMenuAnimationReversedAnimation(beginTime: 0, fillMode: kCAFillModeBoth, removedOnCompletion: false, completion: completion)
	}

	func addMenuAnimationReversedAnimation(removedOnCompletion: Bool) {
		addMenuAnimationReversedAnimation(beginTime: 0, fillMode: removedOnCompletion ? kCAFillModeRemoved : kCAFillModeBoth, removedOnCompletion: removedOnCompletion, completion: nil)
	}

	func addMenuAnimationReversedAnimation(removedOnCompletion: Bool, completion: ((Bool) -> Void)?) {
		addMenuAnimationReversedAnimation(beginTime: 0, fillMode: removedOnCompletion ? kCAFillModeRemoved : kCAFillModeBoth, removedOnCompletion: removedOnCompletion, completion: completion)
	}

	func addMenuAnimationReversedAnimation(beginTime: CFTimeInterval, fillMode: String, removedOnCompletion: Bool, completion: ((Bool) -> Void)?) {
		let linearTiming = CAMediaTimingFunction(name: kCAMediaTimingFunctionLinear)
		let instantTiming = CAMediaTimingFunction(name: kCAMediaTimingFunctionDefault)
		if let complete = completion {
			let representativeAnimation = CABasicAnimation(keyPath: "not.a.real.key")
			representativeAnimation.duration = 2.150
			representativeAnimation.delegate = self
			self.layer.add(representativeAnimation, forKey: "MenuAnimationReversed")
			self.animationCompletions[layer.animation(forKey: "MenuAnimationReversed")!] = complete
		}

		let circle01OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		circle01OpacityAnimation.duration = 2.150
		circle01OpacityAnimation.values = [0.000, 0.000, 0.000, 1.000, 1.000] as [Float]
		circle01OpacityAnimation.keyTimes = [0.000, 0.674, 0.675, 0.675, 1.000] as [NSNumber]
		circle01OpacityAnimation.timingFunctions = [linearTiming, instantTiming, instantTiming, linearTiming]
		circle01OpacityAnimation.beginTime = beginTime
		circle01OpacityAnimation.fillMode = fillMode
		circle01OpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Circle-01__root"]?.layer.add(circle01OpacityAnimation, forKey:"Menu Animation_reversed_Opacity")

		let homeIconOpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		homeIconOpacityAnimation.duration = 2.150
		homeIconOpacityAnimation.values = [1.000, 1.000, 0.000, 0.000] as [Float]
		homeIconOpacityAnimation.keyTimes = [0.000, 0.233, 0.302, 1.000] as [NSNumber]
		homeIconOpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		homeIconOpacityAnimation.beginTime = beginTime
		homeIconOpacityAnimation.fillMode = fillMode
		homeIconOpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["home_icon__root"]?.layer.add(homeIconOpacityAnimation, forKey:"Menu Animation_reversed_Opacity")

		let menuIcons04ScaleXAnimation = CAKeyframeAnimation(keyPath: "transform.scale.x")
		menuIcons04ScaleXAnimation.duration = 2.150
		menuIcons04ScaleXAnimation.values = [0.905, 0.905, 1.119, 1.122] as [Float]
		menuIcons04ScaleXAnimation.keyTimes = [0.000, 0.535, 0.674, 1.000] as [NSNumber]
		menuIcons04ScaleXAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		menuIcons04ScaleXAnimation.beginTime = beginTime
		menuIcons04ScaleXAnimation.fillMode = fillMode
		menuIcons04ScaleXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["menu_icons-04__xScale"]?.layer.add(menuIcons04ScaleXAnimation, forKey:"Menu Animation_reversed_ScaleX")

		let menuIcons04ScaleYAnimation = CAKeyframeAnimation(keyPath: "transform.scale.y")
		menuIcons04ScaleYAnimation.duration = 2.150
		menuIcons04ScaleYAnimation.values = [0.894, 0.894, 1.119, 1.122] as [Float]
		menuIcons04ScaleYAnimation.keyTimes = [0.000, 0.535, 0.674, 1.000] as [NSNumber]
		menuIcons04ScaleYAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		menuIcons04ScaleYAnimation.beginTime = beginTime
		menuIcons04ScaleYAnimation.fillMode = fillMode
		menuIcons04ScaleYAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["menu_icons-04__yScale"]?.layer.add(menuIcons04ScaleYAnimation, forKey:"Menu Animation_reversed_ScaleY")

		let menuIcons04TranslationXAnimation = CAKeyframeAnimation(keyPath: "transform.translation.x")
		menuIcons04TranslationXAnimation.duration = 2.150
		menuIcons04TranslationXAnimation.values = [-1017.524, -1017.524, -12.210, 0.000] as [Float]
		menuIcons04TranslationXAnimation.keyTimes = [0.000, 0.535, 0.674, 1.000] as [NSNumber]
		menuIcons04TranslationXAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		menuIcons04TranslationXAnimation.beginTime = beginTime
		menuIcons04TranslationXAnimation.fillMode = fillMode
		menuIcons04TranslationXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["menu_icons-04__root"]?.layer.add(menuIcons04TranslationXAnimation, forKey:"Menu Animation_reversed_TranslationX")

		let menuIcons04TranslationYAnimation = CAKeyframeAnimation(keyPath: "transform.translation.y")
		menuIcons04TranslationYAnimation.duration = 2.150
		menuIcons04TranslationYAnimation.values = [322.814, 322.814, 3.874, 0.000] as [Float]
		menuIcons04TranslationYAnimation.keyTimes = [0.000, 0.535, 0.674, 1.000] as [NSNumber]
		menuIcons04TranslationYAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		menuIcons04TranslationYAnimation.beginTime = beginTime
		menuIcons04TranslationYAnimation.fillMode = fillMode
		menuIcons04TranslationYAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["menu_icons-04__root"]?.layer.add(menuIcons04TranslationYAnimation, forKey:"Menu Animation_reversed_TranslationY")

		let changeLayoutBtn01OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		changeLayoutBtn01OpacityAnimation.duration = 2.150
		changeLayoutBtn01OpacityAnimation.values = [1.000, 1.000, 0.060, 0.060] as [Float]
		changeLayoutBtn01OpacityAnimation.keyTimes = [0.000, 0.337, 0.384, 1.000] as [NSNumber]
		changeLayoutBtn01OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		changeLayoutBtn01OpacityAnimation.beginTime = beginTime
		changeLayoutBtn01OpacityAnimation.fillMode = fillMode
		changeLayoutBtn01OpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["changeLayoutBtn-01__root"]?.layer.add(changeLayoutBtn01OpacityAnimation, forKey:"Menu Animation_reversed_Opacity")

		let _000125RotationAnimation = CAKeyframeAnimation(keyPath: "transform.rotation.z")
		_000125RotationAnimation.duration = 2.150
		_000125RotationAnimation.values = [0.073, 0.073, 0.146, 0.250, 0.423, 0.577, 0.645, 0.914, 0.978, 1.068, 1.112, 1.225, 1.376, 1.431] as [Float]
		_000125RotationAnimation.keyTimes = [0.000, 0.293, 0.307, 0.321, 0.340, 0.358, 0.372, 0.377, 0.395, 0.407, 0.417, 0.430, 0.442, 1.000] as [NSNumber]
		_000125RotationAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming]
		_000125RotationAnimation.beginTime = beginTime
		_000125RotationAnimation.fillMode = fillMode
		_000125RotationAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["0001 2 5__root"]?.layer.add(_000125RotationAnimation, forKey:"Menu Animation_reversed_Rotation")

		let _000125OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		_000125OpacityAnimation.duration = 2.150
		_000125OpacityAnimation.values = [1.000, 1.000, 0.000, 0.000, 1.000, 1.000] as [Float]
		_000125OpacityAnimation.keyTimes = [0.000, 0.372, 0.377, 0.377, 0.377, 1.000] as [NSNumber]
		_000125OpacityAnimation.timingFunctions = [linearTiming, linearTiming, instantTiming, instantTiming, linearTiming]
		_000125OpacityAnimation.beginTime = beginTime
		_000125OpacityAnimation.fillMode = fillMode
		_000125OpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["0001 2 5__root"]?.layer.add(_000125OpacityAnimation, forKey:"Menu Animation_reversed_Opacity")

		let _000125ScaleXAnimation = CAKeyframeAnimation(keyPath: "transform.scale.x")
		_000125ScaleXAnimation.duration = 2.150
		_000125ScaleXAnimation.values = [-0.020, -0.020, 1.201, 0.945, 0.031, 1.394, 0.106, 0.106] as [Float]
		_000125ScaleXAnimation.keyTimes = [0.000, 0.279, 0.293, 0.358, 0.377, 0.384, 0.465, 1.000] as [NSNumber]
		_000125ScaleXAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming]
		_000125ScaleXAnimation.beginTime = beginTime
		_000125ScaleXAnimation.fillMode = fillMode
		_000125ScaleXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["0001 2 5__xScale"]?.layer.add(_000125ScaleXAnimation, forKey:"Menu Animation_reversed_ScaleX")

		let _000125TranslationXAnimation = CAKeyframeAnimation(keyPath: "transform.translation.x")
		_000125TranslationXAnimation.duration = 2.150
		_000125TranslationXAnimation.values = [-5875.513, -5875.513, -5620.007, -5083.742, -4372.320, -3639.039, -2819.235, -2217.396, -1338.466, -1163.953, -982.203, -773.785, -528.746, -305.855, -111.441, -18.180, 0.000, 0.000] as [Float]
		_000125TranslationXAnimation.keyTimes = [0.000, 0.279, 0.293, 0.307, 0.321, 0.340, 0.358, 0.372, 0.376, 0.384, 0.395, 0.407, 0.417, 0.430, 0.442, 0.453, 0.465, 1.000] as [NSNumber]
		_000125TranslationXAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming]
		_000125TranslationXAnimation.beginTime = beginTime
		_000125TranslationXAnimation.fillMode = fillMode
		_000125TranslationXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["0001 2 5__root"]?.layer.add(_000125TranslationXAnimation, forKey:"Menu Animation_reversed_TranslationX")

		let _000125TranslationYAnimation = CAKeyframeAnimation(keyPath: "transform.translation.y")
		_000125TranslationYAnimation.duration = 2.150
		_000125TranslationYAnimation.values = [-5438.904, -5438.904, -5420.137, -5342.465, -5174.652, -4911.402, -4470.909, -4045.232, -3156.420, -2929.851, -2665.868, -2325.966, -1859.540, -1299.228, -657.216, -129.599, 0.000, 0.000] as [Float]
		_000125TranslationYAnimation.keyTimes = [0.000, 0.279, 0.293, 0.307, 0.321, 0.340, 0.358, 0.372, 0.376, 0.384, 0.395, 0.407, 0.417, 0.430, 0.442, 0.453, 0.465, 1.000] as [NSNumber]
		_000125TranslationYAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming]
		_000125TranslationYAnimation.beginTime = beginTime
		_000125TranslationYAnimation.fillMode = fillMode
		_000125TranslationYAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["0001 2 5__root"]?.layer.add(_000125TranslationYAnimation, forKey:"Menu Animation_reversed_TranslationY")

		let fsIcon01OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		fsIcon01OpacityAnimation.duration = 2.150
		fsIcon01OpacityAnimation.values = [1.000, 1.000, 0.000, 0.000] as [Float]
		fsIcon01OpacityAnimation.keyTimes = [0.000, 0.523, 0.547, 1.000] as [NSNumber]
		fsIcon01OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		fsIcon01OpacityAnimation.beginTime = beginTime
		fsIcon01OpacityAnimation.fillMode = fillMode
		fsIcon01OpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["fs_icon-01__root"]?.layer.add(fsIcon01OpacityAnimation, forKey:"Menu Animation_reversed_Opacity")

		let homeArrows02OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		homeArrows02OpacityAnimation.duration = 2.150
		homeArrows02OpacityAnimation.values = [1.000, 1.000, 0.000, 0.000] as [Float]
		homeArrows02OpacityAnimation.keyTimes = [0.000, 0.360, 0.384, 1.000] as [NSNumber]
		homeArrows02OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		homeArrows02OpacityAnimation.beginTime = beginTime
		homeArrows02OpacityAnimation.fillMode = fillMode
		homeArrows02OpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Home_Arrows-02__root"]?.layer.add(homeArrows02OpacityAnimation, forKey:"Menu Animation_reversed_Opacity")

		let menuIcons02ScaleXAnimation = CAKeyframeAnimation(keyPath: "transform.scale.x")
		menuIcons02ScaleXAnimation.duration = 2.150
		menuIcons02ScaleXAnimation.values = [0.906, 0.906, 1.133] as [Float]
		menuIcons02ScaleXAnimation.keyTimes = [0.000, 0.837, 1.000] as [NSNumber]
		menuIcons02ScaleXAnimation.timingFunctions = [linearTiming, linearTiming]
		menuIcons02ScaleXAnimation.beginTime = beginTime
		menuIcons02ScaleXAnimation.fillMode = fillMode
		menuIcons02ScaleXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["menu_icons-02__xScale"]?.layer.add(menuIcons02ScaleXAnimation, forKey:"Menu Animation_reversed_ScaleX")

		let menuIcons02ScaleYAnimation = CAKeyframeAnimation(keyPath: "transform.scale.y")
		menuIcons02ScaleYAnimation.duration = 2.150
		menuIcons02ScaleYAnimation.values = [0.906, 0.906, 1.133] as [Float]
		menuIcons02ScaleYAnimation.keyTimes = [0.000, 0.837, 1.000] as [NSNumber]
		menuIcons02ScaleYAnimation.timingFunctions = [linearTiming, linearTiming]
		menuIcons02ScaleYAnimation.beginTime = beginTime
		menuIcons02ScaleYAnimation.fillMode = fillMode
		menuIcons02ScaleYAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["menu_icons-02__yScale"]?.layer.add(menuIcons02ScaleYAnimation, forKey:"Menu Animation_reversed_ScaleY")

		let menuIcons02TranslationXAnimation = CAKeyframeAnimation(keyPath: "transform.translation.x")
		menuIcons02TranslationXAnimation.duration = 2.150
		menuIcons02TranslationXAnimation.values = [-469.271, -469.271, 0.000] as [Float]
		menuIcons02TranslationXAnimation.keyTimes = [0.000, 0.837, 1.000] as [NSNumber]
		menuIcons02TranslationXAnimation.timingFunctions = [linearTiming, linearTiming]
		menuIcons02TranslationXAnimation.beginTime = beginTime
		menuIcons02TranslationXAnimation.fillMode = fillMode
		menuIcons02TranslationXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["menu_icons-02__root"]?.layer.add(menuIcons02TranslationXAnimation, forKey:"Menu Animation_reversed_TranslationX")

		let menuIcons02TranslationYAnimation = CAKeyframeAnimation(keyPath: "transform.translation.y")
		menuIcons02TranslationYAnimation.duration = 2.150
		menuIcons02TranslationYAnimation.values = [714.714, 714.714, 0.000] as [Float]
		menuIcons02TranslationYAnimation.keyTimes = [0.000, 0.837, 1.000] as [NSNumber]
		menuIcons02TranslationYAnimation.timingFunctions = [linearTiming, linearTiming]
		menuIcons02TranslationYAnimation.beginTime = beginTime
		menuIcons02TranslationYAnimation.fillMode = fillMode
		menuIcons02TranslationYAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["menu_icons-02__root"]?.layer.add(menuIcons02TranslationYAnimation, forKey:"Menu Animation_reversed_TranslationY")

		let homeArrows05OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		homeArrows05OpacityAnimation.duration = 2.150
		homeArrows05OpacityAnimation.values = [1.000, 1.000, 0.000, 0.000] as [Float]
		homeArrows05OpacityAnimation.keyTimes = [0.000, 0.419, 0.456, 1.000] as [NSNumber]
		homeArrows05OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		homeArrows05OpacityAnimation.beginTime = beginTime
		homeArrows05OpacityAnimation.fillMode = fillMode
		homeArrows05OpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Home_Arrows-05__root"]?.layer.add(homeArrows05OpacityAnimation, forKey:"Menu Animation_reversed_Opacity")

		let homeArrows05TranslationXAnimation = CAKeyframeAnimation(keyPath: "transform.translation.x")
		homeArrows05TranslationXAnimation.duration = 2.150
		homeArrows05TranslationXAnimation.values = [-70.990, -70.990] as [Float]
		homeArrows05TranslationXAnimation.keyTimes = [0.000, 1.000] as [NSNumber]
		homeArrows05TranslationXAnimation.timingFunctions = [linearTiming]
		homeArrows05TranslationXAnimation.beginTime = beginTime
		homeArrows05TranslationXAnimation.fillMode = fillMode
		homeArrows05TranslationXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Home_Arrows-05__root"]?.layer.add(homeArrows05TranslationXAnimation, forKey:"Menu Animation_reversed_TranslationX")

		let homeArrows05TranslationYAnimation = CAKeyframeAnimation(keyPath: "transform.translation.y")
		homeArrows05TranslationYAnimation.duration = 2.150
		homeArrows05TranslationYAnimation.values = [0.391, 0.391] as [Float]
		homeArrows05TranslationYAnimation.keyTimes = [0.000, 1.000] as [NSNumber]
		homeArrows05TranslationYAnimation.timingFunctions = [linearTiming]
		homeArrows05TranslationYAnimation.beginTime = beginTime
		homeArrows05TranslationYAnimation.fillMode = fillMode
		homeArrows05TranslationYAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Home_Arrows-05__root"]?.layer.add(homeArrows05TranslationYAnimation, forKey:"Menu Animation_reversed_TranslationY")

		let phoneBookbtn201OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		phoneBookbtn201OpacityAnimation.duration = 2.150
		phoneBookbtn201OpacityAnimation.values = [1.000, 1.000, 0.060, 0.060] as [Float]
		phoneBookbtn201OpacityAnimation.keyTimes = [0.000, 0.360, 0.407, 1.000] as [NSNumber]
		phoneBookbtn201OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		phoneBookbtn201OpacityAnimation.beginTime = beginTime
		phoneBookbtn201OpacityAnimation.fillMode = fillMode
		phoneBookbtn201OpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["phoneBookbtn2-01__root"]?.layer.add(phoneBookbtn201OpacityAnimation, forKey:"Menu Animation_reversed_Opacity")

		let rejectCall01OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		rejectCall01OpacityAnimation.duration = 2.150
		rejectCall01OpacityAnimation.values = [1.000, 1.000, 0.060, 0.060] as [Float]
		rejectCall01OpacityAnimation.keyTimes = [0.000, 0.279, 0.326, 1.000] as [NSNumber]
		rejectCall01OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		rejectCall01OpacityAnimation.beginTime = beginTime
		rejectCall01OpacityAnimation.fillMode = fillMode
		rejectCall01OpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["RejectCall-01__root"]?.layer.add(rejectCall01OpacityAnimation, forKey:"Menu Animation_reversed_Opacity")

		let acceptCall01OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		acceptCall01OpacityAnimation.duration = 2.150
		acceptCall01OpacityAnimation.values = [1.000, 1.000, 0.060, 0.060] as [Float]
		acceptCall01OpacityAnimation.keyTimes = [0.000, 0.267, 0.314, 1.000] as [NSNumber]
		acceptCall01OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		acceptCall01OpacityAnimation.beginTime = beginTime
		acceptCall01OpacityAnimation.fillMode = fillMode
		acceptCall01OpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["AcceptCall-01__root"]?.layer.add(acceptCall01OpacityAnimation, forKey:"Menu Animation_reversed_Opacity")

		let fsIcon03OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		fsIcon03OpacityAnimation.duration = 2.150
		fsIcon03OpacityAnimation.values = [1.000, 1.000, 0.000, 0.000] as [Float]
		fsIcon03OpacityAnimation.keyTimes = [0.000, 0.442, 0.465, 1.000] as [NSNumber]
		fsIcon03OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		fsIcon03OpacityAnimation.beginTime = beginTime
		fsIcon03OpacityAnimation.fillMode = fillMode
		fsIcon03OpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["fs_icon-03__root"]?.layer.add(fsIcon03OpacityAnimation, forKey:"Menu Animation_reversed_Opacity")

		let fsIcon02OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		fsIcon02OpacityAnimation.duration = 2.150
		fsIcon02OpacityAnimation.values = [1.000, 1.000, 0.000, 0.000] as [Float]
		fsIcon02OpacityAnimation.keyTimes = [0.000, 0.488, 0.512, 1.000] as [NSNumber]
		fsIcon02OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		fsIcon02OpacityAnimation.beginTime = beginTime
		fsIcon02OpacityAnimation.fillMode = fillMode
		fsIcon02OpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["fs_icon-02__root"]?.layer.add(fsIcon02OpacityAnimation, forKey:"Menu Animation_reversed_Opacity")

		let _000124RotationAnimation = CAKeyframeAnimation(keyPath: "transform.rotation.z")
		_000124RotationAnimation.duration = 2.150
		_000124RotationAnimation.values = [4.534, 4.534, 4.408, 4.230, 4.065, 3.854, 3.715, 3.624, 3.458, 3.362, 3.277, 3.277, 1.728, 1.728] as [Float]
		_000124RotationAnimation.keyTimes = [0.000, 0.547, 0.558, 0.570, 0.581, 0.593, 0.605, 0.616, 0.628, 0.640, 0.651, 0.651, 0.652, 1.000] as [NSNumber]
		_000124RotationAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, instantTiming, instantTiming, linearTiming]
		_000124RotationAnimation.beginTime = beginTime
		_000124RotationAnimation.fillMode = fillMode
		_000124RotationAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["0001 2 4__root"]?.layer.add(_000124RotationAnimation, forKey:"Menu Animation_reversed_Rotation")

		let _000124OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		_000124OpacityAnimation.duration = 2.150
		_000124OpacityAnimation.values = [0.000, 0.000, 0.000, 20.000, 1.000, 1.000, 0.000, 0.000] as [Float]
		_000124OpacityAnimation.keyTimes = [0.000, 0.523, 0.523, 0.524, 0.674, 0.675, 0.675, 1.000] as [NSNumber]
		_000124OpacityAnimation.timingFunctions = [linearTiming, instantTiming, instantTiming, linearTiming, instantTiming, instantTiming, linearTiming]
		_000124OpacityAnimation.beginTime = beginTime
		_000124OpacityAnimation.fillMode = fillMode
		_000124OpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["0001 2 4__root"]?.layer.add(_000124OpacityAnimation, forKey:"Menu Animation_reversed_Opacity")

		let _000124ScaleXAnimation = CAKeyframeAnimation(keyPath: "transform.scale.x")
		_000124ScaleXAnimation.duration = 2.150
		_000124ScaleXAnimation.values = [0.106, 0.106, 1.212, 1.212, 0.924, 0.746, 0.597, 0.057, 0.466, 0.121, 0.121] as [Float]
		_000124ScaleXAnimation.keyTimes = [0.000, 0.523, 0.547, 0.593, 0.616, 0.628, 0.640, 0.651, 0.663, 0.674, 1.000] as [NSNumber]
		_000124ScaleXAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming]
		_000124ScaleXAnimation.beginTime = beginTime
		_000124ScaleXAnimation.fillMode = fillMode
		_000124ScaleXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["0001 2 4__xScale"]?.layer.add(_000124ScaleXAnimation, forKey:"Menu Animation_reversed_ScaleX")

		let _000124TranslationXAnimation = CAKeyframeAnimation(keyPath: "transform.translation.x")
		_000124TranslationXAnimation.duration = 2.150
		_000124TranslationXAnimation.values = [2543.710, 2543.710, 2493.419, 2375.451, 2170.998, 1826.974, 1424.415, 1065.932, 787.768, 361.776, 120.122, 26.113, 13.000, 0.000, 0.000] as [Float]
		_000124TranslationXAnimation.keyTimes = [0.000, 0.523, 0.547, 0.558, 0.570, 0.581, 0.593, 0.605, 0.616, 0.628, 0.640, 0.651, 0.663, 0.674, 1.000] as [NSNumber]
		_000124TranslationXAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming]
		_000124TranslationXAnimation.beginTime = beginTime
		_000124TranslationXAnimation.fillMode = fillMode
		_000124TranslationXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["0001 2 4__root"]?.layer.add(_000124TranslationXAnimation, forKey:"Menu Animation_reversed_TranslationX")

		let _000124TranslationYAnimation = CAKeyframeAnimation(keyPath: "transform.translation.y")
		_000124TranslationYAnimation.duration = 2.150
		_000124TranslationYAnimation.values = [2526.698, 2526.698, 2248.146, 1870.842, 1378.185, 891.896, 494.045, 223.663, 67.686, -109.137, -173.974, -183.879, -90.578, 0.000, 0.000] as [Float]
		_000124TranslationYAnimation.keyTimes = [0.000, 0.523, 0.547, 0.558, 0.570, 0.581, 0.593, 0.605, 0.616, 0.628, 0.640, 0.651, 0.663, 0.674, 1.000] as [NSNumber]
		_000124TranslationYAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming]
		_000124TranslationYAnimation.beginTime = beginTime
		_000124TranslationYAnimation.fillMode = fillMode
		_000124TranslationYAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["0001 2 4__root"]?.layer.add(_000124TranslationYAnimation, forKey:"Menu Animation_reversed_TranslationY")

		let circle01MaskTranslationXAnimation = CAKeyframeAnimation(keyPath: "transform.translation.x")
		circle01MaskTranslationXAnimation.duration = 2.150
		circle01MaskTranslationXAnimation.values = [85.522, 85.522, 2.763, 0.000, 0.000] as [Float]
		circle01MaskTranslationXAnimation.keyTimes = [0.000, 0.674, 0.791, 0.802, 1.000] as [NSNumber]
		circle01MaskTranslationXAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming]
		circle01MaskTranslationXAnimation.beginTime = beginTime
		circle01MaskTranslationXAnimation.fillMode = fillMode
		circle01MaskTranslationXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Circle-01_mask__root"]?.layer.add(circle01MaskTranslationXAnimation, forKey:"Menu Animation_reversed_TranslationX")

		let circle01MaskTranslationYAnimation = CAKeyframeAnimation(keyPath: "transform.translation.y")
		circle01MaskTranslationYAnimation.duration = 2.150
		circle01MaskTranslationYAnimation.values = [-411.028, -411.028, 0.430, 0.000, 0.000] as [Float]
		circle01MaskTranslationYAnimation.keyTimes = [0.000, 0.674, 0.791, 0.802, 1.000] as [NSNumber]
		circle01MaskTranslationYAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming]
		circle01MaskTranslationYAnimation.beginTime = beginTime
		circle01MaskTranslationYAnimation.fillMode = fillMode
		circle01MaskTranslationYAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Circle-01_mask__root"]?.layer.add(circle01MaskTranslationYAnimation, forKey:"Menu Animation_reversed_TranslationY")

		let homeArrows01OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		homeArrows01OpacityAnimation.duration = 2.150
		homeArrows01OpacityAnimation.values = [1.000, 1.000, 0.000, 0.000] as [Float]
		homeArrows01OpacityAnimation.keyTimes = [0.000, 0.302, 0.372, 1.000] as [NSNumber]
		homeArrows01OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		homeArrows01OpacityAnimation.beginTime = beginTime
		homeArrows01OpacityAnimation.fillMode = fillMode
		homeArrows01OpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Home_Arrows-01__root"]?.layer.add(homeArrows01OpacityAnimation, forKey:"Menu Animation_reversed_Opacity")

		let _000127RotationAnimation = CAKeyframeAnimation(keyPath: "transform.rotation.z")
		_000127RotationAnimation.duration = 2.150
		_000127RotationAnimation.values = [0.712, 0.712, 0.773, 0.869, 0.996, 1.342, 1.398] as [Float]
		_000127RotationAnimation.keyTimes = [0.000, 0.372, 0.384, 0.395, 0.430, 0.465, 1.000] as [NSNumber]
		_000127RotationAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming]
		_000127RotationAnimation.beginTime = beginTime
		_000127RotationAnimation.fillMode = fillMode
		_000127RotationAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["0001 2 7__root"]?.layer.add(_000127RotationAnimation, forKey:"Menu Animation_reversed_Rotation")

		let _000127OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		_000127OpacityAnimation.duration = 2.150
		_000127OpacityAnimation.values = [1.000, 1.000, 1.000, 0.000, 0.000, 0.000, 20.000, 1.000, 1.000, 0.000, 0.000] as [Float]
		_000127OpacityAnimation.keyTimes = [0.000, 0.430, 0.430, 0.431, 0.442, 0.442, 0.442, 0.500, 0.500, 0.500, 1.000] as [NSNumber]
		_000127OpacityAnimation.timingFunctions = [linearTiming, instantTiming, instantTiming, linearTiming, instantTiming, instantTiming, linearTiming, instantTiming, instantTiming, linearTiming]
		_000127OpacityAnimation.beginTime = beginTime
		_000127OpacityAnimation.fillMode = fillMode
		_000127OpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["0001 2 7__root"]?.layer.add(_000127OpacityAnimation, forKey:"Menu Animation_reversed_Opacity")

		let _000127ScaleXAnimation = CAKeyframeAnimation(keyPath: "transform.scale.x")
		_000127ScaleXAnimation.duration = 2.150
		_000127ScaleXAnimation.values = [0.047, 0.047, 1.081, 0.064, 0.691, 0.097, 0.097] as [Float]
		_000127ScaleXAnimation.keyTimes = [0.000, 0.360, 0.372, 0.430, 0.453, 0.500, 1.000] as [NSNumber]
		_000127ScaleXAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming]
		_000127ScaleXAnimation.beginTime = beginTime
		_000127ScaleXAnimation.fillMode = fillMode
		_000127ScaleXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["0001 2 7__xScale"]?.layer.add(_000127ScaleXAnimation, forKey:"Menu Animation_reversed_ScaleX")

		let _000127TranslationXAnimation = CAKeyframeAnimation(keyPath: "transform.translation.x")
		_000127TranslationXAnimation.duration = 2.150
		_000127TranslationXAnimation.values = [-1815.831, -1815.831, -1651.465, -1460.782, -1088.321, -827.110, -710.981, -172.758, -142.976, -81.119, -21.431, 0.000, 0.000] as [Float]
		_000127TranslationXAnimation.keyTimes = [0.000, 0.360, 0.372, 0.384, 0.395, 0.407, 0.430, 0.442, 0.453, 0.465, 0.477, 0.500, 1.000] as [NSNumber]
		_000127TranslationXAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming]
		_000127TranslationXAnimation.beginTime = beginTime
		_000127TranslationXAnimation.fillMode = fillMode
		_000127TranslationXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["0001 2 7__root"]?.layer.add(_000127TranslationXAnimation, forKey:"Menu Animation_reversed_TranslationX")

		let _000127TranslationYAnimation = CAKeyframeAnimation(keyPath: "transform.translation.y")
		_000127TranslationYAnimation.duration = 2.150
		_000127TranslationYAnimation.values = [-3057.911, -3057.911, -2915.958, -2749.668, -2356.329, -2016.583, -1837.336, -725.949, -597.811, -399.519, -122.696, 0.000, 0.000] as [Float]
		_000127TranslationYAnimation.keyTimes = [0.000, 0.360, 0.372, 0.384, 0.395, 0.407, 0.430, 0.442, 0.453, 0.465, 0.477, 0.500, 1.000] as [NSNumber]
		_000127TranslationYAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming]
		_000127TranslationYAnimation.beginTime = beginTime
		_000127TranslationYAnimation.fillMode = fillMode
		_000127TranslationYAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["0001 2 7__root"]?.layer.add(_000127TranslationYAnimation, forKey:"Menu Animation_reversed_TranslationY")

		let numpadOpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		numpadOpacityAnimation.duration = 2.150
		numpadOpacityAnimation.values = [1.000, 1.000, 0.000, 0.000] as [Float]
		numpadOpacityAnimation.keyTimes = [0.000, 0.247, 0.302, 1.000] as [NSNumber]
		numpadOpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		numpadOpacityAnimation.beginTime = beginTime
		numpadOpacityAnimation.fillMode = fillMode
		numpadOpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["numpad__root"]?.layer.add(numpadOpacityAnimation, forKey:"Menu Animation_reversed_Opacity")

		let fsIcon05OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		fsIcon05OpacityAnimation.duration = 2.150
		fsIcon05OpacityAnimation.values = [1.000, 1.000, 0.000, 0.000] as [Float]
		fsIcon05OpacityAnimation.keyTimes = [0.000, 0.337, 0.360, 1.000] as [NSNumber]
		fsIcon05OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		fsIcon05OpacityAnimation.beginTime = beginTime
		fsIcon05OpacityAnimation.fillMode = fillMode
		fsIcon05OpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["fs_icon-05__root"]?.layer.add(fsIcon05OpacityAnimation, forKey:"Menu Animation_reversed_Opacity")

		let _000126RotationAnimation = CAKeyframeAnimation(keyPath: "transform.rotation.z")
		_000126RotationAnimation.duration = 2.150
		_000126RotationAnimation.values = [0.016, 0.016, 0.013] as [Float]
		_000126RotationAnimation.keyTimes = [0.000, 0.477, 1.000] as [NSNumber]
		_000126RotationAnimation.timingFunctions = [linearTiming, linearTiming]
		_000126RotationAnimation.beginTime = beginTime
		_000126RotationAnimation.fillMode = fillMode
		_000126RotationAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["0001 2 6__root"]?.layer.add(_000126RotationAnimation, forKey:"Menu Animation_reversed_Rotation")

		let _000126OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		_000126OpacityAnimation.duration = 2.150
		_000126OpacityAnimation.values = [1.000, 1.000, 1.000, 0.000, 0.000, 0.000, 20.000, 1.000, 1.000, 0.000, 0.000, 0.000, 20.000, 1.000, 1.000, 0.000, 0.000, 0.000, 20.000, 1.000, 1.000, 0.000, 0.000] as [Float]
		_000126OpacityAnimation.keyTimes = [0.000, 0.395, 0.396, 0.396, 0.407, 0.407, 0.407, 0.442, 0.442, 0.442, 0.453, 0.454, 0.454, 0.488, 0.489, 0.489, 0.500, 0.500, 0.500, 0.523, 0.523, 0.524, 1.000] as [NSNumber]
		_000126OpacityAnimation.timingFunctions = [linearTiming, instantTiming, instantTiming, linearTiming, instantTiming, instantTiming, linearTiming, instantTiming, instantTiming, linearTiming, instantTiming, instantTiming, linearTiming, instantTiming, instantTiming, linearTiming, instantTiming, instantTiming, linearTiming, instantTiming, instantTiming, linearTiming]
		_000126OpacityAnimation.beginTime = beginTime
		_000126OpacityAnimation.fillMode = fillMode
		_000126OpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["0001 2 6__root"]?.layer.add(_000126OpacityAnimation, forKey:"Menu Animation_reversed_Opacity")

		let _000126ScaleXAnimation = CAKeyframeAnimation(keyPath: "transform.scale.x")
		_000126ScaleXAnimation.duration = 2.150
		_000126ScaleXAnimation.values = [0.024, 0.024, 0.504, 0.145, 0.052, 0.599, 0.041, 0.581, 0.202, 0.034, 0.423, 0.052, 0.052] as [Float]
		_000126ScaleXAnimation.keyTimes = [0.000, 0.349, 0.360, 0.395, 0.407, 0.419, 0.453, 0.465, 0.488, 0.500, 0.512, 0.523, 1.000] as [NSNumber]
		_000126ScaleXAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming]
		_000126ScaleXAnimation.beginTime = beginTime
		_000126ScaleXAnimation.fillMode = fillMode
		_000126ScaleXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["0001 2 6__xScale"]?.layer.add(_000126ScaleXAnimation, forKey:"Menu Animation_reversed_ScaleX")

		let _000126TranslationXAnimation = CAKeyframeAnimation(keyPath: "transform.translation.x")
		_000126TranslationXAnimation.duration = 2.150
		_000126TranslationXAnimation.values = [4503.861, 4503.861, 4402.885, 4114.901, 4007.862, 3158.612, 3043.785, 2925.466, 2679.238, 1826.058, 1712.637, 1562.803, 1324.767, 481.876, 400.148, 0.000, 0.000] as [Float]
		_000126TranslationXAnimation.keyTimes = [0.000, 0.349, 0.360, 0.372, 0.395, 0.407, 0.419, 0.430, 0.442, 0.453, 0.465, 0.477, 0.488, 0.500, 0.512, 0.523, 1.000] as [NSNumber]
		_000126TranslationXAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming]
		_000126TranslationXAnimation.beginTime = beginTime
		_000126TranslationXAnimation.fillMode = fillMode
		_000126TranslationXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["0001 2 6__root"]?.layer.add(_000126TranslationXAnimation, forKey:"Menu Animation_reversed_TranslationX")

		let _000126TranslationYAnimation = CAKeyframeAnimation(keyPath: "transform.translation.y")
		_000126TranslationYAnimation.duration = 2.150
		_000126TranslationYAnimation.values = [3.762, 3.762, 2.175, 11.393, 9.711, 5.682, 3.877, 5.379, 4.583, -2.253, -4.035, 5.141, 4.008, 0.601, -0.445, 0.000, 0.000] as [Float]
		_000126TranslationYAnimation.keyTimes = [0.000, 0.349, 0.360, 0.372, 0.395, 0.407, 0.419, 0.430, 0.442, 0.453, 0.465, 0.477, 0.488, 0.500, 0.512, 0.523, 1.000] as [NSNumber]
		_000126TranslationYAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming]
		_000126TranslationYAnimation.beginTime = beginTime
		_000126TranslationYAnimation.fillMode = fillMode
		_000126TranslationYAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["0001 2 6__root"]?.layer.add(_000126TranslationYAnimation, forKey:"Menu Animation_reversed_TranslationY")

		let icon02Menu01OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		icon02Menu01OpacityAnimation.duration = 2.150
		icon02Menu01OpacityAnimation.values = [0.000, 0.000, 1.000] as [Float]
		icon02Menu01OpacityAnimation.keyTimes = [0.000, 0.837, 1.000] as [NSNumber]
		icon02Menu01OpacityAnimation.timingFunctions = [linearTiming, linearTiming]
		icon02Menu01OpacityAnimation.beginTime = beginTime
		icon02Menu01OpacityAnimation.fillMode = fillMode
		icon02Menu01OpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["icon_02_menu-01__root"]?.layer.add(icon02Menu01OpacityAnimation, forKey:"Menu Animation_reversed_Opacity")

		let _000123RotationAnimation = CAKeyframeAnimation(keyPath: "transform.rotation.z")
		_000123RotationAnimation.duration = 2.150
		_000123RotationAnimation.values = [0.723, 0.723, 0.794, 0.892, 0.976, 1.093, 1.174, 1.317, 1.444, 1.444] as [Float]
		_000123RotationAnimation.keyTimes = [0.000, 0.288, 0.302, 0.316, 0.326, 0.349, 0.363, 0.377, 0.395, 1.000] as [NSNumber]
		_000123RotationAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming]
		_000123RotationAnimation.beginTime = beginTime
		_000123RotationAnimation.fillMode = fillMode
		_000123RotationAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["0001 2 3__root"]?.layer.add(_000123RotationAnimation, forKey:"Menu Animation_reversed_Rotation")

		let _000123OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		_000123OpacityAnimation.duration = 2.150
		_000123OpacityAnimation.values = [1.000, 1.000, 1.000, 0.000, 0.000, 0.000, 20.000, 20.000, 20.000, 1.000, 1.000] as [Float]
		_000123OpacityAnimation.keyTimes = [0.000, 0.326, 0.326, 0.326, 0.335, 0.335, 0.335, 0.405, 0.405, 0.405, 1.000] as [NSNumber]
		_000123OpacityAnimation.timingFunctions = [linearTiming, instantTiming, instantTiming, linearTiming, instantTiming, instantTiming, linearTiming, instantTiming, instantTiming, linearTiming]
		_000123OpacityAnimation.beginTime = beginTime
		_000123OpacityAnimation.fillMode = fillMode
		_000123OpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["0001 2 3__root"]?.layer.add(_000123OpacityAnimation, forKey:"Menu Animation_reversed_Opacity")

		let _000123ScaleXAnimation = CAKeyframeAnimation(keyPath: "transform.scale.x")
		_000123ScaleXAnimation.duration = 2.150
		_000123ScaleXAnimation.values = [0.080, 0.080, 1.212, 0.113, 1.717, 0.108, 0.108] as [Float]
		_000123ScaleXAnimation.keyTimes = [0.000, 0.279, 0.288, 0.326, 0.349, 0.405, 1.000] as [NSNumber]
		_000123ScaleXAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming]
		_000123ScaleXAnimation.beginTime = beginTime
		_000123ScaleXAnimation.fillMode = fillMode
		_000123ScaleXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["0001 2 3__xScale"]?.layer.add(_000123ScaleXAnimation, forKey:"Menu Animation_reversed_ScaleX")

		let _000123TranslationXAnimation = CAKeyframeAnimation(keyPath: "transform.translation.x")
		_000123TranslationXAnimation.duration = 2.150
		_000123TranslationXAnimation.values = [-2725.618, -2725.618, -2547.450, -2085.106, -1742.567, -1593.592, -906.248, -751.335, -584.207, -233.269, -42.644, 0.000, 0.000] as [Float]
		_000123TranslationXAnimation.keyTimes = [0.000, 0.279, 0.288, 0.302, 0.316, 0.326, 0.335, 0.349, 0.363, 0.377, 0.395, 0.405, 1.000] as [NSNumber]
		_000123TranslationXAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming]
		_000123TranslationXAnimation.beginTime = beginTime
		_000123TranslationXAnimation.fillMode = fillMode
		_000123TranslationXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["0001 2 3__root"]?.layer.add(_000123TranslationXAnimation, forKey:"Menu Animation_reversed_TranslationX")

		let _000123TranslationYAnimation = CAKeyframeAnimation(keyPath: "transform.translation.y")
		_000123TranslationYAnimation.duration = 2.150
		_000123TranslationYAnimation.values = [-5115.499, -5115.499, -4958.156, -4526.854, -4142.831, -3959.432, -2942.264, -2643.320, -2261.328, -1279.551, -335.137, 0.000, 0.000] as [Float]
		_000123TranslationYAnimation.keyTimes = [0.000, 0.279, 0.288, 0.302, 0.316, 0.326, 0.335, 0.349, 0.363, 0.377, 0.395, 0.405, 1.000] as [NSNumber]
		_000123TranslationYAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming]
		_000123TranslationYAnimation.beginTime = beginTime
		_000123TranslationYAnimation.fillMode = fillMode
		_000123TranslationYAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["0001 2 3__root"]?.layer.add(_000123TranslationYAnimation, forKey:"Menu Animation_reversed_TranslationY")

		let infoOpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		infoOpacityAnimation.duration = 2.150
		infoOpacityAnimation.values = [1.000, 1.000, 0.000, 0.000] as [Float]
		infoOpacityAnimation.keyTimes = [0.000, 0.265, 0.293, 1.000] as [NSNumber]
		infoOpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		infoOpacityAnimation.beginTime = beginTime
		infoOpacityAnimation.fillMode = fillMode
		infoOpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["info__root"]?.layer.add(infoOpacityAnimation, forKey:"Menu Animation_reversed_Opacity")

		let fsIcon04OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		fsIcon04OpacityAnimation.duration = 2.150
		fsIcon04OpacityAnimation.values = [1.000, 1.000, 0.000, 0.000] as [Float]
		fsIcon04OpacityAnimation.keyTimes = [0.000, 0.395, 0.419, 1.000] as [NSNumber]
		fsIcon04OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		fsIcon04OpacityAnimation.beginTime = beginTime
		fsIcon04OpacityAnimation.fillMode = fillMode
		fsIcon04OpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["fs_icon-04__root"]?.layer.add(fsIcon04OpacityAnimation, forKey:"Menu Animation_reversed_Opacity")

		let homeArrows03OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		homeArrows03OpacityAnimation.duration = 2.150
		homeArrows03OpacityAnimation.values = [1.000, 1.000, 1.000, 0.000, 0.000] as [Float]
		homeArrows03OpacityAnimation.keyTimes = [0.000, 0.163, 0.274, 0.344, 1.000] as [NSNumber]
		homeArrows03OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming]
		homeArrows03OpacityAnimation.beginTime = beginTime
		homeArrows03OpacityAnimation.fillMode = fillMode
		homeArrows03OpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Home_Arrows-03__root"]?.layer.add(homeArrows03OpacityAnimation, forKey:"Menu Animation_reversed_Opacity")

		let homeArrows04OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		homeArrows04OpacityAnimation.duration = 2.150
		homeArrows04OpacityAnimation.values = [1.000, 1.000, 1.000, 0.000, 0.000] as [Float]
		homeArrows04OpacityAnimation.keyTimes = [0.000, 0.163, 0.219, 0.288, 1.000] as [NSNumber]
		homeArrows04OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming]
		homeArrows04OpacityAnimation.beginTime = beginTime
		homeArrows04OpacityAnimation.fillMode = fillMode
		homeArrows04OpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Home_Arrows-04__root"]?.layer.add(homeArrows04OpacityAnimation, forKey:"Menu Animation_reversed_Opacity")

		let menuIcons03ScaleXAnimation = CAKeyframeAnimation(keyPath: "transform.scale.x")
		menuIcons03ScaleXAnimation.duration = 2.150
		menuIcons03ScaleXAnimation.values = [0.905, 0.905, 1.131, 1.131] as [Float]
		menuIcons03ScaleXAnimation.keyTimes = [0.000, 0.674, 0.837, 1.000] as [NSNumber]
		menuIcons03ScaleXAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		menuIcons03ScaleXAnimation.beginTime = beginTime
		menuIcons03ScaleXAnimation.fillMode = fillMode
		menuIcons03ScaleXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["menu_icons-03__xScale"]?.layer.add(menuIcons03ScaleXAnimation, forKey:"Menu Animation_reversed_ScaleX")

		let menuIcons03ScaleYAnimation = CAKeyframeAnimation(keyPath: "transform.scale.y")
		menuIcons03ScaleYAnimation.duration = 2.150
		menuIcons03ScaleYAnimation.values = [0.905, 0.905, 1.131, 1.131] as [Float]
		menuIcons03ScaleYAnimation.keyTimes = [0.000, 0.674, 0.837, 1.000] as [NSNumber]
		menuIcons03ScaleYAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		menuIcons03ScaleYAnimation.beginTime = beginTime
		menuIcons03ScaleYAnimation.fillMode = fillMode
		menuIcons03ScaleYAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["menu_icons-03__yScale"]?.layer.add(menuIcons03ScaleYAnimation, forKey:"Menu Animation_reversed_ScaleY")

		let menuIcons03TranslationXAnimation = CAKeyframeAnimation(keyPath: "transform.translation.x")
		menuIcons03TranslationXAnimation.duration = 2.150
		menuIcons03TranslationXAnimation.values = [-702.993, -702.993, 0.000, 0.000] as [Float]
		menuIcons03TranslationXAnimation.keyTimes = [0.000, 0.674, 0.837, 1.000] as [NSNumber]
		menuIcons03TranslationXAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		menuIcons03TranslationXAnimation.beginTime = beginTime
		menuIcons03TranslationXAnimation.fillMode = fillMode
		menuIcons03TranslationXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["menu_icons-03__root"]?.layer.add(menuIcons03TranslationXAnimation, forKey:"Menu Animation_reversed_TranslationX")

		let menuIcons03TranslationYAnimation = CAKeyframeAnimation(keyPath: "transform.translation.y")
		menuIcons03TranslationYAnimation.duration = 2.150
		menuIcons03TranslationYAnimation.values = [507.814, 507.814, 0.000, 0.000] as [Float]
		menuIcons03TranslationYAnimation.keyTimes = [0.000, 0.674, 0.837, 1.000] as [NSNumber]
		menuIcons03TranslationYAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		menuIcons03TranslationYAnimation.beginTime = beginTime
		menuIcons03TranslationYAnimation.fillMode = fillMode
		menuIcons03TranslationYAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["menu_icons-03__root"]?.layer.add(menuIcons03TranslationYAnimation, forKey:"Menu Animation_reversed_TranslationY")

		let _00012RotationAnimation = CAKeyframeAnimation(keyPath: "transform.rotation.z")
		_00012RotationAnimation.duration = 2.150
		_00012RotationAnimation.values = [1.592, 1.592, 1.592, 0.161, 0.161] as [Float]
		_00012RotationAnimation.keyTimes = [0.000, 0.884, 0.884, 0.884, 1.000] as [NSNumber]
		_00012RotationAnimation.timingFunctions = [linearTiming, instantTiming, instantTiming, linearTiming]
		_00012RotationAnimation.beginTime = beginTime
		_00012RotationAnimation.fillMode = fillMode
		_00012RotationAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["0001 2__root"]?.layer.add(_00012RotationAnimation, forKey:"Menu Animation_reversed_Rotation")

		let _00012OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		_00012OpacityAnimation.duration = 2.150
		_00012OpacityAnimation.values = [0.000, 0.000, 0.000, 1.000, 1.000] as [Float]
		_00012OpacityAnimation.keyTimes = [0.000, 0.744, 0.744, 0.745, 1.000] as [NSNumber]
		_00012OpacityAnimation.timingFunctions = [linearTiming, instantTiming, instantTiming, linearTiming]
		_00012OpacityAnimation.beginTime = beginTime
		_00012OpacityAnimation.fillMode = fillMode
		_00012OpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["0001 2__root"]?.layer.add(_00012OpacityAnimation, forKey:"Menu Animation_reversed_Opacity")

		let _00012ScaleXAnimation = CAKeyframeAnimation(keyPath: "transform.scale.x")
		_00012ScaleXAnimation.duration = 2.150
		_00012ScaleXAnimation.values = [0.312, 0.312, 0.004, 0.224, 0.224] as [Float]
		_00012ScaleXAnimation.keyTimes = [0.000, 0.814, 0.884, 0.930, 1.000] as [NSNumber]
		_00012ScaleXAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming]
		_00012ScaleXAnimation.beginTime = beginTime
		_00012ScaleXAnimation.fillMode = fillMode
		_00012ScaleXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["0001 2__xScale"]?.layer.add(_00012ScaleXAnimation, forKey:"Menu Animation_reversed_ScaleX")

		let _00012TranslationXAnimation = CAKeyframeAnimation(keyPath: "transform.translation.x")
		_00012TranslationXAnimation.duration = 2.150
		_00012TranslationXAnimation.values = [-163.481, -163.481, -153.903, -155.271, -109.758, 0.000] as [Float]
		_00012TranslationXAnimation.keyTimes = [0.000, 0.744, 0.814, 0.884, 0.930, 1.000] as [NSNumber]
		_00012TranslationXAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming, linearTiming]
		_00012TranslationXAnimation.beginTime = beginTime
		_00012TranslationXAnimation.fillMode = fillMode
		_00012TranslationXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["0001 2__root"]?.layer.add(_00012TranslationXAnimation, forKey:"Menu Animation_reversed_TranslationX")

		let _00012TranslationYAnimation = CAKeyframeAnimation(keyPath: "transform.translation.y")
		_00012TranslationYAnimation.duration = 2.150
		_00012TranslationYAnimation.values = [-1160.544, -1160.544, -84.326, -19.792, -12.406, 0.000] as [Float]
		_00012TranslationYAnimation.keyTimes = [0.000, 0.744, 0.814, 0.884, 0.930, 1.000] as [NSNumber]
		_00012TranslationYAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming, linearTiming]
		_00012TranslationYAnimation.beginTime = beginTime
		_00012TranslationYAnimation.fillMode = fillMode
		_00012TranslationYAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["0001 2__root"]?.layer.add(_00012TranslationYAnimation, forKey:"Menu Animation_reversed_TranslationY")

		let _000122RotationAnimation = CAKeyframeAnimation(keyPath: "transform.rotation.z")
		_000122RotationAnimation.duration = 2.150
		_000122RotationAnimation.values = [-1.230, -1.230, -1.230, 0.121, 0.356, 0.236] as [Float]
		_000122RotationAnimation.keyTimes = [0.000, 0.884, 0.884, 0.884, 0.930, 1.000] as [NSNumber]
		_000122RotationAnimation.timingFunctions = [linearTiming, instantTiming, instantTiming, linearTiming, linearTiming]
		_000122RotationAnimation.beginTime = beginTime
		_000122RotationAnimation.fillMode = fillMode
		_000122RotationAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["0001 2 2__root"]?.layer.add(_000122RotationAnimation, forKey:"Menu Animation_reversed_Rotation")

		let _000122OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		_000122OpacityAnimation.duration = 2.150
		_000122OpacityAnimation.values = [0.000, 0.000, 0.000, 1.000, 1.000] as [Float]
		_000122OpacityAnimation.keyTimes = [0.000, 0.744, 0.744, 0.745, 1.000] as [NSNumber]
		_000122OpacityAnimation.timingFunctions = [linearTiming, instantTiming, instantTiming, linearTiming]
		_000122OpacityAnimation.beginTime = beginTime
		_000122OpacityAnimation.fillMode = fillMode
		_000122OpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["0001 2 2__root"]?.layer.add(_000122OpacityAnimation, forKey:"Menu Animation_reversed_Opacity")

		let _000122ScaleXAnimation = CAKeyframeAnimation(keyPath: "transform.scale.x")
		_000122ScaleXAnimation.duration = 2.150
		_000122ScaleXAnimation.values = [-0.348, -0.348, 0.000, 0.224, 0.224] as [Float]
		_000122ScaleXAnimation.keyTimes = [0.000, 0.814, 0.884, 0.930, 1.000] as [NSNumber]
		_000122ScaleXAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming]
		_000122ScaleXAnimation.beginTime = beginTime
		_000122ScaleXAnimation.fillMode = fillMode
		_000122ScaleXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["0001 2 2__xScale"]?.layer.add(_000122ScaleXAnimation, forKey:"Menu Animation_reversed_ScaleX")

		let _000122TranslationXAnimation = CAKeyframeAnimation(keyPath: "transform.translation.x")
		_000122TranslationXAnimation.duration = 2.150
		_000122TranslationXAnimation.values = [630.454, 630.454, 199.923, 175.521, 131.461, 0.000] as [Float]
		_000122TranslationXAnimation.keyTimes = [0.000, 0.744, 0.814, 0.884, 0.930, 1.000] as [NSNumber]
		_000122TranslationXAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming, linearTiming]
		_000122TranslationXAnimation.beginTime = beginTime
		_000122TranslationXAnimation.fillMode = fillMode
		_000122TranslationXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["0001 2 2__root"]?.layer.add(_000122TranslationXAnimation, forKey:"Menu Animation_reversed_TranslationX")

		let _000122TranslationYAnimation = CAKeyframeAnimation(keyPath: "transform.translation.y")
		_000122TranslationYAnimation.duration = 2.150
		_000122TranslationYAnimation.values = [-993.593, -993.593, -9.062, 59.819, 43.414, 0.000] as [Float]
		_000122TranslationYAnimation.keyTimes = [0.000, 0.744, 0.814, 0.884, 0.930, 1.000] as [NSNumber]
		_000122TranslationYAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming, linearTiming]
		_000122TranslationYAnimation.beginTime = beginTime
		_000122TranslationYAnimation.fillMode = fillMode
		_000122TranslationYAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["0001 2 2__root"]?.layer.add(_000122TranslationYAnimation, forKey:"Menu Animation_reversed_TranslationY")
	}

	func removeMenuAnimationReversedAnimation() {
		self.layer.removeAnimation(forKey: "MenuAnimationReversed")
		self.viewsByName["Circle-01__root"]?.layer.removeAnimation(forKey: "Menu Animation_reversed_Opacity")
		self.viewsByName["home_icon__root"]?.layer.removeAnimation(forKey: "Menu Animation_reversed_Opacity")
		self.viewsByName["menu_icons-04__xScale"]?.layer.removeAnimation(forKey: "Menu Animation_reversed_ScaleX")
		self.viewsByName["menu_icons-04__yScale"]?.layer.removeAnimation(forKey: "Menu Animation_reversed_ScaleY")
		self.viewsByName["menu_icons-04__root"]?.layer.removeAnimation(forKey: "Menu Animation_reversed_TranslationX")
		self.viewsByName["menu_icons-04__root"]?.layer.removeAnimation(forKey: "Menu Animation_reversed_TranslationY")
		self.viewsByName["changeLayoutBtn-01__root"]?.layer.removeAnimation(forKey: "Menu Animation_reversed_Opacity")
		self.viewsByName["0001 2 5__root"]?.layer.removeAnimation(forKey: "Menu Animation_reversed_Rotation")
		self.viewsByName["0001 2 5__root"]?.layer.removeAnimation(forKey: "Menu Animation_reversed_Opacity")
		self.viewsByName["0001 2 5__xScale"]?.layer.removeAnimation(forKey: "Menu Animation_reversed_ScaleX")
		self.viewsByName["0001 2 5__root"]?.layer.removeAnimation(forKey: "Menu Animation_reversed_TranslationX")
		self.viewsByName["0001 2 5__root"]?.layer.removeAnimation(forKey: "Menu Animation_reversed_TranslationY")
		self.viewsByName["fs_icon-01__root"]?.layer.removeAnimation(forKey: "Menu Animation_reversed_Opacity")
		self.viewsByName["Home_Arrows-02__root"]?.layer.removeAnimation(forKey: "Menu Animation_reversed_Opacity")
		self.viewsByName["menu_icons-02__xScale"]?.layer.removeAnimation(forKey: "Menu Animation_reversed_ScaleX")
		self.viewsByName["menu_icons-02__yScale"]?.layer.removeAnimation(forKey: "Menu Animation_reversed_ScaleY")
		self.viewsByName["menu_icons-02__root"]?.layer.removeAnimation(forKey: "Menu Animation_reversed_TranslationX")
		self.viewsByName["menu_icons-02__root"]?.layer.removeAnimation(forKey: "Menu Animation_reversed_TranslationY")
		self.viewsByName["Home_Arrows-05__root"]?.layer.removeAnimation(forKey: "Menu Animation_reversed_Opacity")
		self.viewsByName["Home_Arrows-05__root"]?.layer.removeAnimation(forKey: "Menu Animation_reversed_TranslationX")
		self.viewsByName["Home_Arrows-05__root"]?.layer.removeAnimation(forKey: "Menu Animation_reversed_TranslationY")
		self.viewsByName["phoneBookbtn2-01__root"]?.layer.removeAnimation(forKey: "Menu Animation_reversed_Opacity")
		self.viewsByName["RejectCall-01__root"]?.layer.removeAnimation(forKey: "Menu Animation_reversed_Opacity")
		self.viewsByName["AcceptCall-01__root"]?.layer.removeAnimation(forKey: "Menu Animation_reversed_Opacity")
		self.viewsByName["fs_icon-03__root"]?.layer.removeAnimation(forKey: "Menu Animation_reversed_Opacity")
		self.viewsByName["fs_icon-02__root"]?.layer.removeAnimation(forKey: "Menu Animation_reversed_Opacity")
		self.viewsByName["0001 2 4__root"]?.layer.removeAnimation(forKey: "Menu Animation_reversed_Rotation")
		self.viewsByName["0001 2 4__root"]?.layer.removeAnimation(forKey: "Menu Animation_reversed_Opacity")
		self.viewsByName["0001 2 4__xScale"]?.layer.removeAnimation(forKey: "Menu Animation_reversed_ScaleX")
		self.viewsByName["0001 2 4__root"]?.layer.removeAnimation(forKey: "Menu Animation_reversed_TranslationX")
		self.viewsByName["0001 2 4__root"]?.layer.removeAnimation(forKey: "Menu Animation_reversed_TranslationY")
		self.viewsByName["Circle-01_mask__root"]?.layer.removeAnimation(forKey: "Menu Animation_reversed_TranslationX")
		self.viewsByName["Circle-01_mask__root"]?.layer.removeAnimation(forKey: "Menu Animation_reversed_TranslationY")
		self.viewsByName["Home_Arrows-01__root"]?.layer.removeAnimation(forKey: "Menu Animation_reversed_Opacity")
		self.viewsByName["0001 2 7__root"]?.layer.removeAnimation(forKey: "Menu Animation_reversed_Rotation")
		self.viewsByName["0001 2 7__root"]?.layer.removeAnimation(forKey: "Menu Animation_reversed_Opacity")
		self.viewsByName["0001 2 7__xScale"]?.layer.removeAnimation(forKey: "Menu Animation_reversed_ScaleX")
		self.viewsByName["0001 2 7__root"]?.layer.removeAnimation(forKey: "Menu Animation_reversed_TranslationX")
		self.viewsByName["0001 2 7__root"]?.layer.removeAnimation(forKey: "Menu Animation_reversed_TranslationY")
		self.viewsByName["numpad__root"]?.layer.removeAnimation(forKey: "Menu Animation_reversed_Opacity")
		self.viewsByName["fs_icon-05__root"]?.layer.removeAnimation(forKey: "Menu Animation_reversed_Opacity")
		self.viewsByName["0001 2 6__root"]?.layer.removeAnimation(forKey: "Menu Animation_reversed_Rotation")
		self.viewsByName["0001 2 6__root"]?.layer.removeAnimation(forKey: "Menu Animation_reversed_Opacity")
		self.viewsByName["0001 2 6__xScale"]?.layer.removeAnimation(forKey: "Menu Animation_reversed_ScaleX")
		self.viewsByName["0001 2 6__root"]?.layer.removeAnimation(forKey: "Menu Animation_reversed_TranslationX")
		self.viewsByName["0001 2 6__root"]?.layer.removeAnimation(forKey: "Menu Animation_reversed_TranslationY")
		self.viewsByName["icon_02_menu-01__root"]?.layer.removeAnimation(forKey: "Menu Animation_reversed_Opacity")
		self.viewsByName["0001 2 3__root"]?.layer.removeAnimation(forKey: "Menu Animation_reversed_Rotation")
		self.viewsByName["0001 2 3__root"]?.layer.removeAnimation(forKey: "Menu Animation_reversed_Opacity")
		self.viewsByName["0001 2 3__xScale"]?.layer.removeAnimation(forKey: "Menu Animation_reversed_ScaleX")
		self.viewsByName["0001 2 3__root"]?.layer.removeAnimation(forKey: "Menu Animation_reversed_TranslationX")
		self.viewsByName["0001 2 3__root"]?.layer.removeAnimation(forKey: "Menu Animation_reversed_TranslationY")
		self.viewsByName["info__root"]?.layer.removeAnimation(forKey: "Menu Animation_reversed_Opacity")
		self.viewsByName["fs_icon-04__root"]?.layer.removeAnimation(forKey: "Menu Animation_reversed_Opacity")
		self.viewsByName["Home_Arrows-03__root"]?.layer.removeAnimation(forKey: "Menu Animation_reversed_Opacity")
		self.viewsByName["Home_Arrows-04__root"]?.layer.removeAnimation(forKey: "Menu Animation_reversed_Opacity")
		self.viewsByName["menu_icons-03__xScale"]?.layer.removeAnimation(forKey: "Menu Animation_reversed_ScaleX")
		self.viewsByName["menu_icons-03__yScale"]?.layer.removeAnimation(forKey: "Menu Animation_reversed_ScaleY")
		self.viewsByName["menu_icons-03__root"]?.layer.removeAnimation(forKey: "Menu Animation_reversed_TranslationX")
		self.viewsByName["menu_icons-03__root"]?.layer.removeAnimation(forKey: "Menu Animation_reversed_TranslationY")
		self.viewsByName["0001 2__root"]?.layer.removeAnimation(forKey: "Menu Animation_reversed_Rotation")
		self.viewsByName["0001 2__root"]?.layer.removeAnimation(forKey: "Menu Animation_reversed_Opacity")
		self.viewsByName["0001 2__xScale"]?.layer.removeAnimation(forKey: "Menu Animation_reversed_ScaleX")
		self.viewsByName["0001 2__root"]?.layer.removeAnimation(forKey: "Menu Animation_reversed_TranslationX")
		self.viewsByName["0001 2__root"]?.layer.removeAnimation(forKey: "Menu Animation_reversed_TranslationY")
		self.viewsByName["0001 2 2__root"]?.layer.removeAnimation(forKey: "Menu Animation_reversed_Rotation")
		self.viewsByName["0001 2 2__root"]?.layer.removeAnimation(forKey: "Menu Animation_reversed_Opacity")
		self.viewsByName["0001 2 2__xScale"]?.layer.removeAnimation(forKey: "Menu Animation_reversed_ScaleX")
		self.viewsByName["0001 2 2__root"]?.layer.removeAnimation(forKey: "Menu Animation_reversed_TranslationX")
		self.viewsByName["0001 2 2__root"]?.layer.removeAnimation(forKey: "Menu Animation_reversed_TranslationY")
	}

	// MARK: CAAnimationDelegate
	func animationDidStop(_ anim: CAAnimation, finished flag: Bool) {
		if let completion = self.animationCompletions[anim] {
			self.animationCompletions.removeValue(forKey: anim)
			completion(flag)
		}
	}

	func removeAllAnimations() {
		for subview in viewsByName.values {
			subview.layer.removeAllAnimations()
		}
		self.layer.removeAnimation(forKey: "MenuAnimation")
		self.layer.removeAnimation(forKey: "MenuAnimationReversed")
	}
}