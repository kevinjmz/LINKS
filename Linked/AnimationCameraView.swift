//
// AnimationCameraView.swift
// Generated by Core Animator version 1.5.2 on 3/20/18.
//
// DO NOT MODIFY THIS FILE. IT IS AUTO-GENERATED AND WILL BE OVERWRITTEN
//

import UIKit

private class _AnimationCameraPassthroughView: UIView {
    override func point(inside point: CGPoint, with event: UIEvent?) -> Bool {
        for subview in subviews as [UIView] {
            if subview.point(inside: convert(point, to: subview), with: event) { return true }
        }
        return false
    }
}

@IBDesignable
class AnimationCameraView : UIView, CAAnimationDelegate {


	var animationCompletions = Dictionary<CAAnimation, (Bool) -> Void>()
	var viewsByName: [String : UIView]!

	// - MARK: Life Cycle

	convenience init() {
		self.init(frame: CGRect(x: 0, y: 0, width: 2048, height: 1536))
	}

	override init(frame: CGRect) {
		super.init(frame: frame)
		self.setupHierarchy()
	}

	required init?(coder aDecoder: NSCoder) {
		super.init(coder: aDecoder)
		self.setupHierarchy()
	}

	// - MARK: Scaling

	override func layoutSubviews() {
		super.layoutSubviews()

		if let scalingView = self.viewsByName["__scaling__"] {
			var xScale = self.bounds.size.width / scalingView.bounds.size.width
			var yScale = self.bounds.size.height / scalingView.bounds.size.height
			switch contentMode {
			case .scaleToFill:
				break
			case .scaleAspectFill:
				let scale = max(xScale, yScale)
				xScale = scale
				yScale = scale
			default:
				let scale = min(xScale, yScale)
				xScale = scale
				yScale = scale
			}
			scalingView.transform = CGAffineTransform(scaleX: xScale, y: yScale)
			scalingView.center = CGPoint(x:self.bounds.midX, y:self.bounds.midY)
		}
	}

	// - MARK: Setup

	func setupHierarchy() {
		var viewsByName: [String : UIView] = [:]
		let bundle = Bundle(for:type(of: self))
		let __scaling__ = UIView()
		__scaling__.bounds = CGRect(x:0, y:0, width:2048, height:1536)
		__scaling__.center = CGPoint(x:1024.1, y:768.1)
		__scaling__.clipsToBounds = true
		self.addSubview(__scaling__)
		viewsByName["__scaling__"] = __scaling__

		let cameraWhileAnimation20__root = _AnimationCameraPassthroughView()
		let cameraWhileAnimation20__xScale = _AnimationCameraPassthroughView()
		let cameraWhileAnimation20__yScale = _AnimationCameraPassthroughView()
		let cameraWhileAnimation20 = UIImageView()
		let imgCameraWhileAnimation20 = UIImage(named:"camera_whileAnimation-20.png", in: bundle, compatibleWith: nil)
		if imgCameraWhileAnimation20 == nil {
			print("** Warning: Could not create image from 'camera_whileAnimation-20.png'")
		}
		cameraWhileAnimation20.image = imgCameraWhileAnimation20
		cameraWhileAnimation20.contentMode = .center
		cameraWhileAnimation20.bounds = CGRect(x:0, y:0, width:2049.0, height:1537.0)
		cameraWhileAnimation20__root.layer.position = CGPoint(x:1024.125, y:768.148)
		cameraWhileAnimation20__xScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		cameraWhileAnimation20__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		cameraWhileAnimation20__root.transform = CGAffineTransform(rotationAngle: 0.000)
		cameraWhileAnimation20__root.addSubview(cameraWhileAnimation20__xScale)
		cameraWhileAnimation20__xScale.addSubview(cameraWhileAnimation20__yScale)
		cameraWhileAnimation20__yScale.addSubview(cameraWhileAnimation20)
		__scaling__.addSubview(cameraWhileAnimation20__root)
		viewsByName["camera_whileAnimation-20__root"] = cameraWhileAnimation20__root
		viewsByName["camera_whileAnimation-20__xScale"] = cameraWhileAnimation20__xScale
		viewsByName["camera_whileAnimation-20__yScale"] = cameraWhileAnimation20__yScale
		viewsByName["camera_whileAnimation-20"] = cameraWhileAnimation20

		let menuIcons01__root = _AnimationCameraPassthroughView()
		let menuIcons01__xScale = _AnimationCameraPassthroughView()
		let menuIcons01__yScale = _AnimationCameraPassthroughView()
		let menuIcons01 = UIImageView()
		let imgMenuIcons01 = UIImage(named:"menu_icons-01.png", in: bundle, compatibleWith: nil)
		if imgMenuIcons01 == nil {
			print("** Warning: Could not create image from 'menu_icons-01.png'")
		}
		menuIcons01.image = imgMenuIcons01
		menuIcons01.contentMode = .center
		menuIcons01.bounds = CGRect(x:0, y:0, width:642.0, height:642.0)
		menuIcons01__root.layer.position = CGPoint(x:145.057, y:971.408)
		menuIcons01__xScale.transform = CGAffineTransform(scaleX: 0.24, y: 1.00)
		menuIcons01__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 0.24)
		menuIcons01__root.transform = CGAffineTransform(rotationAngle: 0.000)
		menuIcons01__root.addSubview(menuIcons01__xScale)
		menuIcons01__xScale.addSubview(menuIcons01__yScale)
		menuIcons01__yScale.addSubview(menuIcons01)
		__scaling__.addSubview(menuIcons01__root)
		viewsByName["menu_icons-01__root"] = menuIcons01__root
		viewsByName["menu_icons-01__xScale"] = menuIcons01__xScale
		viewsByName["menu_icons-01__yScale"] = menuIcons01__yScale
		viewsByName["menu_icons-01"] = menuIcons01

		let menuIcons03__root = _AnimationCameraPassthroughView()
		let menuIcons03__xScale = _AnimationCameraPassthroughView()
		let menuIcons03__yScale = _AnimationCameraPassthroughView()
		let menuIcons03 = UIImageView()
		let imgMenuIcons03 = UIImage(named:"menu_icons-03.png", in: bundle, compatibleWith: nil)
		if imgMenuIcons03 == nil {
			print("** Warning: Could not create image from 'menu_icons-03.png'")
		}
		menuIcons03.image = imgMenuIcons03
		menuIcons03.contentMode = .center
		menuIcons03.bounds = CGRect(x:0, y:0, width:642.0, height:642.0)
		menuIcons03__root.layer.position = CGPoint(x:481.791, y:1198.452)
		menuIcons03__xScale.transform = CGAffineTransform(scaleX: 0.24, y: 1.00)
		menuIcons03__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 0.24)
		menuIcons03__root.transform = CGAffineTransform(rotationAngle: 0.002)
		menuIcons03__root.addSubview(menuIcons03__xScale)
		menuIcons03__xScale.addSubview(menuIcons03__yScale)
		menuIcons03__yScale.addSubview(menuIcons03)
		__scaling__.addSubview(menuIcons03__root)
		viewsByName["menu_icons-03__root"] = menuIcons03__root
		viewsByName["menu_icons-03__xScale"] = menuIcons03__xScale
		viewsByName["menu_icons-03__yScale"] = menuIcons03__yScale
		viewsByName["menu_icons-03"] = menuIcons03

		let menuIcons04__root = _AnimationCameraPassthroughView()
		let menuIcons04__xScale = _AnimationCameraPassthroughView()
		let menuIcons04__yScale = _AnimationCameraPassthroughView()
		let menuIcons04 = UIImageView()
		let imgMenuIcons04 = UIImage(named:"menu_icons-04.png", in: bundle, compatibleWith: nil)
		if imgMenuIcons04 == nil {
			print("** Warning: Could not create image from 'menu_icons-04.png'")
		}
		menuIcons04.image = imgMenuIcons04
		menuIcons04.contentMode = .center
		menuIcons04.bounds = CGRect(x:0, y:0, width:642.0, height:642.0)
		menuIcons04__root.layer.position = CGPoint(x:557.375, y:1392.284)
		menuIcons04__xScale.transform = CGAffineTransform(scaleX: 0.24, y: 1.00)
		menuIcons04__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 0.24)
		menuIcons04__root.transform = CGAffineTransform(rotationAngle: 0.000)
		menuIcons04__root.addSubview(menuIcons04__xScale)
		menuIcons04__xScale.addSubview(menuIcons04__yScale)
		menuIcons04__yScale.addSubview(menuIcons04)
		__scaling__.addSubview(menuIcons04__root)
		viewsByName["menu_icons-04__root"] = menuIcons04__root
		viewsByName["menu_icons-04__xScale"] = menuIcons04__xScale
		viewsByName["menu_icons-04__yScale"] = menuIcons04__yScale
		viewsByName["menu_icons-04"] = menuIcons04

		let linesCamera19__root = _AnimationCameraPassthroughView()
		let linesCamera19__xScale = _AnimationCameraPassthroughView()
		let linesCamera19__yScale = _AnimationCameraPassthroughView()
		let linesCamera19 = UIImageView()
		let imgLinesCamera19 = UIImage(named:"Lines_camera-19.png", in: bundle, compatibleWith: nil)
		if imgLinesCamera19 == nil {
			print("** Warning: Could not create image from 'Lines_camera-19.png'")
		}
		linesCamera19.image = imgLinesCamera19
		linesCamera19.contentMode = .center
		linesCamera19.bounds = CGRect(x:0, y:0, width:1507.0, height:1032.0)
		linesCamera19__root.layer.position = CGPoint(x:930.898, y:529.000)
		linesCamera19__xScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		linesCamera19__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		linesCamera19__root.transform = CGAffineTransform(rotationAngle: 0.000)
		linesCamera19__root.addSubview(linesCamera19__xScale)
		linesCamera19__xScale.addSubview(linesCamera19__yScale)
		linesCamera19__yScale.addSubview(linesCamera19)
		__scaling__.addSubview(linesCamera19__root)
		viewsByName["Lines_camera-19__root"] = linesCamera19__root
		viewsByName["Lines_camera-19__xScale"] = linesCamera19__xScale
		viewsByName["Lines_camera-19__yScale"] = linesCamera19__yScale
		viewsByName["Lines_camera-19"] = linesCamera19

		let linesCamera19Mask__root = _AnimationCameraPassthroughView()
		let linesCamera19Mask__xScale = _AnimationCameraPassthroughView()
		let linesCamera19Mask__yScale = _AnimationCameraPassthroughView()
		let linesCamera19Mask = UIImageView()
		let imgSquare = UIImage(named:"square.png", in: bundle, compatibleWith: nil)
		if imgSquare == nil {
			print("** Warning: Could not create image from 'square.png'")
		}
		linesCamera19Mask.image = imgSquare
		linesCamera19Mask.contentMode = .center
		linesCamera19Mask.bounds = CGRect(x:0, y:0, width:185.0, height:184.5)
		linesCamera19Mask__root.layer.position = CGPoint(x:214.273, y:971.708)
		linesCamera19Mask__xScale.transform = CGAffineTransform(scaleX: 0.20, y: 1.00)
		linesCamera19Mask__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 0.08)
		linesCamera19Mask__root.transform = CGAffineTransform(rotationAngle: 5.420)
		linesCamera19Mask__root.addSubview(linesCamera19Mask__xScale)
		linesCamera19Mask__xScale.addSubview(linesCamera19Mask__yScale)
		linesCamera19Mask__yScale.addSubview(linesCamera19Mask)
		linesCamera19.mask = linesCamera19Mask__root
		viewsByName["Lines_camera-19_mask__root"] = linesCamera19Mask__root
		viewsByName["Lines_camera-19_mask__xScale"] = linesCamera19Mask__xScale
		viewsByName["Lines_camera-19_mask__yScale"] = linesCamera19Mask__yScale
		viewsByName["Lines_camera-19_mask"] = linesCamera19Mask

		let linesCamera191__root = _AnimationCameraPassthroughView()
		let linesCamera191__xScale = _AnimationCameraPassthroughView()
		let linesCamera191__yScale = _AnimationCameraPassthroughView()
		let linesCamera191 = UIImageView()
		let imgLinesCamera191 = UIImage(named:"Lines_camera-19_1.png", in: bundle, compatibleWith: nil)
		if imgLinesCamera191 == nil {
			print("** Warning: Could not create image from 'Lines_camera-19_1.png'")
		}
		linesCamera191.image = imgLinesCamera191
		linesCamera191.contentMode = .center
		linesCamera191.bounds = CGRect(x:0, y:0, width:1507.0, height:1032.0)
		linesCamera191__root.layer.position = CGPoint(x:930.453, y:531.000)
		linesCamera191__xScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		linesCamera191__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		linesCamera191__root.transform = CGAffineTransform(rotationAngle: 0.000)
		linesCamera191__root.addSubview(linesCamera191__xScale)
		linesCamera191__xScale.addSubview(linesCamera191__yScale)
		linesCamera191__yScale.addSubview(linesCamera191)
		__scaling__.addSubview(linesCamera191__root)
		viewsByName["Lines_camera-19_1__root"] = linesCamera191__root
		viewsByName["Lines_camera-19_1__xScale"] = linesCamera191__xScale
		viewsByName["Lines_camera-19_1__yScale"] = linesCamera191__yScale
		viewsByName["Lines_camera-19_1"] = linesCamera191

		let linesCamera191Mask__root = _AnimationCameraPassthroughView()
		let linesCamera191Mask__xScale = _AnimationCameraPassthroughView()
		let linesCamera191Mask__yScale = _AnimationCameraPassthroughView()
		let linesCamera191Mask = UIImageView()
		linesCamera191Mask.image = imgSquare
		linesCamera191Mask.contentMode = .center
		linesCamera191Mask.layer.anchorPoint = CGPoint(x:0.629, y:-1.372)
		linesCamera191Mask.bounds = CGRect(x:0, y:0, width:185.0, height:184.5)
		linesCamera191Mask__root.layer.position = CGPoint(x:643.405, y:753.702)
		linesCamera191Mask__root.alpha = 0.00
		linesCamera191Mask__xScale.transform = CGAffineTransform(scaleX: 0.09, y: 1.00)
		linesCamera191Mask__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 0.00)
		linesCamera191Mask__root.transform = CGAffineTransform(rotationAngle: 5.570)
		linesCamera191Mask__root.addSubview(linesCamera191Mask__xScale)
		linesCamera191Mask__xScale.addSubview(linesCamera191Mask__yScale)
		linesCamera191Mask__yScale.addSubview(linesCamera191Mask)
		linesCamera191.mask = linesCamera191Mask__root
		viewsByName["Lines_camera-19_1_mask__root"] = linesCamera191Mask__root
		viewsByName["Lines_camera-19_1_mask__xScale"] = linesCamera191Mask__xScale
		viewsByName["Lines_camera-19_1_mask__yScale"] = linesCamera191Mask__yScale
		viewsByName["Lines_camera-19_1_mask"] = linesCamera191Mask

		let linesCamera192__root = _AnimationCameraPassthroughView()
		let linesCamera192__xScale = _AnimationCameraPassthroughView()
		let linesCamera192__yScale = _AnimationCameraPassthroughView()
		let linesCamera192 = UIImageView()
		let imgLinesCamera192 = UIImage(named:"Lines_camera-19_2.png", in: bundle, compatibleWith: nil)
		if imgLinesCamera192 == nil {
			print("** Warning: Could not create image from 'Lines_camera-19_2.png'")
		}
		linesCamera192.image = imgLinesCamera192
		linesCamera192.contentMode = .center
		linesCamera192.bounds = CGRect(x:0, y:0, width:1507.0, height:1032.0)
		linesCamera192__root.layer.position = CGPoint(x:929.840, y:530.273)
		linesCamera192__xScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		linesCamera192__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		linesCamera192__root.transform = CGAffineTransform(rotationAngle: 0.000)
		linesCamera192__root.addSubview(linesCamera192__xScale)
		linesCamera192__xScale.addSubview(linesCamera192__yScale)
		linesCamera192__yScale.addSubview(linesCamera192)
		__scaling__.addSubview(linesCamera192__root)
		viewsByName["Lines_camera-19_2__root"] = linesCamera192__root
		viewsByName["Lines_camera-19_2__xScale"] = linesCamera192__xScale
		viewsByName["Lines_camera-19_2__yScale"] = linesCamera192__yScale
		viewsByName["Lines_camera-19_2"] = linesCamera192

		let linesCamera192Mask__root = _AnimationCameraPassthroughView()
		let linesCamera192Mask__xScale = _AnimationCameraPassthroughView()
		let linesCamera192Mask__yScale = _AnimationCameraPassthroughView()
		let linesCamera192Mask = UIImageView()
		linesCamera192Mask.image = imgSquare
		linesCamera192Mask.contentMode = .center
		linesCamera192Mask.bounds = CGRect(x:0, y:0, width:185.0, height:184.5)
		linesCamera192Mask__root.layer.position = CGPoint(x:647.108, y:752.695)
		linesCamera192Mask__root.alpha = 0.00
		linesCamera192Mask__xScale.transform = CGAffineTransform(scaleX: 0.06, y: 1.00)
		linesCamera192Mask__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 0.00)
		linesCamera192Mask__root.transform = CGAffineTransform(rotationAngle: 5.658)
		linesCamera192Mask__root.addSubview(linesCamera192Mask__xScale)
		linesCamera192Mask__xScale.addSubview(linesCamera192Mask__yScale)
		linesCamera192Mask__yScale.addSubview(linesCamera192Mask)
		linesCamera192.mask = linesCamera192Mask__root
		viewsByName["Lines_camera-19_2_mask__root"] = linesCamera192Mask__root
		viewsByName["Lines_camera-19_2_mask__xScale"] = linesCamera192Mask__xScale
		viewsByName["Lines_camera-19_2_mask__yScale"] = linesCamera192Mask__yScale
		viewsByName["Lines_camera-19_2_mask"] = linesCamera192Mask

		let linesCamera193__root = _AnimationCameraPassthroughView()
		let linesCamera193__xScale = _AnimationCameraPassthroughView()
		let linesCamera193__yScale = _AnimationCameraPassthroughView()
		let linesCamera193 = UIImageView()
		let imgLinesCamera193 = UIImage(named:"Lines_camera-19_3.png", in: bundle, compatibleWith: nil)
		if imgLinesCamera193 == nil {
			print("** Warning: Could not create image from 'Lines_camera-19_3.png'")
		}
		linesCamera193.image = imgLinesCamera193
		linesCamera193.contentMode = .center
		linesCamera193.bounds = CGRect(x:0, y:0, width:1507.0, height:1032.0)
		linesCamera193__root.layer.position = CGPoint(x:928.188, y:529.000)
		linesCamera193__xScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		linesCamera193__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		linesCamera193__root.transform = CGAffineTransform(rotationAngle: 0.000)
		linesCamera193__root.addSubview(linesCamera193__xScale)
		linesCamera193__xScale.addSubview(linesCamera193__yScale)
		linesCamera193__yScale.addSubview(linesCamera193)
		__scaling__.addSubview(linesCamera193__root)
		viewsByName["Lines_camera-19_3__root"] = linesCamera193__root
		viewsByName["Lines_camera-19_3__xScale"] = linesCamera193__xScale
		viewsByName["Lines_camera-19_3__yScale"] = linesCamera193__yScale
		viewsByName["Lines_camera-19_3"] = linesCamera193

		let linesCamera193Mask__root = _AnimationCameraPassthroughView()
		let linesCamera193Mask__xScale = _AnimationCameraPassthroughView()
		let linesCamera193Mask__yScale = _AnimationCameraPassthroughView()
		let linesCamera193Mask = UIImageView()
		linesCamera193Mask.image = imgSquare
		linesCamera193Mask.contentMode = .center
		linesCamera193Mask.bounds = CGRect(x:0, y:0, width:185.0, height:184.5)
		linesCamera193Mask__root.layer.position = CGPoint(x:839.967, y:565.058)
		linesCamera193Mask__root.alpha = 0.00
		linesCamera193Mask__xScale.transform = CGAffineTransform(scaleX: -0.00, y: 1.00)
		linesCamera193Mask__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 0.99)
		linesCamera193Mask__root.transform = CGAffineTransform(rotationAngle: 0.831)
		linesCamera193Mask__root.addSubview(linesCamera193Mask__xScale)
		linesCamera193Mask__xScale.addSubview(linesCamera193Mask__yScale)
		linesCamera193Mask__yScale.addSubview(linesCamera193Mask)
		linesCamera193.mask = linesCamera193Mask__root
		viewsByName["Lines_camera-19_3_mask__root"] = linesCamera193Mask__root
		viewsByName["Lines_camera-19_3_mask__xScale"] = linesCamera193Mask__xScale
		viewsByName["Lines_camera-19_3_mask__yScale"] = linesCamera193Mask__yScale
		viewsByName["Lines_camera-19_3_mask"] = linesCamera193Mask

		let circle01__root = _AnimationCameraPassthroughView()
		let circle01__xScale = _AnimationCameraPassthroughView()
		let circle01__yScale = _AnimationCameraPassthroughView()
		let circle01 = UIImageView()
		let imgCircle01 = UIImage(named:"Circle-01.png", in: bundle, compatibleWith: nil)
		if imgCircle01 == nil {
			print("** Warning: Could not create image from 'Circle-01.png'")
		}
		circle01.image = imgCircle01
		circle01.contentMode = .center
		circle01.bounds = CGRect(x:0, y:0, width:413.0, height:413.0)
		circle01__root.layer.position = CGPoint(x:334.607, y:1054.334)
		circle01__xScale.transform = CGAffineTransform(scaleX: 0.45, y: 1.00)
		circle01__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 0.45)
		circle01__root.transform = CGAffineTransform(rotationAngle: 0.000)
		circle01__root.addSubview(circle01__xScale)
		circle01__xScale.addSubview(circle01__yScale)
		circle01__yScale.addSubview(circle01)
		__scaling__.addSubview(circle01__root)
		viewsByName["Circle-01__root"] = circle01__root
		viewsByName["Circle-01__xScale"] = circle01__xScale
		viewsByName["Circle-01__yScale"] = circle01__yScale
		viewsByName["Circle-01"] = circle01

		let circle01Mask__root = _AnimationCameraPassthroughView()
		let circle01Mask__xScale = _AnimationCameraPassthroughView()
		let circle01Mask__yScale = _AnimationCameraPassthroughView()
		let circle01Mask = UIImageView()
		circle01Mask.image = imgSquare
		circle01Mask.contentMode = .center
		circle01Mask.bounds = CGRect(x:0, y:0, width:185.0, height:184.5)
		circle01Mask__root.layer.position = CGPoint(x:75.123, y:468.688)
		circle01Mask__xScale.transform = CGAffineTransform(scaleX: 2.77, y: 1.00)
		circle01Mask__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 0.87)
		circle01Mask__root.transform = CGAffineTransform(rotationAngle: 0.556)
		circle01Mask__root.addSubview(circle01Mask__xScale)
		circle01Mask__xScale.addSubview(circle01Mask__yScale)
		circle01Mask__yScale.addSubview(circle01Mask)
		circle01.mask = circle01Mask__root
		viewsByName["Circle-01_mask__root"] = circle01Mask__root
		viewsByName["Circle-01_mask__xScale"] = circle01Mask__xScale
		viewsByName["Circle-01_mask__yScale"] = circle01Mask__yScale
		viewsByName["Circle-01_mask"] = circle01Mask

		let frameCamera12__root = _AnimationCameraPassthroughView()
		let frameCamera12__xScale = _AnimationCameraPassthroughView()
		let frameCamera12__yScale = _AnimationCameraPassthroughView()
		let frameCamera12 = UIImageView()
		let imgFrameCamera12 = UIImage(named:"frame_camera-12.png", in: bundle, compatibleWith: nil)
		if imgFrameCamera12 == nil {
			print("** Warning: Could not create image from 'frame_camera-12.png'")
		}
		frameCamera12.image = imgFrameCamera12
		frameCamera12.contentMode = .center
		frameCamera12.bounds = CGRect(x:0, y:0, width:256.0, height:289.0)
		frameCamera12__root.layer.position = CGPoint(x:275.609, y:1157.461)
		frameCamera12__xScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		frameCamera12__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		frameCamera12__root.transform = CGAffineTransform(rotationAngle: 0.000)
		frameCamera12__root.addSubview(frameCamera12__xScale)
		frameCamera12__xScale.addSubview(frameCamera12__yScale)
		frameCamera12__yScale.addSubview(frameCamera12)
		__scaling__.addSubview(frameCamera12__root)
		viewsByName["frame_camera-12__root"] = frameCamera12__root
		viewsByName["frame_camera-12__xScale"] = frameCamera12__xScale
		viewsByName["frame_camera-12__yScale"] = frameCamera12__yScale
		viewsByName["frame_camera-12"] = frameCamera12

		let frameCamera12Mask__root = _AnimationCameraPassthroughView()
		let frameCamera12Mask__xScale = _AnimationCameraPassthroughView()
		let frameCamera12Mask__yScale = _AnimationCameraPassthroughView()
		let frameCamera12Mask = UIImageView()
		frameCamera12Mask.image = imgSquare
		frameCamera12Mask.contentMode = .center
		frameCamera12Mask.bounds = CGRect(x:0, y:0, width:185.0, height:184.5)
		frameCamera12Mask__root.layer.position = CGPoint(x:20.254, y:277.626)
		frameCamera12Mask__xScale.transform = CGAffineTransform(scaleX: 1.35, y: 1.00)
		frameCamera12Mask__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 0.20)
		frameCamera12Mask__root.transform = CGAffineTransform(rotationAngle: 0.590)
		frameCamera12Mask__root.addSubview(frameCamera12Mask__xScale)
		frameCamera12Mask__xScale.addSubview(frameCamera12Mask__yScale)
		frameCamera12Mask__yScale.addSubview(frameCamera12Mask)
		frameCamera12.mask = frameCamera12Mask__root
		viewsByName["frame_camera-12_mask__root"] = frameCamera12Mask__root
		viewsByName["frame_camera-12_mask__xScale"] = frameCamera12Mask__xScale
		viewsByName["frame_camera-12_mask__yScale"] = frameCamera12Mask__yScale
		viewsByName["frame_camera-12_mask"] = frameCamera12Mask

		let cameraMinus__root = _AnimationCameraPassthroughView()
		let cameraMinus__xScale = _AnimationCameraPassthroughView()
		let cameraMinus__yScale = _AnimationCameraPassthroughView()
		let cameraMinus = UIImageView()
		let imgCameraMinus = UIImage(named:"Camera_minus.png", in: bundle, compatibleWith: nil)
		if imgCameraMinus == nil {
			print("** Warning: Could not create image from 'Camera_minus.png'")
		}
		cameraMinus.image = imgCameraMinus
		cameraMinus.contentMode = .center
		cameraMinus.bounds = CGRect(x:0, y:0, width:470.0, height:638.0)
		cameraMinus__root.layer.position = CGPoint(x:1748.171, y:751.185)
		cameraMinus__root.alpha = 0.00
		cameraMinus__xScale.transform = CGAffineTransform(scaleX: 0.48, y: 1.00)
		cameraMinus__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 0.48)
		cameraMinus__root.transform = CGAffineTransform(rotationAngle: 0.000)
		cameraMinus__root.addSubview(cameraMinus__xScale)
		cameraMinus__xScale.addSubview(cameraMinus__yScale)
		cameraMinus__yScale.addSubview(cameraMinus)
		__scaling__.addSubview(cameraMinus__root)
		viewsByName["Camera_minus__root"] = cameraMinus__root
		viewsByName["Camera_minus__xScale"] = cameraMinus__xScale
		viewsByName["Camera_minus__yScale"] = cameraMinus__yScale
		viewsByName["Camera_minus"] = cameraMinus

		let cameraPlus__root = _AnimationCameraPassthroughView()
		let cameraPlus__xScale = _AnimationCameraPassthroughView()
		let cameraPlus__yScale = _AnimationCameraPassthroughView()
		let cameraPlus = UIImageView()
		let imgCameraPlus = UIImage(named:"Camera_plus.png", in: bundle, compatibleWith: nil)
		if imgCameraPlus == nil {
			print("** Warning: Could not create image from 'Camera_plus.png'")
		}
		cameraPlus.image = imgCameraPlus
		cameraPlus.contentMode = .center
		cameraPlus.bounds = CGRect(x:0, y:0, width:470.0, height:638.0)
		cameraPlus__root.layer.position = CGPoint(x:1747.181, y:277.747)
		cameraPlus__root.alpha = 0.00
		cameraPlus__xScale.transform = CGAffineTransform(scaleX: 0.47, y: 1.00)
		cameraPlus__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 0.47)
		cameraPlus__root.transform = CGAffineTransform(rotationAngle: 0.000)
		cameraPlus__root.addSubview(cameraPlus__xScale)
		cameraPlus__xScale.addSubview(cameraPlus__yScale)
		cameraPlus__yScale.addSubview(cameraPlus)
		__scaling__.addSubview(cameraPlus__root)
		viewsByName["Camera_plus__root"] = cameraPlus__root
		viewsByName["Camera_plus__xScale"] = cameraPlus__xScale
		viewsByName["Camera_plus__yScale"] = cameraPlus__yScale
		viewsByName["Camera_plus"] = cameraPlus

		let homeArrows01__root = _AnimationCameraPassthroughView()
		let homeArrows01__xScale = _AnimationCameraPassthroughView()
		let homeArrows01__yScale = _AnimationCameraPassthroughView()
		let homeArrows01 = UIImageView()
		let imgHomeArrows01 = UIImage(named:"Home_Arrows-01.png", in: bundle, compatibleWith: nil)
		if imgHomeArrows01 == nil {
			print("** Warning: Could not create image from 'Home_Arrows-01.png'")
		}
		homeArrows01.image = imgHomeArrows01
		homeArrows01.contentMode = .center
		homeArrows01.bounds = CGRect(x:0, y:0, width:946.0, height:946.0)
		homeArrows01__root.layer.position = CGPoint(x:604.255, y:596.109)
		homeArrows01__root.alpha = 0.00
		homeArrows01__xScale.transform = CGAffineTransform(scaleX: 0.24, y: 1.00)
		homeArrows01__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 0.24)
		homeArrows01__root.transform = CGAffineTransform(rotationAngle: 0.000)
		homeArrows01__root.addSubview(homeArrows01__xScale)
		homeArrows01__xScale.addSubview(homeArrows01__yScale)
		homeArrows01__yScale.addSubview(homeArrows01)
		__scaling__.addSubview(homeArrows01__root)
		viewsByName["Home_Arrows-01__root"] = homeArrows01__root
		viewsByName["Home_Arrows-01__xScale"] = homeArrows01__xScale
		viewsByName["Home_Arrows-01__yScale"] = homeArrows01__yScale
		viewsByName["Home_Arrows-01"] = homeArrows01

		let homeArrows03__root = _AnimationCameraPassthroughView()
		let homeArrows03__xScale = _AnimationCameraPassthroughView()
		let homeArrows03__yScale = _AnimationCameraPassthroughView()
		let homeArrows03 = UIImageView()
		let imgHomeArrows03 = UIImage(named:"Home_Arrows-03.png", in: bundle, compatibleWith: nil)
		if imgHomeArrows03 == nil {
			print("** Warning: Could not create image from 'Home_Arrows-03.png'")
		}
		homeArrows03.image = imgHomeArrows03
		homeArrows03.contentMode = .center
		homeArrows03.bounds = CGRect(x:0, y:0, width:946.0, height:946.0)
		homeArrows03__root.layer.position = CGPoint(x:1386.900, y:602.495)
		homeArrows03__root.alpha = 0.00
		homeArrows03__xScale.transform = CGAffineTransform(scaleX: 0.24, y: 1.00)
		homeArrows03__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 0.24)
		homeArrows03__root.transform = CGAffineTransform(rotationAngle: 0.000)
		homeArrows03__root.addSubview(homeArrows03__xScale)
		homeArrows03__xScale.addSubview(homeArrows03__yScale)
		homeArrows03__yScale.addSubview(homeArrows03)
		__scaling__.addSubview(homeArrows03__root)
		viewsByName["Home_Arrows-03__root"] = homeArrows03__root
		viewsByName["Home_Arrows-03__xScale"] = homeArrows03__xScale
		viewsByName["Home_Arrows-03__yScale"] = homeArrows03__yScale
		viewsByName["Home_Arrows-03"] = homeArrows03

		let homeArrows04__root = _AnimationCameraPassthroughView()
		let homeArrows04__xScale = _AnimationCameraPassthroughView()
		let homeArrows04__yScale = _AnimationCameraPassthroughView()
		let homeArrows04 = UIImageView()
		let imgHomeArrows04 = UIImage(named:"Home_Arrows-04.png", in: bundle, compatibleWith: nil)
		if imgHomeArrows04 == nil {
			print("** Warning: Could not create image from 'Home_Arrows-04.png'")
		}
		homeArrows04.image = imgHomeArrows04
		homeArrows04.contentMode = .center
		homeArrows04.bounds = CGRect(x:0, y:0, width:946.0, height:946.0)
		homeArrows04__root.layer.position = CGPoint(x:1000.480, y:185.166)
		homeArrows04__root.alpha = 0.00
		homeArrows04__xScale.transform = CGAffineTransform(scaleX: 0.24, y: 1.00)
		homeArrows04__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 0.24)
		homeArrows04__root.transform = CGAffineTransform(rotationAngle: 0.000)
		homeArrows04__root.addSubview(homeArrows04__xScale)
		homeArrows04__xScale.addSubview(homeArrows04__yScale)
		homeArrows04__yScale.addSubview(homeArrows04)
		__scaling__.addSubview(homeArrows04__root)
		viewsByName["Home_Arrows-04__root"] = homeArrows04__root
		viewsByName["Home_Arrows-04__xScale"] = homeArrows04__xScale
		viewsByName["Home_Arrows-04__yScale"] = homeArrows04__yScale
		viewsByName["Home_Arrows-04"] = homeArrows04

		let homeArrows05__root = _AnimationCameraPassthroughView()
		let homeArrows05__xScale = _AnimationCameraPassthroughView()
		let homeArrows05__yScale = _AnimationCameraPassthroughView()
		let homeArrows05 = UIImageView()
		let imgHomeArrows05 = UIImage(named:"Home_Arrows-05.png", in: bundle, compatibleWith: nil)
		if imgHomeArrows05 == nil {
			print("** Warning: Could not create image from 'Home_Arrows-05.png'")
		}
		homeArrows05.image = imgHomeArrows05
		homeArrows05.contentMode = .center
		homeArrows05.bounds = CGRect(x:0, y:0, width:946.0, height:946.0)
		homeArrows05__root.layer.position = CGPoint(x:1001.109, y:1027.423)
		homeArrows05__root.alpha = 0.00
		homeArrows05__xScale.transform = CGAffineTransform(scaleX: 0.24, y: 1.00)
		homeArrows05__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 0.24)
		homeArrows05__root.transform = CGAffineTransform(rotationAngle: 0.000)
		homeArrows05__root.addSubview(homeArrows05__xScale)
		homeArrows05__xScale.addSubview(homeArrows05__yScale)
		homeArrows05__yScale.addSubview(homeArrows05)
		__scaling__.addSubview(homeArrows05__root)
		viewsByName["Home_Arrows-05__root"] = homeArrows05__root
		viewsByName["Home_Arrows-05__xScale"] = homeArrows05__xScale
		viewsByName["Home_Arrows-05__yScale"] = homeArrows05__yScale
		viewsByName["Home_Arrows-05"] = homeArrows05

		let vCmenu01__root = _AnimationCameraPassthroughView()
		let vCmenu01__xScale = _AnimationCameraPassthroughView()
		let vCmenu01__yScale = _AnimationCameraPassthroughView()
		let vCmenu01 = UIImageView()
		let imgVCmenu01 = UIImage(named:"VCmenu-01.png", in: bundle, compatibleWith: nil)
		if imgVCmenu01 == nil {
			print("** Warning: Could not create image from 'VCmenu-01.png'")
		}
		vCmenu01.image = imgVCmenu01
		vCmenu01.contentMode = .center
		vCmenu01.bounds = CGRect(x:0, y:0, width:132.0, height:132.0)
		vCmenu01__root.layer.position = CGPoint(x:106.456, y:125.920)
		vCmenu01__root.alpha = 0.00
		vCmenu01__xScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		vCmenu01__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		vCmenu01__root.transform = CGAffineTransform(rotationAngle: 0.000)
		vCmenu01__root.addSubview(vCmenu01__xScale)
		vCmenu01__xScale.addSubview(vCmenu01__yScale)
		vCmenu01__yScale.addSubview(vCmenu01)
		__scaling__.addSubview(vCmenu01__root)
		viewsByName["VCmenu-01__root"] = vCmenu01__root
		viewsByName["VCmenu-01__xScale"] = vCmenu01__xScale
		viewsByName["VCmenu-01__yScale"] = vCmenu01__yScale
		viewsByName["VCmenu-01"] = vCmenu01

		let zoom01__root = _AnimationCameraPassthroughView()
		let zoom01__xScale = _AnimationCameraPassthroughView()
		let zoom01__yScale = _AnimationCameraPassthroughView()
		let zoom01 = UIImageView()
		let imgZoom01 = UIImage(named:"zoom-01.png", in: bundle, compatibleWith: nil)
		if imgZoom01 == nil {
			print("** Warning: Could not create image from 'zoom-01.png'")
		}
		zoom01.image = imgZoom01
		zoom01.contentMode = .center
		zoom01.bounds = CGRect(x:0, y:0, width:224.0, height:77.0)
		zoom01__root.layer.position = CGPoint(x:1747.222, y:516.295)
		zoom01__root.alpha = 0.00
		zoom01__xScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		zoom01__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		zoom01__root.transform = CGAffineTransform(rotationAngle: 0.000)
		zoom01__root.addSubview(zoom01__xScale)
		zoom01__xScale.addSubview(zoom01__yScale)
		zoom01__yScale.addSubview(zoom01)
		__scaling__.addSubview(zoom01__root)
		viewsByName["zoom-01__root"] = zoom01__root
		viewsByName["zoom-01__xScale"] = zoom01__xScale
		viewsByName["zoom-01__yScale"] = zoom01__yScale
		viewsByName["zoom-01"] = zoom01

		self.viewsByName = viewsByName
	}

	// - MARK: Camera_Animation

	func addCameraAnimation() {
		addCameraAnimation(beginTime: 0, fillMode: kCAFillModeBoth, removedOnCompletion: false, completion: nil)
	}

	func addCameraAnimation(completion: ((Bool) -> Void)?) {
		addCameraAnimation(beginTime: 0, fillMode: kCAFillModeBoth, removedOnCompletion: false, completion: completion)
	}

	func addCameraAnimation(removedOnCompletion: Bool) {
		addCameraAnimation(beginTime: 0, fillMode: removedOnCompletion ? kCAFillModeRemoved : kCAFillModeBoth, removedOnCompletion: removedOnCompletion, completion: nil)
	}

	func addCameraAnimation(removedOnCompletion: Bool, completion: ((Bool) -> Void)?) {
		addCameraAnimation(beginTime: 0, fillMode: removedOnCompletion ? kCAFillModeRemoved : kCAFillModeBoth, removedOnCompletion: removedOnCompletion, completion: completion)
	}

	func addCameraAnimation(beginTime: CFTimeInterval, fillMode: String, removedOnCompletion: Bool, completion: ((Bool) -> Void)?) {
		let linearTiming = CAMediaTimingFunction(name: kCAMediaTimingFunctionLinear)
		let instantTiming = CAMediaTimingFunction(name: kCAMediaTimingFunctionDefault)
		if let complete = completion {
			let representativeAnimation = CABasicAnimation(keyPath: "not.a.real.key")
			representativeAnimation.duration = 1.425
			representativeAnimation.delegate = self
			self.layer.add(representativeAnimation, forKey: "CameraAnimation")
			self.animationCompletions[layer.animation(forKey: "CameraAnimation")!] = complete
		}

		let menuIcons03ScaleXAnimation = CAKeyframeAnimation(keyPath: "transform.scale.x")
		menuIcons03ScaleXAnimation.duration = 1.425
		menuIcons03ScaleXAnimation.values = [0.240, 0.240, 0.152, 0.152] as [Float]
		menuIcons03ScaleXAnimation.keyTimes = [0.000, 0.246, 0.491, 1.000] as [NSNumber]
		menuIcons03ScaleXAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		menuIcons03ScaleXAnimation.beginTime = beginTime
		menuIcons03ScaleXAnimation.fillMode = fillMode
		menuIcons03ScaleXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["menu_icons-03__xScale"]?.layer.add(menuIcons03ScaleXAnimation, forKey:"Camera_Animation_ScaleX")

		let menuIcons03ScaleYAnimation = CAKeyframeAnimation(keyPath: "transform.scale.y")
		menuIcons03ScaleYAnimation.duration = 1.425
		menuIcons03ScaleYAnimation.values = [0.240, 0.240, 0.152, 0.152] as [Float]
		menuIcons03ScaleYAnimation.keyTimes = [0.000, 0.246, 0.491, 1.000] as [NSNumber]
		menuIcons03ScaleYAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		menuIcons03ScaleYAnimation.beginTime = beginTime
		menuIcons03ScaleYAnimation.fillMode = fillMode
		menuIcons03ScaleYAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["menu_icons-03__yScale"]?.layer.add(menuIcons03ScaleYAnimation, forKey:"Camera_Animation_ScaleY")

		let menuIcons03TranslationXAnimation = CAKeyframeAnimation(keyPath: "transform.translation.x")
		menuIcons03TranslationXAnimation.duration = 1.425
		menuIcons03TranslationXAnimation.values = [0.000, 0.000, -175.777, -175.777] as [Float]
		menuIcons03TranslationXAnimation.keyTimes = [0.000, 0.246, 0.491, 1.000] as [NSNumber]
		menuIcons03TranslationXAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		menuIcons03TranslationXAnimation.beginTime = beginTime
		menuIcons03TranslationXAnimation.fillMode = fillMode
		menuIcons03TranslationXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["menu_icons-03__root"]?.layer.add(menuIcons03TranslationXAnimation, forKey:"Camera_Animation_TranslationX")

		let menuIcons03TranslationYAnimation = CAKeyframeAnimation(keyPath: "transform.translation.y")
		menuIcons03TranslationYAnimation.duration = 1.425
		menuIcons03TranslationYAnimation.values = [0.000, 0.000, 117.643, 117.643] as [Float]
		menuIcons03TranslationYAnimation.keyTimes = [0.000, 0.246, 0.491, 1.000] as [NSNumber]
		menuIcons03TranslationYAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		menuIcons03TranslationYAnimation.beginTime = beginTime
		menuIcons03TranslationYAnimation.fillMode = fillMode
		menuIcons03TranslationYAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["menu_icons-03__root"]?.layer.add(menuIcons03TranslationYAnimation, forKey:"Camera_Animation_TranslationY")

		let zoom01OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		zoom01OpacityAnimation.duration = 1.425
		zoom01OpacityAnimation.values = [0.000, 0.000, 1.000] as [Float]
		zoom01OpacityAnimation.keyTimes = [0.000, 0.930, 1.000] as [NSNumber]
		zoom01OpacityAnimation.timingFunctions = [linearTiming, linearTiming]
		zoom01OpacityAnimation.beginTime = beginTime
		zoom01OpacityAnimation.fillMode = fillMode
		zoom01OpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["zoom-01__root"]?.layer.add(zoom01OpacityAnimation, forKey:"Camera_Animation_Opacity")

		let cameraMinusOpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		cameraMinusOpacityAnimation.duration = 1.425
		cameraMinusOpacityAnimation.values = [0.000, 0.000, 1.000] as [Float]
		cameraMinusOpacityAnimation.keyTimes = [0.000, 0.930, 1.000] as [NSNumber]
		cameraMinusOpacityAnimation.timingFunctions = [linearTiming, linearTiming]
		cameraMinusOpacityAnimation.beginTime = beginTime
		cameraMinusOpacityAnimation.fillMode = fillMode
		cameraMinusOpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Camera_minus__root"]?.layer.add(cameraMinusOpacityAnimation, forKey:"Camera_Animation_Opacity")

		let linesCamera192MaskRotationAnimation = CAKeyframeAnimation(keyPath: "transform.rotation.z")
		linesCamera192MaskRotationAnimation.duration = 1.425
		linesCamera192MaskRotationAnimation.values = [5.658, 5.514, 5.745, 5.745] as [Float]
		linesCamera192MaskRotationAnimation.keyTimes = [0.000, 0.800, 0.919, 1.000] as [NSNumber]
		linesCamera192MaskRotationAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		linesCamera192MaskRotationAnimation.beginTime = beginTime
		linesCamera192MaskRotationAnimation.fillMode = fillMode
		linesCamera192MaskRotationAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Lines_camera-19_2_mask__root"]?.layer.add(linesCamera192MaskRotationAnimation, forKey:"Camera_Animation_Rotation")

		let linesCamera192MaskOpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		linesCamera192MaskOpacityAnimation.duration = 1.425
		linesCamera192MaskOpacityAnimation.values = [0.000, 0.000, 1.000, 1.000, 0.000, 0.000, 1.000, 1.000] as [Float]
		linesCamera192MaskOpacityAnimation.keyTimes = [0.000, 0.666, 0.667, 0.793, 0.793, 0.800, 0.800, 1.000] as [NSNumber]
		linesCamera192MaskOpacityAnimation.timingFunctions = [instantTiming, instantTiming, instantTiming, instantTiming, instantTiming, instantTiming, linearTiming]
		linesCamera192MaskOpacityAnimation.beginTime = beginTime
		linesCamera192MaskOpacityAnimation.fillMode = fillMode
		linesCamera192MaskOpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Lines_camera-19_2_mask__root"]?.layer.add(linesCamera192MaskOpacityAnimation, forKey:"Camera_Animation_Opacity")

		let linesCamera192MaskScaleYAnimation = CAKeyframeAnimation(keyPath: "transform.scale.y")
		linesCamera192MaskScaleYAnimation.duration = 1.425
		linesCamera192MaskScaleYAnimation.values = [0.004, 0.002, -0.381, -0.381, -0.028, -0.028, -0.028, -0.359, -0.359] as [Float]
		linesCamera192MaskScaleYAnimation.keyTimes = [0.000, 0.667, 0.709, 0.772, 0.772, 0.800, 0.800, 0.814, 1.000] as [NSNumber]
		linesCamera192MaskScaleYAnimation.timingFunctions = [linearTiming, linearTiming, instantTiming, instantTiming, instantTiming, instantTiming, linearTiming, linearTiming]
		linesCamera192MaskScaleYAnimation.beginTime = beginTime
		linesCamera192MaskScaleYAnimation.fillMode = fillMode
		linesCamera192MaskScaleYAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Lines_camera-19_2_mask__yScale"]?.layer.add(linesCamera192MaskScaleYAnimation, forKey:"Camera_Animation_ScaleY")

		let linesCamera192MaskTranslationXAnimation = CAKeyframeAnimation(keyPath: "transform.translation.x")
		linesCamera192MaskTranslationXAnimation.duration = 1.425
		linesCamera192MaskTranslationXAnimation.values = [0.000, 0.000, 24.415, 138.509, 406.459, 406.459, 253.913, 253.913, 553.467, 682.567, 780.146, 875.580, 875.580] as [Float]
		linesCamera192MaskTranslationXAnimation.keyTimes = [0.000, 0.667, 0.709, 0.751, 0.772, 0.800, 0.863, 0.870, 0.870, 0.905, 0.926, 0.954, 1.000] as [NSNumber]
		linesCamera192MaskTranslationXAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, instantTiming, instantTiming, linearTiming, linearTiming, linearTiming, linearTiming]
		linesCamera192MaskTranslationXAnimation.beginTime = beginTime
		linesCamera192MaskTranslationXAnimation.fillMode = fillMode
		linesCamera192MaskTranslationXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Lines_camera-19_2_mask__root"]?.layer.add(linesCamera192MaskTranslationXAnimation, forKey:"Camera_Animation_TranslationX")

		let linesCamera192MaskTranslationYAnimation = CAKeyframeAnimation(keyPath: "transform.translation.y")
		linesCamera192MaskTranslationYAnimation.duration = 1.425
		linesCamera192MaskTranslationYAnimation.values = [0.000, 0.000, 25.527, 177.840, -377.550, -377.550, -527.316, -527.316, -553.355, -397.080, -257.355, -90.992, -90.992] as [Float]
		linesCamera192MaskTranslationYAnimation.keyTimes = [0.000, 0.667, 0.709, 0.751, 0.772, 0.800, 0.863, 0.870, 0.870, 0.905, 0.926, 0.954, 1.000] as [NSNumber]
		linesCamera192MaskTranslationYAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, instantTiming, instantTiming, linearTiming, linearTiming, linearTiming, linearTiming]
		linesCamera192MaskTranslationYAnimation.beginTime = beginTime
		linesCamera192MaskTranslationYAnimation.fillMode = fillMode
		linesCamera192MaskTranslationYAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Lines_camera-19_2_mask__root"]?.layer.add(linesCamera192MaskTranslationYAnimation, forKey:"Camera_Animation_TranslationY")

		let menuIcons04ScaleXAnimation = CAKeyframeAnimation(keyPath: "transform.scale.x")
		menuIcons04ScaleXAnimation.duration = 1.425
		menuIcons04ScaleXAnimation.values = [0.239, 0.239, 0.151, 0.151] as [Float]
		menuIcons04ScaleXAnimation.keyTimes = [0.000, 0.491, 0.737, 1.000] as [NSNumber]
		menuIcons04ScaleXAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		menuIcons04ScaleXAnimation.beginTime = beginTime
		menuIcons04ScaleXAnimation.fillMode = fillMode
		menuIcons04ScaleXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["menu_icons-04__xScale"]?.layer.add(menuIcons04ScaleXAnimation, forKey:"Camera_Animation_ScaleX")

		let menuIcons04ScaleYAnimation = CAKeyframeAnimation(keyPath: "transform.scale.y")
		menuIcons04ScaleYAnimation.duration = 1.425
		menuIcons04ScaleYAnimation.values = [0.239, 0.239, 0.151, 0.151] as [Float]
		menuIcons04ScaleYAnimation.keyTimes = [0.000, 0.491, 0.737, 1.000] as [NSNumber]
		menuIcons04ScaleYAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		menuIcons04ScaleYAnimation.beginTime = beginTime
		menuIcons04ScaleYAnimation.fillMode = fillMode
		menuIcons04ScaleYAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["menu_icons-04__yScale"]?.layer.add(menuIcons04ScaleYAnimation, forKey:"Camera_Animation_ScaleY")

		let menuIcons04TranslationXAnimation = CAKeyframeAnimation(keyPath: "transform.translation.x")
		menuIcons04TranslationXAnimation.duration = 1.425
		menuIcons04TranslationXAnimation.values = [0.000, 0.000, -254.490, -254.490] as [Float]
		menuIcons04TranslationXAnimation.keyTimes = [0.000, 0.491, 0.737, 1.000] as [NSNumber]
		menuIcons04TranslationXAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		menuIcons04TranslationXAnimation.beginTime = beginTime
		menuIcons04TranslationXAnimation.fillMode = fillMode
		menuIcons04TranslationXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["menu_icons-04__root"]?.layer.add(menuIcons04TranslationXAnimation, forKey:"Camera_Animation_TranslationX")

		let menuIcons04TranslationYAnimation = CAKeyframeAnimation(keyPath: "transform.translation.y")
		menuIcons04TranslationYAnimation.duration = 1.425
		menuIcons04TranslationYAnimation.values = [0.000, 0.000, 64.608, 64.608] as [Float]
		menuIcons04TranslationYAnimation.keyTimes = [0.000, 0.491, 0.737, 1.000] as [NSNumber]
		menuIcons04TranslationYAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		menuIcons04TranslationYAnimation.beginTime = beginTime
		menuIcons04TranslationYAnimation.fillMode = fillMode
		menuIcons04TranslationYAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["menu_icons-04__root"]?.layer.add(menuIcons04TranslationYAnimation, forKey:"Camera_Animation_TranslationY")

		let frameCamera12MaskScaleYAnimation = CAKeyframeAnimation(keyPath: "transform.scale.y")
		frameCamera12MaskScaleYAnimation.duration = 1.425
		frameCamera12MaskScaleYAnimation.values = [0.196, 0.416, 0.650, 0.650] as [Float]
		frameCamera12MaskScaleYAnimation.keyTimes = [0.000, 0.088, 0.211, 1.000] as [NSNumber]
		frameCamera12MaskScaleYAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		frameCamera12MaskScaleYAnimation.beginTime = beginTime
		frameCamera12MaskScaleYAnimation.fillMode = fillMode
		frameCamera12MaskScaleYAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["frame_camera-12_mask__yScale"]?.layer.add(frameCamera12MaskScaleYAnimation, forKey:"Camera_Animation_ScaleY")

		let frameCamera12MaskTranslationXAnimation = CAKeyframeAnimation(keyPath: "transform.translation.x")
		frameCamera12MaskTranslationXAnimation.duration = 1.425
		frameCamera12MaskTranslationXAnimation.values = [0.000, 69.272, 203.300, 203.300] as [Float]
		frameCamera12MaskTranslationXAnimation.keyTimes = [0.000, 0.088, 0.211, 1.000] as [NSNumber]
		frameCamera12MaskTranslationXAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		frameCamera12MaskTranslationXAnimation.beginTime = beginTime
		frameCamera12MaskTranslationXAnimation.fillMode = fillMode
		frameCamera12MaskTranslationXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["frame_camera-12_mask__root"]?.layer.add(frameCamera12MaskTranslationXAnimation, forKey:"Camera_Animation_TranslationX")

		let frameCamera12MaskTranslationYAnimation = CAKeyframeAnimation(keyPath: "transform.translation.y")
		frameCamera12MaskTranslationYAnimation.duration = 1.425
		frameCamera12MaskTranslationYAnimation.values = [0.000, -106.597, -300.841, -300.841] as [Float]
		frameCamera12MaskTranslationYAnimation.keyTimes = [0.000, 0.088, 0.211, 1.000] as [NSNumber]
		frameCamera12MaskTranslationYAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		frameCamera12MaskTranslationYAnimation.beginTime = beginTime
		frameCamera12MaskTranslationYAnimation.fillMode = fillMode
		frameCamera12MaskTranslationYAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["frame_camera-12_mask__root"]?.layer.add(frameCamera12MaskTranslationYAnimation, forKey:"Camera_Animation_TranslationY")

		let vCmenu01OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		vCmenu01OpacityAnimation.duration = 1.425
		vCmenu01OpacityAnimation.values = [0.000, 0.000, 1.000, 1.000] as [Float]
		vCmenu01OpacityAnimation.keyTimes = [0.000, 0.842, 0.912, 1.000] as [NSNumber]
		vCmenu01OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		vCmenu01OpacityAnimation.beginTime = beginTime
		vCmenu01OpacityAnimation.fillMode = fillMode
		vCmenu01OpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["VCmenu-01__root"]?.layer.add(vCmenu01OpacityAnimation, forKey:"Camera_Animation_Opacity")

		let cameraPlusOpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		cameraPlusOpacityAnimation.duration = 1.425
		cameraPlusOpacityAnimation.values = [0.000, 0.000, 1.000] as [Float]
		cameraPlusOpacityAnimation.keyTimes = [0.000, 0.930, 1.000] as [NSNumber]
		cameraPlusOpacityAnimation.timingFunctions = [linearTiming, linearTiming]
		cameraPlusOpacityAnimation.beginTime = beginTime
		cameraPlusOpacityAnimation.fillMode = fillMode
		cameraPlusOpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Camera_plus__root"]?.layer.add(cameraPlusOpacityAnimation, forKey:"Camera_Animation_Opacity")

		let homeArrows03OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		homeArrows03OpacityAnimation.duration = 1.425
		homeArrows03OpacityAnimation.values = [0.000, 0.000, 1.000, 1.000] as [Float]
		homeArrows03OpacityAnimation.keyTimes = [0.000, 0.860, 0.930, 1.000] as [NSNumber]
		homeArrows03OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		homeArrows03OpacityAnimation.beginTime = beginTime
		homeArrows03OpacityAnimation.fillMode = fillMode
		homeArrows03OpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Home_Arrows-03__root"]?.layer.add(homeArrows03OpacityAnimation, forKey:"Camera_Animation_Opacity")

		let linesCamera19MaskRotationAnimation = CAKeyframeAnimation(keyPath: "transform.rotation.z")
		linesCamera19MaskRotationAnimation.duration = 1.425
		linesCamera19MaskRotationAnimation.values = [5.420, 5.420, 5.420, 5.420, 5.503, 5.503] as [Float]
		linesCamera19MaskRotationAnimation.keyTimes = [0.000, 0.281, 0.351, 0.561, 0.561, 1.000] as [NSNumber]
		linesCamera19MaskRotationAnimation.timingFunctions = [linearTiming, linearTiming, instantTiming, instantTiming, linearTiming]
		linesCamera19MaskRotationAnimation.beginTime = beginTime
		linesCamera19MaskRotationAnimation.fillMode = fillMode
		linesCamera19MaskRotationAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Lines_camera-19_mask__root"]?.layer.add(linesCamera19MaskRotationAnimation, forKey:"Camera_Animation_Rotation")

		let linesCamera19MaskScaleXAnimation = CAKeyframeAnimation(keyPath: "transform.scale.x")
		linesCamera19MaskScaleXAnimation.duration = 1.425
		linesCamera19MaskScaleXAnimation.values = [0.197, 0.197, 0.197, 0.516, 0.855, 1.322, 1.322] as [Float]
		linesCamera19MaskScaleXAnimation.keyTimes = [0.000, 0.281, 0.561, 0.667, 0.772, 0.912, 1.000] as [NSNumber]
		linesCamera19MaskScaleXAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming]
		linesCamera19MaskScaleXAnimation.beginTime = beginTime
		linesCamera19MaskScaleXAnimation.fillMode = fillMode
		linesCamera19MaskScaleXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Lines_camera-19_mask__xScale"]?.layer.add(linesCamera19MaskScaleXAnimation, forKey:"Camera_Animation_ScaleX")

		let linesCamera19MaskTranslationXAnimation = CAKeyframeAnimation(keyPath: "transform.translation.x")
		linesCamera19MaskTranslationXAnimation.duration = 1.425
		linesCamera19MaskTranslationXAnimation.values = [0.000, 0.000, 34.370, 46.948, 144.818, 151.914, 388.584, 616.547, 711.663, 980.513, 1343.183, 1343.183] as [Float]
		linesCamera19MaskTranslationXAnimation.keyTimes = [0.000, 0.281, 0.351, 0.456, 0.526, 0.561, 0.667, 0.737, 0.772, 0.877, 0.912, 1.000] as [NSNumber]
		linesCamera19MaskTranslationXAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming]
		linesCamera19MaskTranslationXAnimation.beginTime = beginTime
		linesCamera19MaskTranslationXAnimation.fillMode = fillMode
		linesCamera19MaskTranslationXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Lines_camera-19_mask__root"]?.layer.add(linesCamera19MaskTranslationXAnimation, forKey:"Camera_Animation_TranslationX")

		let linesCamera19MaskTranslationYAnimation = CAKeyframeAnimation(keyPath: "transform.translation.y")
		linesCamera19MaskTranslationYAnimation.duration = 1.425
		linesCamera19MaskTranslationYAnimation.values = [0.000, 0.000, -45.750, -16.784, 50.346, 37.521, -176.557, -386.872, -475.053, -717.284, -1059.283, -1059.283] as [Float]
		linesCamera19MaskTranslationYAnimation.keyTimes = [0.000, 0.281, 0.351, 0.456, 0.526, 0.561, 0.667, 0.737, 0.772, 0.877, 0.912, 1.000] as [NSNumber]
		linesCamera19MaskTranslationYAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming]
		linesCamera19MaskTranslationYAnimation.beginTime = beginTime
		linesCamera19MaskTranslationYAnimation.fillMode = fillMode
		linesCamera19MaskTranslationYAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Lines_camera-19_mask__root"]?.layer.add(linesCamera19MaskTranslationYAnimation, forKey:"Camera_Animation_TranslationY")

		let menuIcons01ScaleXAnimation = CAKeyframeAnimation(keyPath: "transform.scale.x")
		menuIcons01ScaleXAnimation.duration = 1.425
		menuIcons01ScaleXAnimation.values = [0.240, 0.150, 0.150] as [Float]
		menuIcons01ScaleXAnimation.keyTimes = [0.000, 0.246, 1.000] as [NSNumber]
		menuIcons01ScaleXAnimation.timingFunctions = [linearTiming, linearTiming]
		menuIcons01ScaleXAnimation.beginTime = beginTime
		menuIcons01ScaleXAnimation.fillMode = fillMode
		menuIcons01ScaleXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["menu_icons-01__xScale"]?.layer.add(menuIcons01ScaleXAnimation, forKey:"Camera_Animation_ScaleX")

		let menuIcons01ScaleYAnimation = CAKeyframeAnimation(keyPath: "transform.scale.y")
		menuIcons01ScaleYAnimation.duration = 1.425
		menuIcons01ScaleYAnimation.values = [0.240, 0.150, 0.150] as [Float]
		menuIcons01ScaleYAnimation.keyTimes = [0.000, 0.246, 1.000] as [NSNumber]
		menuIcons01ScaleYAnimation.timingFunctions = [linearTiming, linearTiming]
		menuIcons01ScaleYAnimation.beginTime = beginTime
		menuIcons01ScaleYAnimation.fillMode = fillMode
		menuIcons01ScaleYAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["menu_icons-01__yScale"]?.layer.add(menuIcons01ScaleYAnimation, forKey:"Camera_Animation_ScaleY")

		let menuIcons01TranslationXAnimation = CAKeyframeAnimation(keyPath: "transform.translation.x")
		menuIcons01TranslationXAnimation.duration = 1.425
		menuIcons01TranslationXAnimation.values = [0.000, -48.550, -48.550] as [Float]
		menuIcons01TranslationXAnimation.keyTimes = [0.000, 0.246, 1.000] as [NSNumber]
		menuIcons01TranslationXAnimation.timingFunctions = [linearTiming, linearTiming]
		menuIcons01TranslationXAnimation.beginTime = beginTime
		menuIcons01TranslationXAnimation.fillMode = fillMode
		menuIcons01TranslationXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["menu_icons-01__root"]?.layer.add(menuIcons01TranslationXAnimation, forKey:"Camera_Animation_TranslationX")

		let menuIcons01TranslationYAnimation = CAKeyframeAnimation(keyPath: "transform.translation.y")
		menuIcons01TranslationYAnimation.duration = 1.425
		menuIcons01TranslationYAnimation.values = [0.000, 236.449, 236.449] as [Float]
		menuIcons01TranslationYAnimation.keyTimes = [0.000, 0.246, 1.000] as [NSNumber]
		menuIcons01TranslationYAnimation.timingFunctions = [linearTiming, linearTiming]
		menuIcons01TranslationYAnimation.beginTime = beginTime
		menuIcons01TranslationYAnimation.fillMode = fillMode
		menuIcons01TranslationYAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["menu_icons-01__root"]?.layer.add(menuIcons01TranslationYAnimation, forKey:"Camera_Animation_TranslationY")

		let linesCamera193MaskOpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		linesCamera193MaskOpacityAnimation.duration = 1.425
		linesCamera193MaskOpacityAnimation.values = [0.000, 0.000, 1.000, 1.000] as [Float]
		linesCamera193MaskOpacityAnimation.keyTimes = [0.000, 0.728, 0.728, 1.000] as [NSNumber]
		linesCamera193MaskOpacityAnimation.timingFunctions = [instantTiming, instantTiming, linearTiming]
		linesCamera193MaskOpacityAnimation.beginTime = beginTime
		linesCamera193MaskOpacityAnimation.fillMode = fillMode
		linesCamera193MaskOpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Lines_camera-19_3_mask__root"]?.layer.add(linesCamera193MaskOpacityAnimation, forKey:"Camera_Animation_Opacity")

		let linesCamera193MaskScaleXAnimation = CAKeyframeAnimation(keyPath: "transform.scale.x")
		linesCamera193MaskScaleXAnimation.duration = 1.425
		linesCamera193MaskScaleXAnimation.values = [-0.005, -0.005, 1.001, 1.183, 1.183] as [Float]
		linesCamera193MaskScaleXAnimation.keyTimes = [0.000, 0.730, 0.765, 0.786, 1.000] as [NSNumber]
		linesCamera193MaskScaleXAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming]
		linesCamera193MaskScaleXAnimation.beginTime = beginTime
		linesCamera193MaskScaleXAnimation.fillMode = fillMode
		linesCamera193MaskScaleXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Lines_camera-19_3_mask__xScale"]?.layer.add(linesCamera193MaskScaleXAnimation, forKey:"Camera_Animation_ScaleX")

		let linesCamera193MaskScaleYAnimation = CAKeyframeAnimation(keyPath: "transform.scale.y")
		linesCamera193MaskScaleYAnimation.duration = 1.425
		linesCamera193MaskScaleYAnimation.values = [0.988, 1.135, 1.135] as [Float]
		linesCamera193MaskScaleYAnimation.keyTimes = [0.000, 0.786, 1.000] as [NSNumber]
		linesCamera193MaskScaleYAnimation.timingFunctions = [linearTiming, linearTiming]
		linesCamera193MaskScaleYAnimation.beginTime = beginTime
		linesCamera193MaskScaleYAnimation.fillMode = fillMode
		linesCamera193MaskScaleYAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Lines_camera-19_3_mask__yScale"]?.layer.add(linesCamera193MaskScaleYAnimation, forKey:"Camera_Animation_ScaleY")

		let linesCamera193MaskTranslationXAnimation = CAKeyframeAnimation(keyPath: "transform.translation.x")
		linesCamera193MaskTranslationXAnimation.duration = 1.425
		linesCamera193MaskTranslationXAnimation.values = [0.000, 0.000, -223.948, -489.536, -681.989, -992.677, -992.677] as [Float]
		linesCamera193MaskTranslationXAnimation.keyTimes = [0.000, 0.730, 0.765, 0.786, 0.828, 0.863, 1.000] as [NSNumber]
		linesCamera193MaskTranslationXAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming]
		linesCamera193MaskTranslationXAnimation.beginTime = beginTime
		linesCamera193MaskTranslationXAnimation.fillMode = fillMode
		linesCamera193MaskTranslationXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Lines_camera-19_3_mask__root"]?.layer.add(linesCamera193MaskTranslationXAnimation, forKey:"Camera_Animation_TranslationX")

		let linesCamera193MaskTranslationYAnimation = CAKeyframeAnimation(keyPath: "transform.translation.y")
		linesCamera193MaskTranslationYAnimation.duration = 1.425
		linesCamera193MaskTranslationYAnimation.values = [0.000, 0.000, -193.641, -320.606, -406.583, -437.083, -437.083] as [Float]
		linesCamera193MaskTranslationYAnimation.keyTimes = [0.000, 0.730, 0.765, 0.786, 0.828, 0.863, 1.000] as [NSNumber]
		linesCamera193MaskTranslationYAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming]
		linesCamera193MaskTranslationYAnimation.beginTime = beginTime
		linesCamera193MaskTranslationYAnimation.fillMode = fillMode
		linesCamera193MaskTranslationYAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Lines_camera-19_3_mask__root"]?.layer.add(linesCamera193MaskTranslationYAnimation, forKey:"Camera_Animation_TranslationY")

		let homeArrows04OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		homeArrows04OpacityAnimation.duration = 1.425
		homeArrows04OpacityAnimation.values = [0.000, 0.000, 1.000, 1.000] as [Float]
		homeArrows04OpacityAnimation.keyTimes = [0.000, 0.842, 0.912, 1.000] as [NSNumber]
		homeArrows04OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		homeArrows04OpacityAnimation.beginTime = beginTime
		homeArrows04OpacityAnimation.fillMode = fillMode
		homeArrows04OpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Home_Arrows-04__root"]?.layer.add(homeArrows04OpacityAnimation, forKey:"Camera_Animation_Opacity")

		let circle01MaskTranslationXAnimation = CAKeyframeAnimation(keyPath: "transform.translation.x")
		circle01MaskTranslationXAnimation.duration = 1.425
		circle01MaskTranslationXAnimation.values = [0.000, 0.000, 288.047, 288.047] as [Float]
		circle01MaskTranslationXAnimation.keyTimes = [0.000, 0.123, 0.298, 1.000] as [NSNumber]
		circle01MaskTranslationXAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		circle01MaskTranslationXAnimation.beginTime = beginTime
		circle01MaskTranslationXAnimation.fillMode = fillMode
		circle01MaskTranslationXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Circle-01_mask__root"]?.layer.add(circle01MaskTranslationXAnimation, forKey:"Camera_Animation_TranslationX")

		let circle01MaskTranslationYAnimation = CAKeyframeAnimation(keyPath: "transform.translation.y")
		circle01MaskTranslationYAnimation.duration = 1.425
		circle01MaskTranslationYAnimation.values = [0.000, 0.000, -512.330, -512.330] as [Float]
		circle01MaskTranslationYAnimation.keyTimes = [0.000, 0.123, 0.298, 1.000] as [NSNumber]
		circle01MaskTranslationYAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		circle01MaskTranslationYAnimation.beginTime = beginTime
		circle01MaskTranslationYAnimation.fillMode = fillMode
		circle01MaskTranslationYAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Circle-01_mask__root"]?.layer.add(circle01MaskTranslationYAnimation, forKey:"Camera_Animation_TranslationY")

		let homeArrows05OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		homeArrows05OpacityAnimation.duration = 1.425
		homeArrows05OpacityAnimation.values = [0.000, 0.000, 1.000, 1.000] as [Float]
		homeArrows05OpacityAnimation.keyTimes = [0.000, 0.737, 0.807, 1.000] as [NSNumber]
		homeArrows05OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		homeArrows05OpacityAnimation.beginTime = beginTime
		homeArrows05OpacityAnimation.fillMode = fillMode
		homeArrows05OpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Home_Arrows-05__root"]?.layer.add(homeArrows05OpacityAnimation, forKey:"Camera_Animation_Opacity")

		let linesCamera191MaskOpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		linesCamera191MaskOpacityAnimation.duration = 1.425
		linesCamera191MaskOpacityAnimation.values = [0.000, 0.000, 1.000, 1.000, 0.000, 0.000, 1.000, 1.000] as [Float]
		linesCamera191MaskOpacityAnimation.keyTimes = [0.000, 0.666, 0.667, 0.758, 0.758, 0.800, 0.800, 1.000] as [NSNumber]
		linesCamera191MaskOpacityAnimation.timingFunctions = [instantTiming, instantTiming, instantTiming, instantTiming, instantTiming, instantTiming, linearTiming]
		linesCamera191MaskOpacityAnimation.beginTime = beginTime
		linesCamera191MaskOpacityAnimation.fillMode = fillMode
		linesCamera191MaskOpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Lines_camera-19_1_mask__root"]?.layer.add(linesCamera191MaskOpacityAnimation, forKey:"Camera_Animation_Opacity")

		let linesCamera191MaskScaleYAnimation = CAKeyframeAnimation(keyPath: "transform.scale.y")
		linesCamera191MaskScaleYAnimation.duration = 1.425
		linesCamera191MaskScaleYAnimation.values = [0.000, 0.000, 0.326, 0.326, -0.089, -0.089, -0.439, -0.439] as [Float]
		linesCamera191MaskScaleYAnimation.keyTimes = [0.000, 0.667, 0.709, 0.758, 0.758, 0.800, 0.849, 1.000] as [NSNumber]
		linesCamera191MaskScaleYAnimation.timingFunctions = [linearTiming, linearTiming, instantTiming, instantTiming, linearTiming, linearTiming, linearTiming]
		linesCamera191MaskScaleYAnimation.beginTime = beginTime
		linesCamera191MaskScaleYAnimation.fillMode = fillMode
		linesCamera191MaskScaleYAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Lines_camera-19_1_mask__yScale"]?.layer.add(linesCamera191MaskScaleYAnimation, forKey:"Camera_Animation_ScaleY")

		let linesCamera191MaskTranslationXAnimation = CAKeyframeAnimation(keyPath: "transform.translation.x")
		linesCamera191MaskTranslationXAnimation.duration = 1.425
		linesCamera191MaskTranslationXAnimation.values = [0.000, 0.000, -93.305, -200.375, -200.375, 431.413, 431.413, 627.595, 627.595, 819.553, 819.553, 966.183, 966.183] as [Float]
		linesCamera191MaskTranslationXAnimation.keyTimes = [0.000, 0.667, 0.709, 0.751, 0.758, 0.758, 0.800, 0.877, 0.884, 0.884, 0.891, 0.947, 1.000] as [NSNumber]
		linesCamera191MaskTranslationXAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, instantTiming, instantTiming, linearTiming, linearTiming, instantTiming, instantTiming, linearTiming, linearTiming, linearTiming]
		linesCamera191MaskTranslationXAnimation.beginTime = beginTime
		linesCamera191MaskTranslationXAnimation.fillMode = fillMode
		linesCamera191MaskTranslationXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Lines_camera-19_1_mask__root"]?.layer.add(linesCamera191MaskTranslationXAnimation, forKey:"Camera_Animation_TranslationX")

		let linesCamera191MaskTranslationYAnimation = CAKeyframeAnimation(keyPath: "transform.translation.y")
		linesCamera191MaskTranslationYAnimation.duration = 1.425
		linesCamera191MaskTranslationYAnimation.values = [0.000, 0.000, -107.933, -211.785, -211.785, -351.765, -351.765, -131.921, -131.921, -600.515, -600.515, -435.083, -435.083] as [Float]
		linesCamera191MaskTranslationYAnimation.keyTimes = [0.000, 0.667, 0.709, 0.751, 0.758, 0.758, 0.800, 0.877, 0.884, 0.884, 0.891, 0.947, 1.000] as [NSNumber]
		linesCamera191MaskTranslationYAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, instantTiming, instantTiming, linearTiming, linearTiming, instantTiming, instantTiming, linearTiming, linearTiming, linearTiming]
		linesCamera191MaskTranslationYAnimation.beginTime = beginTime
		linesCamera191MaskTranslationYAnimation.fillMode = fillMode
		linesCamera191MaskTranslationYAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Lines_camera-19_1_mask__root"]?.layer.add(linesCamera191MaskTranslationYAnimation, forKey:"Camera_Animation_TranslationY")

		let homeArrows01OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		homeArrows01OpacityAnimation.duration = 1.425
		homeArrows01OpacityAnimation.values = [0.000, 0.000, 1.000, 1.000] as [Float]
		homeArrows01OpacityAnimation.keyTimes = [0.000, 0.737, 0.807, 1.000] as [NSNumber]
		homeArrows01OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		homeArrows01OpacityAnimation.beginTime = beginTime
		homeArrows01OpacityAnimation.fillMode = fillMode
		homeArrows01OpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Home_Arrows-01__root"]?.layer.add(homeArrows01OpacityAnimation, forKey:"Camera_Animation_Opacity")
	}

	func removeCameraAnimation() {
		self.layer.removeAnimation(forKey: "CameraAnimation")
		self.viewsByName["menu_icons-03__xScale"]?.layer.removeAnimation(forKey: "Camera_Animation_ScaleX")
		self.viewsByName["menu_icons-03__yScale"]?.layer.removeAnimation(forKey: "Camera_Animation_ScaleY")
		self.viewsByName["menu_icons-03__root"]?.layer.removeAnimation(forKey: "Camera_Animation_TranslationX")
		self.viewsByName["menu_icons-03__root"]?.layer.removeAnimation(forKey: "Camera_Animation_TranslationY")
		self.viewsByName["zoom-01__root"]?.layer.removeAnimation(forKey: "Camera_Animation_Opacity")
		self.viewsByName["Camera_minus__root"]?.layer.removeAnimation(forKey: "Camera_Animation_Opacity")
		self.viewsByName["Lines_camera-19_2_mask__root"]?.layer.removeAnimation(forKey: "Camera_Animation_Rotation")
		self.viewsByName["Lines_camera-19_2_mask__root"]?.layer.removeAnimation(forKey: "Camera_Animation_Opacity")
		self.viewsByName["Lines_camera-19_2_mask__yScale"]?.layer.removeAnimation(forKey: "Camera_Animation_ScaleY")
		self.viewsByName["Lines_camera-19_2_mask__root"]?.layer.removeAnimation(forKey: "Camera_Animation_TranslationX")
		self.viewsByName["Lines_camera-19_2_mask__root"]?.layer.removeAnimation(forKey: "Camera_Animation_TranslationY")
		self.viewsByName["menu_icons-04__xScale"]?.layer.removeAnimation(forKey: "Camera_Animation_ScaleX")
		self.viewsByName["menu_icons-04__yScale"]?.layer.removeAnimation(forKey: "Camera_Animation_ScaleY")
		self.viewsByName["menu_icons-04__root"]?.layer.removeAnimation(forKey: "Camera_Animation_TranslationX")
		self.viewsByName["menu_icons-04__root"]?.layer.removeAnimation(forKey: "Camera_Animation_TranslationY")
		self.viewsByName["frame_camera-12_mask__yScale"]?.layer.removeAnimation(forKey: "Camera_Animation_ScaleY")
		self.viewsByName["frame_camera-12_mask__root"]?.layer.removeAnimation(forKey: "Camera_Animation_TranslationX")
		self.viewsByName["frame_camera-12_mask__root"]?.layer.removeAnimation(forKey: "Camera_Animation_TranslationY")
		self.viewsByName["VCmenu-01__root"]?.layer.removeAnimation(forKey: "Camera_Animation_Opacity")
		self.viewsByName["Camera_plus__root"]?.layer.removeAnimation(forKey: "Camera_Animation_Opacity")
		self.viewsByName["Home_Arrows-03__root"]?.layer.removeAnimation(forKey: "Camera_Animation_Opacity")
		self.viewsByName["Lines_camera-19_mask__root"]?.layer.removeAnimation(forKey: "Camera_Animation_Rotation")
		self.viewsByName["Lines_camera-19_mask__xScale"]?.layer.removeAnimation(forKey: "Camera_Animation_ScaleX")
		self.viewsByName["Lines_camera-19_mask__root"]?.layer.removeAnimation(forKey: "Camera_Animation_TranslationX")
		self.viewsByName["Lines_camera-19_mask__root"]?.layer.removeAnimation(forKey: "Camera_Animation_TranslationY")
		self.viewsByName["menu_icons-01__xScale"]?.layer.removeAnimation(forKey: "Camera_Animation_ScaleX")
		self.viewsByName["menu_icons-01__yScale"]?.layer.removeAnimation(forKey: "Camera_Animation_ScaleY")
		self.viewsByName["menu_icons-01__root"]?.layer.removeAnimation(forKey: "Camera_Animation_TranslationX")
		self.viewsByName["menu_icons-01__root"]?.layer.removeAnimation(forKey: "Camera_Animation_TranslationY")
		self.viewsByName["Lines_camera-19_3_mask__root"]?.layer.removeAnimation(forKey: "Camera_Animation_Opacity")
		self.viewsByName["Lines_camera-19_3_mask__xScale"]?.layer.removeAnimation(forKey: "Camera_Animation_ScaleX")
		self.viewsByName["Lines_camera-19_3_mask__yScale"]?.layer.removeAnimation(forKey: "Camera_Animation_ScaleY")
		self.viewsByName["Lines_camera-19_3_mask__root"]?.layer.removeAnimation(forKey: "Camera_Animation_TranslationX")
		self.viewsByName["Lines_camera-19_3_mask__root"]?.layer.removeAnimation(forKey: "Camera_Animation_TranslationY")
		self.viewsByName["Home_Arrows-04__root"]?.layer.removeAnimation(forKey: "Camera_Animation_Opacity")
		self.viewsByName["Circle-01_mask__root"]?.layer.removeAnimation(forKey: "Camera_Animation_TranslationX")
		self.viewsByName["Circle-01_mask__root"]?.layer.removeAnimation(forKey: "Camera_Animation_TranslationY")
		self.viewsByName["Home_Arrows-05__root"]?.layer.removeAnimation(forKey: "Camera_Animation_Opacity")
		self.viewsByName["Lines_camera-19_1_mask__root"]?.layer.removeAnimation(forKey: "Camera_Animation_Opacity")
		self.viewsByName["Lines_camera-19_1_mask__yScale"]?.layer.removeAnimation(forKey: "Camera_Animation_ScaleY")
		self.viewsByName["Lines_camera-19_1_mask__root"]?.layer.removeAnimation(forKey: "Camera_Animation_TranslationX")
		self.viewsByName["Lines_camera-19_1_mask__root"]?.layer.removeAnimation(forKey: "Camera_Animation_TranslationY")
		self.viewsByName["Home_Arrows-01__root"]?.layer.removeAnimation(forKey: "Camera_Animation_Opacity")
	}

	// - MARK: Camera_Animation_reversed

	func addCameraAnimationReversedAnimation() {
		addCameraAnimationReversedAnimation(beginTime: 0, fillMode: kCAFillModeBoth, removedOnCompletion: false, completion: nil)
	}

	func addCameraAnimationReversedAnimation(completion: ((Bool) -> Void)?) {
		addCameraAnimationReversedAnimation(beginTime: 0, fillMode: kCAFillModeBoth, removedOnCompletion: false, completion: completion)
	}

	func addCameraAnimationReversedAnimation(removedOnCompletion: Bool) {
		addCameraAnimationReversedAnimation(beginTime: 0, fillMode: removedOnCompletion ? kCAFillModeRemoved : kCAFillModeBoth, removedOnCompletion: removedOnCompletion, completion: nil)
	}

	func addCameraAnimationReversedAnimation(removedOnCompletion: Bool, completion: ((Bool) -> Void)?) {
		addCameraAnimationReversedAnimation(beginTime: 0, fillMode: removedOnCompletion ? kCAFillModeRemoved : kCAFillModeBoth, removedOnCompletion: removedOnCompletion, completion: completion)
	}

	func addCameraAnimationReversedAnimation(beginTime: CFTimeInterval, fillMode: String, removedOnCompletion: Bool, completion: ((Bool) -> Void)?) {
		let linearTiming = CAMediaTimingFunction(name: kCAMediaTimingFunctionLinear)
		let instantTiming = CAMediaTimingFunction(name: kCAMediaTimingFunctionDefault)
		if let complete = completion {
			let representativeAnimation = CABasicAnimation(keyPath: "not.a.real.key")
			representativeAnimation.duration = 1.425
			representativeAnimation.delegate = self
			self.layer.add(representativeAnimation, forKey: "CameraAnimationReversed")
			self.animationCompletions[layer.animation(forKey: "CameraAnimationReversed")!] = complete
		}

		let menuIcons03ScaleXAnimation = CAKeyframeAnimation(keyPath: "transform.scale.x")
		menuIcons03ScaleXAnimation.duration = 1.425
		menuIcons03ScaleXAnimation.values = [0.152, 0.152, 0.240, 0.240] as [Float]
		menuIcons03ScaleXAnimation.keyTimes = [0.000, 0.509, 0.754, 1.000] as [NSNumber]
		menuIcons03ScaleXAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		menuIcons03ScaleXAnimation.beginTime = beginTime
		menuIcons03ScaleXAnimation.fillMode = fillMode
		menuIcons03ScaleXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["menu_icons-03__xScale"]?.layer.add(menuIcons03ScaleXAnimation, forKey:"Camera_Animation_reversed_ScaleX")

		let menuIcons03ScaleYAnimation = CAKeyframeAnimation(keyPath: "transform.scale.y")
		menuIcons03ScaleYAnimation.duration = 1.425
		menuIcons03ScaleYAnimation.values = [0.152, 0.152, 0.240, 0.240] as [Float]
		menuIcons03ScaleYAnimation.keyTimes = [0.000, 0.509, 0.754, 1.000] as [NSNumber]
		menuIcons03ScaleYAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		menuIcons03ScaleYAnimation.beginTime = beginTime
		menuIcons03ScaleYAnimation.fillMode = fillMode
		menuIcons03ScaleYAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["menu_icons-03__yScale"]?.layer.add(menuIcons03ScaleYAnimation, forKey:"Camera_Animation_reversed_ScaleY")

		let menuIcons03TranslationXAnimation = CAKeyframeAnimation(keyPath: "transform.translation.x")
		menuIcons03TranslationXAnimation.duration = 1.425
		menuIcons03TranslationXAnimation.values = [-175.777, -175.777, 0.000, 0.000] as [Float]
		menuIcons03TranslationXAnimation.keyTimes = [0.000, 0.509, 0.754, 1.000] as [NSNumber]
		menuIcons03TranslationXAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		menuIcons03TranslationXAnimation.beginTime = beginTime
		menuIcons03TranslationXAnimation.fillMode = fillMode
		menuIcons03TranslationXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["menu_icons-03__root"]?.layer.add(menuIcons03TranslationXAnimation, forKey:"Camera_Animation_reversed_TranslationX")

		let menuIcons03TranslationYAnimation = CAKeyframeAnimation(keyPath: "transform.translation.y")
		menuIcons03TranslationYAnimation.duration = 1.425
		menuIcons03TranslationYAnimation.values = [117.643, 117.643, 0.000, 0.000] as [Float]
		menuIcons03TranslationYAnimation.keyTimes = [0.000, 0.509, 0.754, 1.000] as [NSNumber]
		menuIcons03TranslationYAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		menuIcons03TranslationYAnimation.beginTime = beginTime
		menuIcons03TranslationYAnimation.fillMode = fillMode
		menuIcons03TranslationYAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["menu_icons-03__root"]?.layer.add(menuIcons03TranslationYAnimation, forKey:"Camera_Animation_reversed_TranslationY")

		let zoom01OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		zoom01OpacityAnimation.duration = 1.425
		zoom01OpacityAnimation.values = [1.000, 0.000, 0.000] as [Float]
		zoom01OpacityAnimation.keyTimes = [0.000, 0.070, 1.000] as [NSNumber]
		zoom01OpacityAnimation.timingFunctions = [linearTiming, linearTiming]
		zoom01OpacityAnimation.beginTime = beginTime
		zoom01OpacityAnimation.fillMode = fillMode
		zoom01OpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["zoom-01__root"]?.layer.add(zoom01OpacityAnimation, forKey:"Camera_Animation_reversed_Opacity")

		let cameraMinusOpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		cameraMinusOpacityAnimation.duration = 1.425
		cameraMinusOpacityAnimation.values = [1.000, 0.000, 0.000] as [Float]
		cameraMinusOpacityAnimation.keyTimes = [0.000, 0.070, 1.000] as [NSNumber]
		cameraMinusOpacityAnimation.timingFunctions = [linearTiming, linearTiming]
		cameraMinusOpacityAnimation.beginTime = beginTime
		cameraMinusOpacityAnimation.fillMode = fillMode
		cameraMinusOpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Camera_minus__root"]?.layer.add(cameraMinusOpacityAnimation, forKey:"Camera_Animation_reversed_Opacity")

		let linesCamera192MaskRotationAnimation = CAKeyframeAnimation(keyPath: "transform.rotation.z")
		linesCamera192MaskRotationAnimation.duration = 1.425
		linesCamera192MaskRotationAnimation.values = [5.745, 5.745, 5.514, 5.658] as [Float]
		linesCamera192MaskRotationAnimation.keyTimes = [0.000, 0.081, 0.200, 1.000] as [NSNumber]
		linesCamera192MaskRotationAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		linesCamera192MaskRotationAnimation.beginTime = beginTime
		linesCamera192MaskRotationAnimation.fillMode = fillMode
		linesCamera192MaskRotationAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Lines_camera-19_2_mask__root"]?.layer.add(linesCamera192MaskRotationAnimation, forKey:"Camera_Animation_reversed_Rotation")

		let linesCamera192MaskOpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		linesCamera192MaskOpacityAnimation.duration = 1.425
		linesCamera192MaskOpacityAnimation.values = [1.000, 1.000, 1.000, 0.000, 0.000, 0.000, 20.000, 1.000, 1.000, 0.000, 0.000] as [Float]
		linesCamera192MaskOpacityAnimation.keyTimes = [0.000, 0.200, 0.200, 0.201, 0.207, 0.207, 0.208, 0.333, 0.334, 0.334, 1.000] as [NSNumber]
		linesCamera192MaskOpacityAnimation.timingFunctions = [linearTiming, instantTiming, instantTiming, linearTiming, instantTiming, instantTiming, linearTiming, instantTiming, instantTiming, linearTiming]
		linesCamera192MaskOpacityAnimation.beginTime = beginTime
		linesCamera192MaskOpacityAnimation.fillMode = fillMode
		linesCamera192MaskOpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Lines_camera-19_2_mask__root"]?.layer.add(linesCamera192MaskOpacityAnimation, forKey:"Camera_Animation_reversed_Opacity")

		let linesCamera192MaskScaleYAnimation = CAKeyframeAnimation(keyPath: "transform.scale.y")
		linesCamera192MaskScaleYAnimation.duration = 1.425
		linesCamera192MaskScaleYAnimation.values = [-0.359, -0.359, -0.028, -0.028, -0.559, -0.028, -0.028, -7.626, -0.381, 0.002, 0.004] as [Float]
		linesCamera192MaskScaleYAnimation.keyTimes = [0.000, 0.186, 0.200, 0.200, 0.201, 0.228, 0.228, 0.229, 0.291, 0.333, 1.000] as [NSNumber]
		linesCamera192MaskScaleYAnimation.timingFunctions = [linearTiming, linearTiming, instantTiming, instantTiming, linearTiming, instantTiming, instantTiming, linearTiming, linearTiming, linearTiming]
		linesCamera192MaskScaleYAnimation.beginTime = beginTime
		linesCamera192MaskScaleYAnimation.fillMode = fillMode
		linesCamera192MaskScaleYAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Lines_camera-19_2_mask__yScale"]?.layer.add(linesCamera192MaskScaleYAnimation, forKey:"Camera_Animation_reversed_ScaleY")

		let linesCamera192MaskTranslationXAnimation = CAKeyframeAnimation(keyPath: "transform.translation.x")
		linesCamera192MaskTranslationXAnimation.duration = 1.425
		linesCamera192MaskTranslationXAnimation.values = [875.580, 875.580, 780.146, 682.567, 553.467, 553.467, 253.913, 253.913, 406.459, 406.459, 138.509, 24.415, 0.000, 0.000] as [Float]
		linesCamera192MaskTranslationXAnimation.keyTimes = [0.000, 0.046, 0.074, 0.095, 0.130, 0.130, 0.131, 0.137, 0.200, 0.228, 0.249, 0.291, 0.333, 1.000] as [NSNumber]
		linesCamera192MaskTranslationXAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming, instantTiming, instantTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming]
		linesCamera192MaskTranslationXAnimation.beginTime = beginTime
		linesCamera192MaskTranslationXAnimation.fillMode = fillMode
		linesCamera192MaskTranslationXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Lines_camera-19_2_mask__root"]?.layer.add(linesCamera192MaskTranslationXAnimation, forKey:"Camera_Animation_reversed_TranslationX")

		let linesCamera192MaskTranslationYAnimation = CAKeyframeAnimation(keyPath: "transform.translation.y")
		linesCamera192MaskTranslationYAnimation.duration = 1.425
		linesCamera192MaskTranslationYAnimation.values = [-90.992, -90.992, -257.355, -397.080, -553.355, -553.355, -527.316, -527.316, -377.550, -377.550, 177.840, 25.527, 0.000, 0.000] as [Float]
		linesCamera192MaskTranslationYAnimation.keyTimes = [0.000, 0.046, 0.074, 0.095, 0.130, 0.130, 0.131, 0.137, 0.200, 0.228, 0.249, 0.291, 0.333, 1.000] as [NSNumber]
		linesCamera192MaskTranslationYAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming, instantTiming, instantTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming]
		linesCamera192MaskTranslationYAnimation.beginTime = beginTime
		linesCamera192MaskTranslationYAnimation.fillMode = fillMode
		linesCamera192MaskTranslationYAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Lines_camera-19_2_mask__root"]?.layer.add(linesCamera192MaskTranslationYAnimation, forKey:"Camera_Animation_reversed_TranslationY")

		let menuIcons04ScaleXAnimation = CAKeyframeAnimation(keyPath: "transform.scale.x")
		menuIcons04ScaleXAnimation.duration = 1.425
		menuIcons04ScaleXAnimation.values = [0.151, 0.151, 0.239, 0.239] as [Float]
		menuIcons04ScaleXAnimation.keyTimes = [0.000, 0.263, 0.509, 1.000] as [NSNumber]
		menuIcons04ScaleXAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		menuIcons04ScaleXAnimation.beginTime = beginTime
		menuIcons04ScaleXAnimation.fillMode = fillMode
		menuIcons04ScaleXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["menu_icons-04__xScale"]?.layer.add(menuIcons04ScaleXAnimation, forKey:"Camera_Animation_reversed_ScaleX")

		let menuIcons04ScaleYAnimation = CAKeyframeAnimation(keyPath: "transform.scale.y")
		menuIcons04ScaleYAnimation.duration = 1.425
		menuIcons04ScaleYAnimation.values = [0.151, 0.151, 0.239, 0.239] as [Float]
		menuIcons04ScaleYAnimation.keyTimes = [0.000, 0.263, 0.509, 1.000] as [NSNumber]
		menuIcons04ScaleYAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		menuIcons04ScaleYAnimation.beginTime = beginTime
		menuIcons04ScaleYAnimation.fillMode = fillMode
		menuIcons04ScaleYAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["menu_icons-04__yScale"]?.layer.add(menuIcons04ScaleYAnimation, forKey:"Camera_Animation_reversed_ScaleY")

		let menuIcons04TranslationXAnimation = CAKeyframeAnimation(keyPath: "transform.translation.x")
		menuIcons04TranslationXAnimation.duration = 1.425
		menuIcons04TranslationXAnimation.values = [-254.490, -254.490, 0.000, 0.000] as [Float]
		menuIcons04TranslationXAnimation.keyTimes = [0.000, 0.263, 0.509, 1.000] as [NSNumber]
		menuIcons04TranslationXAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		menuIcons04TranslationXAnimation.beginTime = beginTime
		menuIcons04TranslationXAnimation.fillMode = fillMode
		menuIcons04TranslationXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["menu_icons-04__root"]?.layer.add(menuIcons04TranslationXAnimation, forKey:"Camera_Animation_reversed_TranslationX")

		let menuIcons04TranslationYAnimation = CAKeyframeAnimation(keyPath: "transform.translation.y")
		menuIcons04TranslationYAnimation.duration = 1.425
		menuIcons04TranslationYAnimation.values = [64.608, 64.608, 0.000, 0.000] as [Float]
		menuIcons04TranslationYAnimation.keyTimes = [0.000, 0.263, 0.509, 1.000] as [NSNumber]
		menuIcons04TranslationYAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		menuIcons04TranslationYAnimation.beginTime = beginTime
		menuIcons04TranslationYAnimation.fillMode = fillMode
		menuIcons04TranslationYAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["menu_icons-04__root"]?.layer.add(menuIcons04TranslationYAnimation, forKey:"Camera_Animation_reversed_TranslationY")

		let frameCamera12MaskScaleYAnimation = CAKeyframeAnimation(keyPath: "transform.scale.y")
		frameCamera12MaskScaleYAnimation.duration = 1.425
		frameCamera12MaskScaleYAnimation.values = [0.650, 0.650, 0.416, 0.196] as [Float]
		frameCamera12MaskScaleYAnimation.keyTimes = [0.000, 0.789, 0.912, 1.000] as [NSNumber]
		frameCamera12MaskScaleYAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		frameCamera12MaskScaleYAnimation.beginTime = beginTime
		frameCamera12MaskScaleYAnimation.fillMode = fillMode
		frameCamera12MaskScaleYAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["frame_camera-12_mask__yScale"]?.layer.add(frameCamera12MaskScaleYAnimation, forKey:"Camera_Animation_reversed_ScaleY")

		let frameCamera12MaskTranslationXAnimation = CAKeyframeAnimation(keyPath: "transform.translation.x")
		frameCamera12MaskTranslationXAnimation.duration = 1.425
		frameCamera12MaskTranslationXAnimation.values = [203.300, 203.300, 69.272, 0.000] as [Float]
		frameCamera12MaskTranslationXAnimation.keyTimes = [0.000, 0.789, 0.912, 1.000] as [NSNumber]
		frameCamera12MaskTranslationXAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		frameCamera12MaskTranslationXAnimation.beginTime = beginTime
		frameCamera12MaskTranslationXAnimation.fillMode = fillMode
		frameCamera12MaskTranslationXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["frame_camera-12_mask__root"]?.layer.add(frameCamera12MaskTranslationXAnimation, forKey:"Camera_Animation_reversed_TranslationX")

		let frameCamera12MaskTranslationYAnimation = CAKeyframeAnimation(keyPath: "transform.translation.y")
		frameCamera12MaskTranslationYAnimation.duration = 1.425
		frameCamera12MaskTranslationYAnimation.values = [-300.841, -300.841, -106.597, 0.000] as [Float]
		frameCamera12MaskTranslationYAnimation.keyTimes = [0.000, 0.789, 0.912, 1.000] as [NSNumber]
		frameCamera12MaskTranslationYAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		frameCamera12MaskTranslationYAnimation.beginTime = beginTime
		frameCamera12MaskTranslationYAnimation.fillMode = fillMode
		frameCamera12MaskTranslationYAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["frame_camera-12_mask__root"]?.layer.add(frameCamera12MaskTranslationYAnimation, forKey:"Camera_Animation_reversed_TranslationY")

		let homeArrows03OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		homeArrows03OpacityAnimation.duration = 1.425
		homeArrows03OpacityAnimation.values = [1.000, 1.000, 0.000, 0.000] as [Float]
		homeArrows03OpacityAnimation.keyTimes = [0.000, 0.070, 0.140, 1.000] as [NSNumber]
		homeArrows03OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		homeArrows03OpacityAnimation.beginTime = beginTime
		homeArrows03OpacityAnimation.fillMode = fillMode
		homeArrows03OpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Home_Arrows-03__root"]?.layer.add(homeArrows03OpacityAnimation, forKey:"Camera_Animation_reversed_Opacity")

		let vCmenu01OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		vCmenu01OpacityAnimation.duration = 1.425
		vCmenu01OpacityAnimation.values = [1.000, 1.000, 0.000, 0.000] as [Float]
		vCmenu01OpacityAnimation.keyTimes = [0.000, 0.088, 0.158, 1.000] as [NSNumber]
		vCmenu01OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		vCmenu01OpacityAnimation.beginTime = beginTime
		vCmenu01OpacityAnimation.fillMode = fillMode
		vCmenu01OpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["VCmenu-01__root"]?.layer.add(vCmenu01OpacityAnimation, forKey:"Camera_Animation_reversed_Opacity")

		let cameraPlusOpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		cameraPlusOpacityAnimation.duration = 1.425
		cameraPlusOpacityAnimation.values = [1.000, 0.000, 0.000] as [Float]
		cameraPlusOpacityAnimation.keyTimes = [0.000, 0.070, 1.000] as [NSNumber]
		cameraPlusOpacityAnimation.timingFunctions = [linearTiming, linearTiming]
		cameraPlusOpacityAnimation.beginTime = beginTime
		cameraPlusOpacityAnimation.fillMode = fillMode
		cameraPlusOpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Camera_plus__root"]?.layer.add(cameraPlusOpacityAnimation, forKey:"Camera_Animation_reversed_Opacity")

		let linesCamera19MaskRotationAnimation = CAKeyframeAnimation(keyPath: "transform.rotation.z")
		linesCamera19MaskRotationAnimation.duration = 1.425
		linesCamera19MaskRotationAnimation.values = [5.503, 5.503, 5.503, 0.000, 5.420, 5.420, 5.420] as [Float]
		linesCamera19MaskRotationAnimation.keyTimes = [0.000, 0.439, 0.439, 0.439, 0.649, 0.719, 1.000] as [NSNumber]
		linesCamera19MaskRotationAnimation.timingFunctions = [linearTiming, instantTiming, instantTiming, linearTiming, linearTiming, linearTiming]
		linesCamera19MaskRotationAnimation.beginTime = beginTime
		linesCamera19MaskRotationAnimation.fillMode = fillMode
		linesCamera19MaskRotationAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Lines_camera-19_mask__root"]?.layer.add(linesCamera19MaskRotationAnimation, forKey:"Camera_Animation_reversed_Rotation")

		let linesCamera19MaskScaleXAnimation = CAKeyframeAnimation(keyPath: "transform.scale.x")
		linesCamera19MaskScaleXAnimation.duration = 1.425
		linesCamera19MaskScaleXAnimation.values = [1.322, 1.322, 0.855, 0.516, 0.197, 0.197, 0.197] as [Float]
		linesCamera19MaskScaleXAnimation.keyTimes = [0.000, 0.088, 0.228, 0.333, 0.439, 0.719, 1.000] as [NSNumber]
		linesCamera19MaskScaleXAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming]
		linesCamera19MaskScaleXAnimation.beginTime = beginTime
		linesCamera19MaskScaleXAnimation.fillMode = fillMode
		linesCamera19MaskScaleXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Lines_camera-19_mask__xScale"]?.layer.add(linesCamera19MaskScaleXAnimation, forKey:"Camera_Animation_reversed_ScaleX")

		let linesCamera19MaskTranslationXAnimation = CAKeyframeAnimation(keyPath: "transform.translation.x")
		linesCamera19MaskTranslationXAnimation.duration = 1.425
		linesCamera19MaskTranslationXAnimation.values = [1343.183, 1343.183, 980.513, 711.663, 616.547, 388.584, 151.914, 144.818, 46.948, 34.370, 0.000, 0.000] as [Float]
		linesCamera19MaskTranslationXAnimation.keyTimes = [0.000, 0.088, 0.123, 0.228, 0.263, 0.333, 0.439, 0.474, 0.544, 0.649, 0.719, 1.000] as [NSNumber]
		linesCamera19MaskTranslationXAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming]
		linesCamera19MaskTranslationXAnimation.beginTime = beginTime
		linesCamera19MaskTranslationXAnimation.fillMode = fillMode
		linesCamera19MaskTranslationXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Lines_camera-19_mask__root"]?.layer.add(linesCamera19MaskTranslationXAnimation, forKey:"Camera_Animation_reversed_TranslationX")

		let linesCamera19MaskTranslationYAnimation = CAKeyframeAnimation(keyPath: "transform.translation.y")
		linesCamera19MaskTranslationYAnimation.duration = 1.425
		linesCamera19MaskTranslationYAnimation.values = [-1059.283, -1059.283, -717.284, -475.053, -386.872, -176.557, 37.521, 50.346, -16.784, -45.750, 0.000, 0.000] as [Float]
		linesCamera19MaskTranslationYAnimation.keyTimes = [0.000, 0.088, 0.123, 0.228, 0.263, 0.333, 0.439, 0.474, 0.544, 0.649, 0.719, 1.000] as [NSNumber]
		linesCamera19MaskTranslationYAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming]
		linesCamera19MaskTranslationYAnimation.beginTime = beginTime
		linesCamera19MaskTranslationYAnimation.fillMode = fillMode
		linesCamera19MaskTranslationYAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Lines_camera-19_mask__root"]?.layer.add(linesCamera19MaskTranslationYAnimation, forKey:"Camera_Animation_reversed_TranslationY")

		let menuIcons01ScaleXAnimation = CAKeyframeAnimation(keyPath: "transform.scale.x")
		menuIcons01ScaleXAnimation.duration = 1.425
		menuIcons01ScaleXAnimation.values = [0.150, 0.150, 0.240] as [Float]
		menuIcons01ScaleXAnimation.keyTimes = [0.000, 0.754, 1.000] as [NSNumber]
		menuIcons01ScaleXAnimation.timingFunctions = [linearTiming, linearTiming]
		menuIcons01ScaleXAnimation.beginTime = beginTime
		menuIcons01ScaleXAnimation.fillMode = fillMode
		menuIcons01ScaleXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["menu_icons-01__xScale"]?.layer.add(menuIcons01ScaleXAnimation, forKey:"Camera_Animation_reversed_ScaleX")

		let menuIcons01ScaleYAnimation = CAKeyframeAnimation(keyPath: "transform.scale.y")
		menuIcons01ScaleYAnimation.duration = 1.425
		menuIcons01ScaleYAnimation.values = [0.150, 0.150, 0.240] as [Float]
		menuIcons01ScaleYAnimation.keyTimes = [0.000, 0.754, 1.000] as [NSNumber]
		menuIcons01ScaleYAnimation.timingFunctions = [linearTiming, linearTiming]
		menuIcons01ScaleYAnimation.beginTime = beginTime
		menuIcons01ScaleYAnimation.fillMode = fillMode
		menuIcons01ScaleYAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["menu_icons-01__yScale"]?.layer.add(menuIcons01ScaleYAnimation, forKey:"Camera_Animation_reversed_ScaleY")

		let menuIcons01TranslationXAnimation = CAKeyframeAnimation(keyPath: "transform.translation.x")
		menuIcons01TranslationXAnimation.duration = 1.425
		menuIcons01TranslationXAnimation.values = [-48.550, -48.550, 0.000] as [Float]
		menuIcons01TranslationXAnimation.keyTimes = [0.000, 0.754, 1.000] as [NSNumber]
		menuIcons01TranslationXAnimation.timingFunctions = [linearTiming, linearTiming]
		menuIcons01TranslationXAnimation.beginTime = beginTime
		menuIcons01TranslationXAnimation.fillMode = fillMode
		menuIcons01TranslationXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["menu_icons-01__root"]?.layer.add(menuIcons01TranslationXAnimation, forKey:"Camera_Animation_reversed_TranslationX")

		let menuIcons01TranslationYAnimation = CAKeyframeAnimation(keyPath: "transform.translation.y")
		menuIcons01TranslationYAnimation.duration = 1.425
		menuIcons01TranslationYAnimation.values = [236.449, 236.449, 0.000] as [Float]
		menuIcons01TranslationYAnimation.keyTimes = [0.000, 0.754, 1.000] as [NSNumber]
		menuIcons01TranslationYAnimation.timingFunctions = [linearTiming, linearTiming]
		menuIcons01TranslationYAnimation.beginTime = beginTime
		menuIcons01TranslationYAnimation.fillMode = fillMode
		menuIcons01TranslationYAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["menu_icons-01__root"]?.layer.add(menuIcons01TranslationYAnimation, forKey:"Camera_Animation_reversed_TranslationY")

		let linesCamera193MaskOpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		linesCamera193MaskOpacityAnimation.duration = 1.425
		linesCamera193MaskOpacityAnimation.values = [1.000, 1.000, 1.000, 0.000, 0.000] as [Float]
		linesCamera193MaskOpacityAnimation.keyTimes = [0.000, 0.272, 0.272, 0.272, 1.000] as [NSNumber]
		linesCamera193MaskOpacityAnimation.timingFunctions = [linearTiming, instantTiming, instantTiming, linearTiming]
		linesCamera193MaskOpacityAnimation.beginTime = beginTime
		linesCamera193MaskOpacityAnimation.fillMode = fillMode
		linesCamera193MaskOpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Lines_camera-19_3_mask__root"]?.layer.add(linesCamera193MaskOpacityAnimation, forKey:"Camera_Animation_reversed_Opacity")

		let linesCamera193MaskScaleXAnimation = CAKeyframeAnimation(keyPath: "transform.scale.x")
		linesCamera193MaskScaleXAnimation.duration = 1.425
		linesCamera193MaskScaleXAnimation.values = [1.183, 1.183, 1.001, -0.005, -0.005] as [Float]
		linesCamera193MaskScaleXAnimation.keyTimes = [0.000, 0.214, 0.235, 0.270, 1.000] as [NSNumber]
		linesCamera193MaskScaleXAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming]
		linesCamera193MaskScaleXAnimation.beginTime = beginTime
		linesCamera193MaskScaleXAnimation.fillMode = fillMode
		linesCamera193MaskScaleXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Lines_camera-19_3_mask__xScale"]?.layer.add(linesCamera193MaskScaleXAnimation, forKey:"Camera_Animation_reversed_ScaleX")

		let linesCamera193MaskScaleYAnimation = CAKeyframeAnimation(keyPath: "transform.scale.y")
		linesCamera193MaskScaleYAnimation.duration = 1.425
		linesCamera193MaskScaleYAnimation.values = [1.135, 1.135, 0.988] as [Float]
		linesCamera193MaskScaleYAnimation.keyTimes = [0.000, 0.214, 1.000] as [NSNumber]
		linesCamera193MaskScaleYAnimation.timingFunctions = [linearTiming, linearTiming]
		linesCamera193MaskScaleYAnimation.beginTime = beginTime
		linesCamera193MaskScaleYAnimation.fillMode = fillMode
		linesCamera193MaskScaleYAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Lines_camera-19_3_mask__yScale"]?.layer.add(linesCamera193MaskScaleYAnimation, forKey:"Camera_Animation_reversed_ScaleY")

		let linesCamera193MaskTranslationXAnimation = CAKeyframeAnimation(keyPath: "transform.translation.x")
		linesCamera193MaskTranslationXAnimation.duration = 1.425
		linesCamera193MaskTranslationXAnimation.values = [-992.677, -992.677, -681.989, -489.536, -223.948, 0.000, 0.000] as [Float]
		linesCamera193MaskTranslationXAnimation.keyTimes = [0.000, 0.137, 0.172, 0.214, 0.235, 0.270, 1.000] as [NSNumber]
		linesCamera193MaskTranslationXAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming]
		linesCamera193MaskTranslationXAnimation.beginTime = beginTime
		linesCamera193MaskTranslationXAnimation.fillMode = fillMode
		linesCamera193MaskTranslationXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Lines_camera-19_3_mask__root"]?.layer.add(linesCamera193MaskTranslationXAnimation, forKey:"Camera_Animation_reversed_TranslationX")

		let linesCamera193MaskTranslationYAnimation = CAKeyframeAnimation(keyPath: "transform.translation.y")
		linesCamera193MaskTranslationYAnimation.duration = 1.425
		linesCamera193MaskTranslationYAnimation.values = [-437.083, -437.083, -406.583, -320.606, -193.641, 0.000, 0.000] as [Float]
		linesCamera193MaskTranslationYAnimation.keyTimes = [0.000, 0.137, 0.172, 0.214, 0.235, 0.270, 1.000] as [NSNumber]
		linesCamera193MaskTranslationYAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming]
		linesCamera193MaskTranslationYAnimation.beginTime = beginTime
		linesCamera193MaskTranslationYAnimation.fillMode = fillMode
		linesCamera193MaskTranslationYAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Lines_camera-19_3_mask__root"]?.layer.add(linesCamera193MaskTranslationYAnimation, forKey:"Camera_Animation_reversed_TranslationY")

		let homeArrows04OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		homeArrows04OpacityAnimation.duration = 1.425
		homeArrows04OpacityAnimation.values = [1.000, 1.000, 0.000, 0.000] as [Float]
		homeArrows04OpacityAnimation.keyTimes = [0.000, 0.088, 0.158, 1.000] as [NSNumber]
		homeArrows04OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		homeArrows04OpacityAnimation.beginTime = beginTime
		homeArrows04OpacityAnimation.fillMode = fillMode
		homeArrows04OpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Home_Arrows-04__root"]?.layer.add(homeArrows04OpacityAnimation, forKey:"Camera_Animation_reversed_Opacity")

		let circle01MaskTranslationXAnimation = CAKeyframeAnimation(keyPath: "transform.translation.x")
		circle01MaskTranslationXAnimation.duration = 1.425
		circle01MaskTranslationXAnimation.values = [288.047, 288.047, 0.000, 0.000] as [Float]
		circle01MaskTranslationXAnimation.keyTimes = [0.000, 0.702, 0.877, 1.000] as [NSNumber]
		circle01MaskTranslationXAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		circle01MaskTranslationXAnimation.beginTime = beginTime
		circle01MaskTranslationXAnimation.fillMode = fillMode
		circle01MaskTranslationXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Circle-01_mask__root"]?.layer.add(circle01MaskTranslationXAnimation, forKey:"Camera_Animation_reversed_TranslationX")

		let circle01MaskTranslationYAnimation = CAKeyframeAnimation(keyPath: "transform.translation.y")
		circle01MaskTranslationYAnimation.duration = 1.425
		circle01MaskTranslationYAnimation.values = [-512.330, -512.330, 0.000, 0.000] as [Float]
		circle01MaskTranslationYAnimation.keyTimes = [0.000, 0.702, 0.877, 1.000] as [NSNumber]
		circle01MaskTranslationYAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		circle01MaskTranslationYAnimation.beginTime = beginTime
		circle01MaskTranslationYAnimation.fillMode = fillMode
		circle01MaskTranslationYAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Circle-01_mask__root"]?.layer.add(circle01MaskTranslationYAnimation, forKey:"Camera_Animation_reversed_TranslationY")

		let homeArrows05OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		homeArrows05OpacityAnimation.duration = 1.425
		homeArrows05OpacityAnimation.values = [1.000, 1.000, 0.000, 0.000] as [Float]
		homeArrows05OpacityAnimation.keyTimes = [0.000, 0.193, 0.263, 1.000] as [NSNumber]
		homeArrows05OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		homeArrows05OpacityAnimation.beginTime = beginTime
		homeArrows05OpacityAnimation.fillMode = fillMode
		homeArrows05OpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Home_Arrows-05__root"]?.layer.add(homeArrows05OpacityAnimation, forKey:"Camera_Animation_reversed_Opacity")

		let linesCamera191MaskOpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		linesCamera191MaskOpacityAnimation.duration = 1.425
		linesCamera191MaskOpacityAnimation.values = [1.000, 1.000, 1.000, 0.000, 0.000, 0.000, 20.000, 1.000, 1.000, 0.000, 0.000] as [Float]
		linesCamera191MaskOpacityAnimation.keyTimes = [0.000, 0.200, 0.200, 0.201, 0.242, 0.242, 0.243, 0.333, 0.334, 0.334, 1.000] as [NSNumber]
		linesCamera191MaskOpacityAnimation.timingFunctions = [linearTiming, instantTiming, instantTiming, linearTiming, instantTiming, instantTiming, linearTiming, instantTiming, instantTiming, linearTiming]
		linesCamera191MaskOpacityAnimation.beginTime = beginTime
		linesCamera191MaskOpacityAnimation.fillMode = fillMode
		linesCamera191MaskOpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Lines_camera-19_1_mask__root"]?.layer.add(linesCamera191MaskOpacityAnimation, forKey:"Camera_Animation_reversed_Opacity")

		let linesCamera191MaskScaleYAnimation = CAKeyframeAnimation(keyPath: "transform.scale.y")
		linesCamera191MaskScaleYAnimation.duration = 1.425
		linesCamera191MaskScaleYAnimation.values = [-0.439, -0.439, -0.089, -0.089, -0.089, 6.530, 0.326, 0.000, 0.000] as [Float]
		linesCamera191MaskScaleYAnimation.keyTimes = [0.000, 0.151, 0.200, 0.242, 0.242, 0.243, 0.291, 0.333, 1.000] as [NSNumber]
		linesCamera191MaskScaleYAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, instantTiming, instantTiming, linearTiming, linearTiming, linearTiming]
		linesCamera191MaskScaleYAnimation.beginTime = beginTime
		linesCamera191MaskScaleYAnimation.fillMode = fillMode
		linesCamera191MaskScaleYAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Lines_camera-19_1_mask__yScale"]?.layer.add(linesCamera191MaskScaleYAnimation, forKey:"Camera_Animation_reversed_ScaleY")

		let linesCamera191MaskTranslationXAnimation = CAKeyframeAnimation(keyPath: "transform.translation.x")
		linesCamera191MaskTranslationXAnimation.duration = 1.425
		linesCamera191MaskTranslationXAnimation.values = [966.183, 966.183, 819.553, 819.553, 819.553, 627.595, 627.595, 431.413, 431.413, 431.413, -200.375, -200.375, -93.305, 0.000, 0.000] as [Float]
		linesCamera191MaskTranslationXAnimation.keyTimes = [0.000, 0.053, 0.109, 0.116, 0.116, 0.116, 0.123, 0.200, 0.242, 0.242, 0.243, 0.249, 0.291, 0.333, 1.000] as [NSNumber]
		linesCamera191MaskTranslationXAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, instantTiming, instantTiming, linearTiming, linearTiming, linearTiming, instantTiming, instantTiming, linearTiming, linearTiming, linearTiming, linearTiming]
		linesCamera191MaskTranslationXAnimation.beginTime = beginTime
		linesCamera191MaskTranslationXAnimation.fillMode = fillMode
		linesCamera191MaskTranslationXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Lines_camera-19_1_mask__root"]?.layer.add(linesCamera191MaskTranslationXAnimation, forKey:"Camera_Animation_reversed_TranslationX")

		let linesCamera191MaskTranslationYAnimation = CAKeyframeAnimation(keyPath: "transform.translation.y")
		linesCamera191MaskTranslationYAnimation.duration = 1.425
		linesCamera191MaskTranslationYAnimation.values = [-435.083, -435.083, -600.515, -600.515, -600.515, -131.921, -131.921, -351.765, -351.765, -351.765, -211.785, -211.785, -107.933, 0.000, 0.000] as [Float]
		linesCamera191MaskTranslationYAnimation.keyTimes = [0.000, 0.053, 0.109, 0.116, 0.116, 0.116, 0.123, 0.200, 0.242, 0.242, 0.243, 0.249, 0.291, 0.333, 1.000] as [NSNumber]
		linesCamera191MaskTranslationYAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, instantTiming, instantTiming, linearTiming, linearTiming, linearTiming, instantTiming, instantTiming, linearTiming, linearTiming, linearTiming, linearTiming]
		linesCamera191MaskTranslationYAnimation.beginTime = beginTime
		linesCamera191MaskTranslationYAnimation.fillMode = fillMode
		linesCamera191MaskTranslationYAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Lines_camera-19_1_mask__root"]?.layer.add(linesCamera191MaskTranslationYAnimation, forKey:"Camera_Animation_reversed_TranslationY")

		let homeArrows01OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		homeArrows01OpacityAnimation.duration = 1.425
		homeArrows01OpacityAnimation.values = [1.000, 1.000, 0.000, 0.000] as [Float]
		homeArrows01OpacityAnimation.keyTimes = [0.000, 0.193, 0.263, 1.000] as [NSNumber]
		homeArrows01OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		homeArrows01OpacityAnimation.beginTime = beginTime
		homeArrows01OpacityAnimation.fillMode = fillMode
		homeArrows01OpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Home_Arrows-01__root"]?.layer.add(homeArrows01OpacityAnimation, forKey:"Camera_Animation_reversed_Opacity")
	}

	func removeCameraAnimationReversedAnimation() {
		self.layer.removeAnimation(forKey: "CameraAnimationReversed")
		self.viewsByName["menu_icons-03__xScale"]?.layer.removeAnimation(forKey: "Camera_Animation_reversed_ScaleX")
		self.viewsByName["menu_icons-03__yScale"]?.layer.removeAnimation(forKey: "Camera_Animation_reversed_ScaleY")
		self.viewsByName["menu_icons-03__root"]?.layer.removeAnimation(forKey: "Camera_Animation_reversed_TranslationX")
		self.viewsByName["menu_icons-03__root"]?.layer.removeAnimation(forKey: "Camera_Animation_reversed_TranslationY")
		self.viewsByName["zoom-01__root"]?.layer.removeAnimation(forKey: "Camera_Animation_reversed_Opacity")
		self.viewsByName["Camera_minus__root"]?.layer.removeAnimation(forKey: "Camera_Animation_reversed_Opacity")
		self.viewsByName["Lines_camera-19_2_mask__root"]?.layer.removeAnimation(forKey: "Camera_Animation_reversed_Rotation")
		self.viewsByName["Lines_camera-19_2_mask__root"]?.layer.removeAnimation(forKey: "Camera_Animation_reversed_Opacity")
		self.viewsByName["Lines_camera-19_2_mask__yScale"]?.layer.removeAnimation(forKey: "Camera_Animation_reversed_ScaleY")
		self.viewsByName["Lines_camera-19_2_mask__root"]?.layer.removeAnimation(forKey: "Camera_Animation_reversed_TranslationX")
		self.viewsByName["Lines_camera-19_2_mask__root"]?.layer.removeAnimation(forKey: "Camera_Animation_reversed_TranslationY")
		self.viewsByName["menu_icons-04__xScale"]?.layer.removeAnimation(forKey: "Camera_Animation_reversed_ScaleX")
		self.viewsByName["menu_icons-04__yScale"]?.layer.removeAnimation(forKey: "Camera_Animation_reversed_ScaleY")
		self.viewsByName["menu_icons-04__root"]?.layer.removeAnimation(forKey: "Camera_Animation_reversed_TranslationX")
		self.viewsByName["menu_icons-04__root"]?.layer.removeAnimation(forKey: "Camera_Animation_reversed_TranslationY")
		self.viewsByName["frame_camera-12_mask__yScale"]?.layer.removeAnimation(forKey: "Camera_Animation_reversed_ScaleY")
		self.viewsByName["frame_camera-12_mask__root"]?.layer.removeAnimation(forKey: "Camera_Animation_reversed_TranslationX")
		self.viewsByName["frame_camera-12_mask__root"]?.layer.removeAnimation(forKey: "Camera_Animation_reversed_TranslationY")
		self.viewsByName["Home_Arrows-03__root"]?.layer.removeAnimation(forKey: "Camera_Animation_reversed_Opacity")
		self.viewsByName["VCmenu-01__root"]?.layer.removeAnimation(forKey: "Camera_Animation_reversed_Opacity")
		self.viewsByName["Camera_plus__root"]?.layer.removeAnimation(forKey: "Camera_Animation_reversed_Opacity")
		self.viewsByName["Lines_camera-19_mask__root"]?.layer.removeAnimation(forKey: "Camera_Animation_reversed_Rotation")
		self.viewsByName["Lines_camera-19_mask__xScale"]?.layer.removeAnimation(forKey: "Camera_Animation_reversed_ScaleX")
		self.viewsByName["Lines_camera-19_mask__root"]?.layer.removeAnimation(forKey: "Camera_Animation_reversed_TranslationX")
		self.viewsByName["Lines_camera-19_mask__root"]?.layer.removeAnimation(forKey: "Camera_Animation_reversed_TranslationY")
		self.viewsByName["menu_icons-01__xScale"]?.layer.removeAnimation(forKey: "Camera_Animation_reversed_ScaleX")
		self.viewsByName["menu_icons-01__yScale"]?.layer.removeAnimation(forKey: "Camera_Animation_reversed_ScaleY")
		self.viewsByName["menu_icons-01__root"]?.layer.removeAnimation(forKey: "Camera_Animation_reversed_TranslationX")
		self.viewsByName["menu_icons-01__root"]?.layer.removeAnimation(forKey: "Camera_Animation_reversed_TranslationY")
		self.viewsByName["Lines_camera-19_3_mask__root"]?.layer.removeAnimation(forKey: "Camera_Animation_reversed_Opacity")
		self.viewsByName["Lines_camera-19_3_mask__xScale"]?.layer.removeAnimation(forKey: "Camera_Animation_reversed_ScaleX")
		self.viewsByName["Lines_camera-19_3_mask__yScale"]?.layer.removeAnimation(forKey: "Camera_Animation_reversed_ScaleY")
		self.viewsByName["Lines_camera-19_3_mask__root"]?.layer.removeAnimation(forKey: "Camera_Animation_reversed_TranslationX")
		self.viewsByName["Lines_camera-19_3_mask__root"]?.layer.removeAnimation(forKey: "Camera_Animation_reversed_TranslationY")
		self.viewsByName["Home_Arrows-04__root"]?.layer.removeAnimation(forKey: "Camera_Animation_reversed_Opacity")
		self.viewsByName["Circle-01_mask__root"]?.layer.removeAnimation(forKey: "Camera_Animation_reversed_TranslationX")
		self.viewsByName["Circle-01_mask__root"]?.layer.removeAnimation(forKey: "Camera_Animation_reversed_TranslationY")
		self.viewsByName["Home_Arrows-05__root"]?.layer.removeAnimation(forKey: "Camera_Animation_reversed_Opacity")
		self.viewsByName["Lines_camera-19_1_mask__root"]?.layer.removeAnimation(forKey: "Camera_Animation_reversed_Opacity")
		self.viewsByName["Lines_camera-19_1_mask__yScale"]?.layer.removeAnimation(forKey: "Camera_Animation_reversed_ScaleY")
		self.viewsByName["Lines_camera-19_1_mask__root"]?.layer.removeAnimation(forKey: "Camera_Animation_reversed_TranslationX")
		self.viewsByName["Lines_camera-19_1_mask__root"]?.layer.removeAnimation(forKey: "Camera_Animation_reversed_TranslationY")
		self.viewsByName["Home_Arrows-01__root"]?.layer.removeAnimation(forKey: "Camera_Animation_reversed_Opacity")
	}

	// MARK: CAAnimationDelegate
	func animationDidStop(_ anim: CAAnimation, finished flag: Bool) {
		if let completion = self.animationCompletions[anim] {
			self.animationCompletions.removeValue(forKey: anim)
			completion(flag)
		}
	}

	func removeAllAnimations() {
		for subview in viewsByName.values {
			subview.layer.removeAllAnimations()
		}
		self.layer.removeAnimation(forKey: "CameraAnimation")
		self.layer.removeAnimation(forKey: "CameraAnimationReversed")
	}
}