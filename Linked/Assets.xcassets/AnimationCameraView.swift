//
// AnimationCameraView.swift
// Generated by Core Animator version 1.5 on 10/17/17.
//
// DO NOT MODIFY THIS FILE. IT IS AUTO-GENERATED AND WILL BE OVERWRITTEN
//

import UIKit

private class _AnimationCameraPassthroughView: UIView {
    override func point(inside point: CGPoint, with event: UIEvent?) -> Bool {
        for subview in subviews as [UIView] {
            if subview.point(inside: convert(point, to: subview), with: event) { return true }
        }
        return false
    }
}

@IBDesignable
class AnimationCameraView : UIView, CAAnimationDelegate {


	var animationCompletions = Dictionary<CAAnimation, (Bool) -> Void>()
	var viewsByName: [String : UIView]!

	// - MARK: Life Cycle

	convenience init() {
		self.init(frame: CGRect(x: 0, y: 0, width: 8942, height: 7346))
	}

	override init(frame: CGRect) {
		super.init(frame: frame)
		self.setupHierarchy()
	}

	required init?(coder aDecoder: NSCoder) {
		super.init(coder: aDecoder)
		self.setupHierarchy()
	}

	// - MARK: Scaling

	override func layoutSubviews() {
		super.layoutSubviews()

		if let scalingView = self.viewsByName["__scaling__"] {
			var xScale = self.bounds.size.width / scalingView.bounds.size.width
			var yScale = self.bounds.size.height / scalingView.bounds.size.height
			switch contentMode {
			case .scaleToFill:
				break
			case .scaleAspectFill:
				let scale = max(xScale, yScale)
				xScale = scale
				yScale = scale
			default:
				let scale = min(xScale, yScale)
				xScale = scale
				yScale = scale
			}
			scalingView.transform = CGAffineTransform(scaleX: xScale, y: yScale)
			scalingView.center = CGPoint(x:self.bounds.midX, y:self.bounds.midY)
		}
	}

	// - MARK: Setup

	func setupHierarchy() {
		var viewsByName: [String : UIView] = [:]
		let bundle = Bundle(for:type(of: self))
		let __scaling__ = UIView()
		__scaling__.bounds = CGRect(x:0, y:0, width:8942, height:7346)
		__scaling__.center = CGPoint(x:4471.4, y:3673.3)
		__scaling__.clipsToBounds = true
		self.addSubview(__scaling__)
		viewsByName["__scaling__"] = __scaling__

		let icon02Menu01__root = _AnimationCameraPassthroughView()
		let icon02Menu01__xScale = _AnimationCameraPassthroughView()
		let icon02Menu01__yScale = _AnimationCameraPassthroughView()
		let icon02Menu01 = UIImageView()
		let imgIcon02Menu01 = UIImage(named:"icon_02_menu-01.png", in: bundle, compatibleWith: nil)
		if imgIcon02Menu01 == nil {
			print("** Warning: Could not create image from 'icon_02_menu-01.png'")
		}
		icon02Menu01.image = imgIcon02Menu01
		icon02Menu01.contentMode = .center
		icon02Menu01.bounds = CGRect(x:0, y:0, width:2917.0, height:2917.0)
		icon02Menu01__root.layer.position = CGPoint(x:1742.771, y:5546.911)
		icon02Menu01__xScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		icon02Menu01__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		icon02Menu01__root.transform = CGAffineTransform(rotationAngle: 0.000)
		icon02Menu01__root.addSubview(icon02Menu01__xScale)
		icon02Menu01__xScale.addSubview(icon02Menu01__yScale)
		icon02Menu01__yScale.addSubview(icon02Menu01)
		__scaling__.addSubview(icon02Menu01__root)
		viewsByName["icon_02_menu-01__root"] = icon02Menu01__root
		viewsByName["icon_02_menu-01__xScale"] = icon02Menu01__xScale
		viewsByName["icon_02_menu-01__yScale"] = icon02Menu01__yScale
		viewsByName["icon_02_menu-01"] = icon02Menu01

		let icon01Power__root = _AnimationCameraPassthroughView()
		let icon01Power__xScale = _AnimationCameraPassthroughView()
		let icon01Power__yScale = _AnimationCameraPassthroughView()
		let icon01Power = UIImageView()
		let imgIcon01Power = UIImage(named:"icon_01_power_.png", in: bundle, compatibleWith: nil)
		if imgIcon01Power == nil {
			print("** Warning: Could not create image from 'icon_01_power_.png'")
		}
		icon01Power.image = imgIcon01Power
		icon01Power.contentMode = .center
		icon01Power.bounds = CGRect(x:0, y:0, width:1357.0, height:1391.0)
		icon01Power__root.layer.position = CGPoint(x:702.931, y:6597.696)
		icon01Power__xScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		icon01Power__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		icon01Power__root.transform = CGAffineTransform(rotationAngle: 0.000)
		icon01Power__root.addSubview(icon01Power__xScale)
		icon01Power__xScale.addSubview(icon01Power__yScale)
		icon01Power__yScale.addSubview(icon01Power)
		__scaling__.addSubview(icon01Power__root)
		viewsByName["icon_01_power___root"] = icon01Power__root
		viewsByName["icon_01_power___xScale"] = icon01Power__xScale
		viewsByName["icon_01_power___yScale"] = icon01Power__yScale
		viewsByName["icon_01_power_"] = icon01Power

		let menuIcons011__root = _AnimationCameraPassthroughView()
		let menuIcons011__xScale = _AnimationCameraPassthroughView()
		let menuIcons011__yScale = _AnimationCameraPassthroughView()
		let menuIcons011 = UIImageView()
		let imgMenuIcons011 = UIImage(named:"menu_icons-01_1.png", in: bundle, compatibleWith: nil)
		if imgMenuIcons011 == nil {
			print("** Warning: Could not create image from 'menu_icons-01_1.png'")
		}
		menuIcons011.image = imgMenuIcons011
		menuIcons011.contentMode = .center
		menuIcons011.bounds = CGRect(x:0, y:0, width:642.0, height:642.0)
		menuIcons011__root.layer.position = CGPoint(x:935.863, y:4649.082)
		menuIcons011__xScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		menuIcons011__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		menuIcons011__root.transform = CGAffineTransform(rotationAngle: 0.000)
		menuIcons011__root.addSubview(menuIcons011__xScale)
		menuIcons011__xScale.addSubview(menuIcons011__yScale)
		menuIcons011__yScale.addSubview(menuIcons011)
		__scaling__.addSubview(menuIcons011__root)
		viewsByName["menu_icons-01_1__root"] = menuIcons011__root
		viewsByName["menu_icons-01_1__xScale"] = menuIcons011__xScale
		viewsByName["menu_icons-01_1__yScale"] = menuIcons011__yScale
		viewsByName["menu_icons-01_1"] = menuIcons011

		let menuIcons02__root = _AnimationCameraPassthroughView()
		let menuIcons02__xScale = _AnimationCameraPassthroughView()
		let menuIcons02__yScale = _AnimationCameraPassthroughView()
		let menuIcons02 = UIImageView()
		let imgMenuIcons02 = UIImage(named:"menu_icons-02.png", in: bundle, compatibleWith: nil)
		if imgMenuIcons02 == nil {
			print("** Warning: Could not create image from 'menu_icons-02.png'")
		}
		menuIcons02.image = imgMenuIcons02
		menuIcons02.contentMode = .center
		menuIcons02.bounds = CGRect(x:0, y:0, width:642.0, height:642.0)
		menuIcons02__root.layer.position = CGPoint(x:1724.627, y:4980.394)
		menuIcons02__xScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		menuIcons02__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		menuIcons02__root.transform = CGAffineTransform(rotationAngle: 0.000)
		menuIcons02__root.addSubview(menuIcons02__xScale)
		menuIcons02__xScale.addSubview(menuIcons02__yScale)
		menuIcons02__yScale.addSubview(menuIcons02)
		__scaling__.addSubview(menuIcons02__root)
		viewsByName["menu_icons-02__root"] = menuIcons02__root
		viewsByName["menu_icons-02__xScale"] = menuIcons02__xScale
		viewsByName["menu_icons-02__yScale"] = menuIcons02__yScale
		viewsByName["menu_icons-02"] = menuIcons02

		let menuIcons03__root = _AnimationCameraPassthroughView()
		let menuIcons03__xScale = _AnimationCameraPassthroughView()
		let menuIcons03__yScale = _AnimationCameraPassthroughView()
		let menuIcons03 = UIImageView()
		let imgMenuIcons03 = UIImage(named:"menu_icons-03.png", in: bundle, compatibleWith: nil)
		if imgMenuIcons03 == nil {
			print("** Warning: Could not create image from 'menu_icons-03.png'")
		}
		menuIcons03.image = imgMenuIcons03
		menuIcons03.contentMode = .center
		menuIcons03.bounds = CGRect(x:0, y:0, width:642.0, height:642.0)
		menuIcons03__root.layer.position = CGPoint(x:2328.623, y:5587.245)
		menuIcons03__xScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		menuIcons03__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		menuIcons03__root.transform = CGAffineTransform(rotationAngle: 0.000)
		menuIcons03__root.addSubview(menuIcons03__xScale)
		menuIcons03__xScale.addSubview(menuIcons03__yScale)
		menuIcons03__yScale.addSubview(menuIcons03)
		__scaling__.addSubview(menuIcons03__root)
		viewsByName["menu_icons-03__root"] = menuIcons03__root
		viewsByName["menu_icons-03__xScale"] = menuIcons03__xScale
		viewsByName["menu_icons-03__yScale"] = menuIcons03__yScale
		viewsByName["menu_icons-03"] = menuIcons03

		let menuIcons04__root = _AnimationCameraPassthroughView()
		let menuIcons04__xScale = _AnimationCameraPassthroughView()
		let menuIcons04__yScale = _AnimationCameraPassthroughView()
		let menuIcons04 = UIImageView()
		let imgMenuIcons04 = UIImage(named:"menu_icons-04.png", in: bundle, compatibleWith: nil)
		if imgMenuIcons04 == nil {
			print("** Warning: Could not create image from 'menu_icons-04.png'")
		}
		menuIcons04.image = imgMenuIcons04
		menuIcons04.contentMode = .center
		menuIcons04.bounds = CGRect(x:0, y:0, width:642.0, height:642.0)
		menuIcons04__root.layer.position = CGPoint(x:2644.899, y:6379.566)
		menuIcons04__xScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		menuIcons04__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		menuIcons04__root.transform = CGAffineTransform(rotationAngle: 0.000)
		menuIcons04__root.addSubview(menuIcons04__xScale)
		menuIcons04__xScale.addSubview(menuIcons04__yScale)
		menuIcons04__yScale.addSubview(menuIcons04)
		__scaling__.addSubview(menuIcons04__root)
		viewsByName["menu_icons-04__root"] = menuIcons04__root
		viewsByName["menu_icons-04__xScale"] = menuIcons04__xScale
		viewsByName["menu_icons-04__yScale"] = menuIcons04__yScale
		viewsByName["menu_icons-04"] = menuIcons04

		let _00012__root = _AnimationCameraPassthroughView()
		let _00012__xScale = _AnimationCameraPassthroughView()
		let _00012__yScale = _AnimationCameraPassthroughView()
		let _00012 = UIImageView()
		let img0001 = UIImage(named:"0001.png", in: bundle, compatibleWith: nil)
		if img0001 == nil {
			print("** Warning: Could not create image from '0001.png'")
		}
		_00012.image = img0001
		_00012.contentMode = .center
		_00012.bounds = CGRect(x:0, y:0, width:420.0, height:420.0)
		_00012__root.layer.position = CGPoint(x:1051.997, y:5864.522)
		_00012__xScale.transform = CGAffineTransform(scaleX: 0.22, y: 1.00)
		_00012__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 0.93)
		_00012__root.transform = CGAffineTransform(rotationAngle: 0.597)
		_00012__root.addSubview(_00012__xScale)
		_00012__xScale.addSubview(_00012__yScale)
		_00012__yScale.addSubview(_00012)
		__scaling__.addSubview(_00012__root)
		viewsByName["0001 2__root"] = _00012__root
		viewsByName["0001 2__xScale"] = _00012__xScale
		viewsByName["0001 2__yScale"] = _00012__yScale
		viewsByName["0001 2"] = _00012

		let _000122__root = _AnimationCameraPassthroughView()
		let _000122__xScale = _AnimationCameraPassthroughView()
		let _000122__yScale = _AnimationCameraPassthroughView()
		let _000122 = UIImageView()
		_000122.image = img0001
		_000122.contentMode = .center
		_000122.bounds = CGRect(x:0, y:0, width:420.0, height:420.0)
		_000122__root.layer.position = CGPoint(x:1118.583, y:5907.454)
		_000122__xScale.transform = CGAffineTransform(scaleX: 0.22, y: 1.00)
		_000122__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 0.93)
		_000122__root.transform = CGAffineTransform(rotationAngle: 0.597)
		_000122__root.addSubview(_000122__xScale)
		_000122__xScale.addSubview(_000122__yScale)
		_000122__yScale.addSubview(_000122)
		__scaling__.addSubview(_000122__root)
		viewsByName["0001 2 2__root"] = _000122__root
		viewsByName["0001 2 2__xScale"] = _000122__xScale
		viewsByName["0001 2 2__yScale"] = _000122__yScale
		viewsByName["0001 2 2"] = _000122

		let _000126__root = _AnimationCameraPassthroughView()
		let _000126__xScale = _AnimationCameraPassthroughView()
		let _000126__yScale = _AnimationCameraPassthroughView()
		let _000126 = UIImageView()
		_000126.image = img0001
		_000126.contentMode = .center
		_000126.bounds = CGRect(x:0, y:0, width:420.0, height:420.0)
		_000126__root.layer.position = CGPoint(x:5412.032, y:2231.239)
		_000126__root.alpha = 0.00
		_000126__xScale.transform = CGAffineTransform(scaleX: 0.09, y: 1.00)
		_000126__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 0.93)
		_000126__root.transform = CGAffineTransform(rotationAngle: 0.801)
		_000126__root.addSubview(_000126__xScale)
		_000126__xScale.addSubview(_000126__yScale)
		_000126__yScale.addSubview(_000126)
		__scaling__.addSubview(_000126__root)
		viewsByName["0001 2 6__root"] = _000126__root
		viewsByName["0001 2 6__xScale"] = _000126__xScale
		viewsByName["0001 2 6__yScale"] = _000126__yScale
		viewsByName["0001 2 6"] = _000126

		let _000127__root = _AnimationCameraPassthroughView()
		let _000127__xScale = _AnimationCameraPassthroughView()
		let _000127__yScale = _AnimationCameraPassthroughView()
		let _000127 = UIImageView()
		_000127.image = img0001
		_000127.contentMode = .center
		_000127.bounds = CGRect(x:0, y:0, width:420.0, height:420.0)
		_000127__root.layer.position = CGPoint(x:5462.032, y:2281.239)
		_000127__root.alpha = 0.00
		_000127__xScale.transform = CGAffineTransform(scaleX: 0.09, y: 1.00)
		_000127__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 0.93)
		_000127__root.transform = CGAffineTransform(rotationAngle: 0.801)
		_000127__root.addSubview(_000127__xScale)
		_000127__xScale.addSubview(_000127__yScale)
		_000127__yScale.addSubview(_000127)
		__scaling__.addSubview(_000127__root)
		viewsByName["0001 2 7__root"] = _000127__root
		viewsByName["0001 2 7__xScale"] = _000127__xScale
		viewsByName["0001 2 7__yScale"] = _000127__yScale
		viewsByName["0001 2 7"] = _000127

		let _000125__root = _AnimationCameraPassthroughView()
		let _000125__xScale = _AnimationCameraPassthroughView()
		let _000125__yScale = _AnimationCameraPassthroughView()
		let _000125 = UIImageView()
		_000125.image = img0001
		_000125.contentMode = .center
		_000125.layer.anchorPoint = CGPoint(x:0.435, y:0.478)
		_000125.bounds = CGRect(x:0, y:0, width:420.0, height:420.0)
		_000125__root.layer.position = CGPoint(x:4585.755, y:2985.859)
		_000125__root.alpha = 0.00
		_000125__xScale.transform = CGAffineTransform(scaleX: -0.17, y: 1.00)
		_000125__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 0.89)
		_000125__root.transform = CGAffineTransform(rotationAngle: 0.801)
		_000125__root.addSubview(_000125__xScale)
		_000125__xScale.addSubview(_000125__yScale)
		_000125__yScale.addSubview(_000125)
		__scaling__.addSubview(_000125__root)
		viewsByName["0001 2 5__root"] = _000125__root
		viewsByName["0001 2 5__xScale"] = _000125__xScale
		viewsByName["0001 2 5__yScale"] = _000125__yScale
		viewsByName["0001 2 5"] = _000125

		let _000123__root = _AnimationCameraPassthroughView()
		let _000123__xScale = _AnimationCameraPassthroughView()
		let _000123__yScale = _AnimationCameraPassthroughView()
		let _000123 = UIImageView()
		_000123.image = img0001
		_000123.contentMode = .center
		_000123.bounds = CGRect(x:0, y:0, width:420.0, height:420.0)
		_000123__root.layer.position = CGPoint(x:3718.641, y:3781.864)
		_000123__root.alpha = 0.00
		_000123__xScale.transform = CGAffineTransform(scaleX: 0.09, y: 1.00)
		_000123__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 0.93)
		_000123__root.transform = CGAffineTransform(rotationAngle: 0.801)
		_000123__root.addSubview(_000123__xScale)
		_000123__xScale.addSubview(_000123__yScale)
		_000123__yScale.addSubview(_000123)
		__scaling__.addSubview(_000123__root)
		viewsByName["0001 2 3__root"] = _000123__root
		viewsByName["0001 2 3__xScale"] = _000123__xScale
		viewsByName["0001 2 3__yScale"] = _000123__yScale
		viewsByName["0001 2 3"] = _000123

		let _000124__root = _AnimationCameraPassthroughView()
		let _000124__xScale = _AnimationCameraPassthroughView()
		let _000124__yScale = _AnimationCameraPassthroughView()
		let _000124 = UIImageView()
		_000124.image = img0001
		_000124.contentMode = .center
		_000124.layer.anchorPoint = CGPoint(x:1.436, y:0.485)
		_000124.bounds = CGRect(x:0, y:0, width:420.0, height:420.0)
		_000124__root.layer.position = CGPoint(x:3791.453, y:3844.922)
		_000124__root.alpha = 0.00
		_000124__xScale.transform = CGAffineTransform(scaleX: 0.09, y: 1.00)
		_000124__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 0.93)
		_000124__root.transform = CGAffineTransform(rotationAngle: 0.801)
		_000124__root.addSubview(_000124__xScale)
		_000124__xScale.addSubview(_000124__yScale)
		_000124__yScale.addSubview(_000124)
		__scaling__.addSubview(_000124__root)
		viewsByName["0001 2 4__root"] = _000124__root
		viewsByName["0001 2 4__xScale"] = _000124__xScale
		viewsByName["0001 2 4__yScale"] = _000124__yScale
		viewsByName["0001 2 4"] = _000124

		let untitled2__root = _AnimationCameraPassthroughView()
		let untitled2__xScale = _AnimationCameraPassthroughView()
		let untitled2__yScale = _AnimationCameraPassthroughView()
		let untitled2 = UIImageView()
		let imgUntitled2 = UIImage(named:"Untitled-2.png", in: bundle, compatibleWith: nil)
		if imgUntitled2 == nil {
			print("** Warning: Could not create image from 'Untitled-2.png'")
		}
		untitled2.image = imgUntitled2
		untitled2.contentMode = .center
		untitled2.layer.anchorPoint = CGPoint(x:0.469, y:0.687)
		untitled2.bounds = CGRect(x:0, y:0, width:110.0, height:36.0)
		untitled2__root.layer.position = CGPoint(x:2076.042, y:4996.623)
		untitled2__xScale.transform = CGAffineTransform(scaleX: 3.61, y: 1.00)
		untitled2__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.89)
		untitled2__root.transform = CGAffineTransform(rotationAngle: 4.745)
		untitled2__root.addSubview(untitled2__xScale)
		untitled2__xScale.addSubview(untitled2__yScale)
		untitled2__yScale.addSubview(untitled2)
		__scaling__.addSubview(untitled2__root)
		viewsByName["Untitled-2__root"] = untitled2__root
		viewsByName["Untitled-2__xScale"] = untitled2__xScale
		viewsByName["Untitled-2__yScale"] = untitled2__yScale
		viewsByName["Untitled-2"] = untitled2

		let untitled22__root = _AnimationCameraPassthroughView()
		let untitled22__xScale = _AnimationCameraPassthroughView()
		let untitled22__yScale = _AnimationCameraPassthroughView()
		let untitled22 = UIImageView()
		untitled22.image = imgUntitled2
		untitled22.contentMode = .center
		untitled22.layer.anchorPoint = CGPoint(x:0.469, y:0.687)
		untitled22.bounds = CGRect(x:0, y:0, width:110.0, height:36.0)
		untitled22__root.layer.position = CGPoint(x:1604.432, y:4667.357)
		untitled22__xScale.transform = CGAffineTransform(scaleX: 3.61, y: 1.00)
		untitled22__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.89)
		untitled22__root.transform = CGAffineTransform(rotationAngle: 2.735)
		untitled22__root.addSubview(untitled22__xScale)
		untitled22__xScale.addSubview(untitled22__yScale)
		untitled22__yScale.addSubview(untitled22)
		__scaling__.addSubview(untitled22__root)
		viewsByName["Untitled-2 2__root"] = untitled22__root
		viewsByName["Untitled-2 2__xScale"] = untitled22__xScale
		viewsByName["Untitled-2 2__yScale"] = untitled22__yScale
		viewsByName["Untitled-2 2"] = untitled22

		let homeArrows01__root = _AnimationCameraPassthroughView()
		let homeArrows01__xScale = _AnimationCameraPassthroughView()
		let homeArrows01__yScale = _AnimationCameraPassthroughView()
		let homeArrows01 = UIImageView()
		let imgHomeArrows01 = UIImage(named:"Home_Arrows-01.png", in: bundle, compatibleWith: nil)
		if imgHomeArrows01 == nil {
			print("** Warning: Could not create image from 'Home_Arrows-01.png'")
		}
		homeArrows01.image = imgHomeArrows01
		homeArrows01.contentMode = .center
		homeArrows01.bounds = CGRect(x:0, y:0, width:946.0, height:946.0)
		homeArrows01__root.layer.position = CGPoint(x:2834.609, y:3084.327)
		homeArrows01__root.alpha = 0.00
		homeArrows01__xScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		homeArrows01__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		homeArrows01__root.transform = CGAffineTransform(rotationAngle: 0.000)
		homeArrows01__root.addSubview(homeArrows01__xScale)
		homeArrows01__xScale.addSubview(homeArrows01__yScale)
		homeArrows01__yScale.addSubview(homeArrows01)
		__scaling__.addSubview(homeArrows01__root)
		viewsByName["Home_Arrows-01__root"] = homeArrows01__root
		viewsByName["Home_Arrows-01__xScale"] = homeArrows01__xScale
		viewsByName["Home_Arrows-01__yScale"] = homeArrows01__yScale
		viewsByName["Home_Arrows-01"] = homeArrows01

		let homeArrows05__root = _AnimationCameraPassthroughView()
		let homeArrows05__xScale = _AnimationCameraPassthroughView()
		let homeArrows05__yScale = _AnimationCameraPassthroughView()
		let homeArrows05 = UIImageView()
		let imgHomeArrows05 = UIImage(named:"Home_Arrows-05.png", in: bundle, compatibleWith: nil)
		if imgHomeArrows05 == nil {
			print("** Warning: Could not create image from 'Home_Arrows-05.png'")
		}
		homeArrows05.image = imgHomeArrows05
		homeArrows05.contentMode = .center
		homeArrows05.bounds = CGRect(x:0, y:0, width:946.0, height:946.0)
		homeArrows05__root.layer.position = CGPoint(x:4471.406, y:4874.473)
		homeArrows05__root.alpha = 0.00
		homeArrows05__xScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		homeArrows05__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		homeArrows05__root.transform = CGAffineTransform(rotationAngle: 0.000)
		homeArrows05__root.addSubview(homeArrows05__xScale)
		homeArrows05__xScale.addSubview(homeArrows05__yScale)
		homeArrows05__yScale.addSubview(homeArrows05)
		__scaling__.addSubview(homeArrows05__root)
		viewsByName["Home_Arrows-05__root"] = homeArrows05__root
		viewsByName["Home_Arrows-05__xScale"] = homeArrows05__xScale
		viewsByName["Home_Arrows-05__yScale"] = homeArrows05__yScale
		viewsByName["Home_Arrows-05"] = homeArrows05

		let homeIcon__root = _AnimationCameraPassthroughView()
		let homeIcon__xScale = _AnimationCameraPassthroughView()
		let homeIcon__yScale = _AnimationCameraPassthroughView()
		let homeIcon = UIImageView()
		let imgHomeIcon = UIImage(named:"home_icon.png", in: bundle, compatibleWith: nil)
		if imgHomeIcon == nil {
			print("** Warning: Could not create image from 'home_icon.png'")
		}
		homeIcon.image = imgHomeIcon
		homeIcon.contentMode = .center
		homeIcon.bounds = CGRect(x:0, y:0, width:545.0, height:545.0)
		homeIcon__root.layer.position = CGPoint(x:776.380, y:1145.749)
		homeIcon__root.alpha = 0.00
		homeIcon__xScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		homeIcon__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		homeIcon__root.transform = CGAffineTransform(rotationAngle: 0.000)
		homeIcon__root.addSubview(homeIcon__xScale)
		homeIcon__xScale.addSubview(homeIcon__yScale)
		homeIcon__yScale.addSubview(homeIcon)
		__scaling__.addSubview(homeIcon__root)
		viewsByName["home_icon__root"] = homeIcon__root
		viewsByName["home_icon__xScale"] = homeIcon__xScale
		viewsByName["home_icon__yScale"] = homeIcon__yScale
		viewsByName["home_icon"] = homeIcon

		let homeArrows04__root = _AnimationCameraPassthroughView()
		let homeArrows04__xScale = _AnimationCameraPassthroughView()
		let homeArrows04__yScale = _AnimationCameraPassthroughView()
		let homeArrows04 = UIImageView()
		let imgHomeArrows04 = UIImage(named:"Home_Arrows-04.png", in: bundle, compatibleWith: nil)
		if imgHomeArrows04 == nil {
			print("** Warning: Could not create image from 'Home_Arrows-04.png'")
		}
		homeArrows04.image = imgHomeArrows04
		homeArrows04.contentMode = .center
		homeArrows04.bounds = CGRect(x:0, y:0, width:946.0, height:946.0)
		homeArrows04__root.layer.position = CGPoint(x:4471.406, y:1400.718)
		homeArrows04__root.alpha = 0.00
		homeArrows04__xScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		homeArrows04__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		homeArrows04__root.transform = CGAffineTransform(rotationAngle: 0.000)
		homeArrows04__root.addSubview(homeArrows04__xScale)
		homeArrows04__xScale.addSubview(homeArrows04__yScale)
		homeArrows04__yScale.addSubview(homeArrows04)
		__scaling__.addSubview(homeArrows04__root)
		viewsByName["Home_Arrows-04__root"] = homeArrows04__root
		viewsByName["Home_Arrows-04__xScale"] = homeArrows04__xScale
		viewsByName["Home_Arrows-04__yScale"] = homeArrows04__yScale
		viewsByName["Home_Arrows-04"] = homeArrows04

		let homeArrows03__root = _AnimationCameraPassthroughView()
		let homeArrows03__xScale = _AnimationCameraPassthroughView()
		let homeArrows03__yScale = _AnimationCameraPassthroughView()
		let homeArrows03 = UIImageView()
		let imgHomeArrows03 = UIImage(named:"Home_Arrows-03.png", in: bundle, compatibleWith: nil)
		if imgHomeArrows03 == nil {
			print("** Warning: Could not create image from 'Home_Arrows-03.png'")
		}
		homeArrows03.image = imgHomeArrows03
		homeArrows03.contentMode = .center
		homeArrows03.bounds = CGRect(x:0, y:0, width:946.0, height:946.0)
		homeArrows03__root.layer.position = CGPoint(x:6069.422, y:3124.327)
		homeArrows03__root.alpha = 0.00
		homeArrows03__xScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		homeArrows03__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		homeArrows03__root.transform = CGAffineTransform(rotationAngle: 0.000)
		homeArrows03__root.addSubview(homeArrows03__xScale)
		homeArrows03__xScale.addSubview(homeArrows03__yScale)
		homeArrows03__yScale.addSubview(homeArrows03)
		__scaling__.addSubview(homeArrows03__root)
		viewsByName["Home_Arrows-03__root"] = homeArrows03__root
		viewsByName["Home_Arrows-03__xScale"] = homeArrows03__xScale
		viewsByName["Home_Arrows-03__yScale"] = homeArrows03__yScale
		viewsByName["Home_Arrows-03"] = homeArrows03

		let cameraPlus__root = _AnimationCameraPassthroughView()
		let cameraPlus__xScale = _AnimationCameraPassthroughView()
		let cameraPlus__yScale = _AnimationCameraPassthroughView()
		let cameraPlus = UIImageView()
		let imgCameraPlus = UIImage(named:"Camera_plus.png", in: bundle, compatibleWith: nil)
		if imgCameraPlus == nil {
			print("** Warning: Could not create image from 'Camera_plus.png'")
		}
		cameraPlus.image = imgCameraPlus
		cameraPlus.contentMode = .center
		cameraPlus.bounds = CGRect(x:0, y:0, width:470.0, height:638.0)
		cameraPlus__root.layer.position = CGPoint(x:7555.816, y:1780.656)
		cameraPlus__root.alpha = 0.00
		cameraPlus__xScale.transform = CGAffineTransform(scaleX: 1.95, y: 1.00)
		cameraPlus__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.95)
		cameraPlus__root.transform = CGAffineTransform(rotationAngle: 0.000)
		cameraPlus__root.addSubview(cameraPlus__xScale)
		cameraPlus__xScale.addSubview(cameraPlus__yScale)
		cameraPlus__yScale.addSubview(cameraPlus)
		__scaling__.addSubview(cameraPlus__root)
		viewsByName["Camera_plus__root"] = cameraPlus__root
		viewsByName["Camera_plus__xScale"] = cameraPlus__xScale
		viewsByName["Camera_plus__yScale"] = cameraPlus__yScale
		viewsByName["Camera_plus"] = cameraPlus

		let cameraMinus__root = _AnimationCameraPassthroughView()
		let cameraMinus__xScale = _AnimationCameraPassthroughView()
		let cameraMinus__yScale = _AnimationCameraPassthroughView()
		let cameraMinus = UIImageView()
		let imgCameraMinus = UIImage(named:"Camera_minus.png", in: bundle, compatibleWith: nil)
		if imgCameraMinus == nil {
			print("** Warning: Could not create image from 'Camera_minus.png'")
		}
		cameraMinus.image = imgCameraMinus
		cameraMinus.contentMode = .center
		cameraMinus.bounds = CGRect(x:0, y:0, width:470.0, height:638.0)
		cameraMinus__root.layer.position = CGPoint(x:7565.122, y:3742.016)
		cameraMinus__root.alpha = 0.00
		cameraMinus__xScale.transform = CGAffineTransform(scaleX: 1.99, y: 1.00)
		cameraMinus__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.99)
		cameraMinus__root.transform = CGAffineTransform(rotationAngle: 0.000)
		cameraMinus__root.addSubview(cameraMinus__xScale)
		cameraMinus__xScale.addSubview(cameraMinus__yScale)
		cameraMinus__yScale.addSubview(cameraMinus)
		__scaling__.addSubview(cameraMinus__root)
		viewsByName["Camera_minus__root"] = cameraMinus__root
		viewsByName["Camera_minus__xScale"] = cameraMinus__xScale
		viewsByName["Camera_minus__yScale"] = cameraMinus__yScale
		viewsByName["Camera_minus"] = cameraMinus

		let zoom__root = _AnimationCameraPassthroughView()
		let zoom__xScale = _AnimationCameraPassthroughView()
		let zoom__yScale = _AnimationCameraPassthroughView()
		let zoom = UIImageView()
		let imgZoom = UIImage(named:"zoom.png", in: bundle, compatibleWith: nil)
		if imgZoom == nil {
			print("** Warning: Could not create image from 'zoom.png'")
		}
		zoom.image = imgZoom
		zoom.contentMode = .center
		zoom.bounds = CGRect(x:0, y:0, width:225.0, height:77.0)
		zoom__root.layer.position = CGPoint(x:7561.963, y:2773.815)
		zoom__root.alpha = 0.00
		zoom__xScale.transform = CGAffineTransform(scaleX: 3.35, y: 1.00)
		zoom__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 3.35)
		zoom__root.transform = CGAffineTransform(rotationAngle: 0.000)
		zoom__root.addSubview(zoom__xScale)
		zoom__xScale.addSubview(zoom__yScale)
		zoom__yScale.addSubview(zoom)
		__scaling__.addSubview(zoom__root)
		viewsByName["zoom__root"] = zoom__root
		viewsByName["zoom__xScale"] = zoom__xScale
		viewsByName["zoom__yScale"] = zoom__yScale
		viewsByName["zoom"] = zoom

		let info__root = _AnimationCameraPassthroughView()
		let info__xScale = _AnimationCameraPassthroughView()
		let info__yScale = _AnimationCameraPassthroughView()
		let info = UIImageView()
		let imgInfo = UIImage(named:"info.png", in: bundle, compatibleWith: nil)
		if imgInfo == nil {
			print("** Warning: Could not create image from 'info.png'")
		}
		info.image = imgInfo
		info.contentMode = .center
		info.bounds = CGRect(x:0, y:0, width:552.0, height:552.0)
		info__root.layer.position = CGPoint(x:8349.140, y:1036.061)
		info__root.alpha = 0.00
		info__xScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		info__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		info__root.transform = CGAffineTransform(rotationAngle: 0.000)
		info__root.addSubview(info__xScale)
		info__xScale.addSubview(info__yScale)
		info__yScale.addSubview(info)
		__scaling__.addSubview(info__root)
		viewsByName["info__root"] = info__root
		viewsByName["info__xScale"] = info__xScale
		viewsByName["info__yScale"] = info__yScale
		viewsByName["info"] = info

		let numpad__root = _AnimationCameraPassthroughView()
		let numpad__xScale = _AnimationCameraPassthroughView()
		let numpad__yScale = _AnimationCameraPassthroughView()
		let numpad = UIImageView()
		let imgNumpad = UIImage(named:"numpad.png", in: bundle, compatibleWith: nil)
		if imgNumpad == nil {
			print("** Warning: Could not create image from 'numpad.png'")
		}
		numpad.image = imgNumpad
		numpad.contentMode = .center
		numpad.bounds = CGRect(x:0, y:0, width:637.0, height:845.0)
		numpad__root.layer.position = CGPoint(x:8234.648, y:5417.741)
		numpad__root.alpha = 0.00
		numpad__xScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		numpad__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		numpad__root.transform = CGAffineTransform(rotationAngle: 0.000)
		numpad__root.addSubview(numpad__xScale)
		numpad__xScale.addSubview(numpad__yScale)
		numpad__yScale.addSubview(numpad)
		__scaling__.addSubview(numpad__root)
		viewsByName["numpad__root"] = numpad__root
		viewsByName["numpad__xScale"] = numpad__xScale
		viewsByName["numpad__yScale"] = numpad__yScale
		viewsByName["numpad"] = numpad

		self.viewsByName = viewsByName
	}

	// - MARK: Camera Animation

	func addCameraAnimation() {
		addCameraAnimation(beginTime: 0, fillMode: kCAFillModeBoth, removedOnCompletion: false, completion: nil)
	}

	func addCameraAnimation(completion: ((Bool) -> Void)?) {
		addCameraAnimation(beginTime: 0, fillMode: kCAFillModeBoth, removedOnCompletion: false, completion: completion)
	}

	func addCameraAnimation(removedOnCompletion: Bool) {
		addCameraAnimation(beginTime: 0, fillMode: removedOnCompletion ? kCAFillModeRemoved : kCAFillModeBoth, removedOnCompletion: removedOnCompletion, completion: nil)
	}

	func addCameraAnimation(removedOnCompletion: Bool, completion: ((Bool) -> Void)?) {
		addCameraAnimation(beginTime: 0, fillMode: removedOnCompletion ? kCAFillModeRemoved : kCAFillModeBoth, removedOnCompletion: removedOnCompletion, completion: completion)
	}

	func addCameraAnimation(beginTime: CFTimeInterval, fillMode: String, removedOnCompletion: Bool, completion: ((Bool) -> Void)?) {
		let linearTiming = CAMediaTimingFunction(name: kCAMediaTimingFunctionLinear)
		let instantTiming = CAMediaTimingFunction(name: kCAMediaTimingFunctionDefault)
		let easeOutTiming = CAMediaTimingFunction(name: kCAMediaTimingFunctionEaseOut)
		if let complete = completion {
			let representativeAnimation = CABasicAnimation(keyPath: "not.a.real.key")
			representativeAnimation.duration = 3.750
			representativeAnimation.delegate = self
			self.layer.add(representativeAnimation, forKey: "CameraAnimation")
			self.animationCompletions[layer.animation(forKey: "CameraAnimation")!] = complete
		}

		let numpadOpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		numpadOpacityAnimation.duration = 3.750
		numpadOpacityAnimation.values = [0.000, 0.000, 1.000, 1.000] as [Float]
		numpadOpacityAnimation.keyTimes = [0.000, 0.840, 0.893, 1.000] as [NSNumber]
		numpadOpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		numpadOpacityAnimation.beginTime = beginTime
		numpadOpacityAnimation.fillMode = fillMode
		numpadOpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["numpad__root"]?.layer.add(numpadOpacityAnimation, forKey:"Camera Animation_Opacity")

		let menuIcons011ScaleXAnimation = CAKeyframeAnimation(keyPath: "transform.scale.x")
		menuIcons011ScaleXAnimation.duration = 3.750
		menuIcons011ScaleXAnimation.values = [0.962, 0.809, 0.809] as [Float]
		menuIcons011ScaleXAnimation.keyTimes = [0.000, 0.067, 1.000] as [NSNumber]
		menuIcons011ScaleXAnimation.timingFunctions = [linearTiming, linearTiming]
		menuIcons011ScaleXAnimation.beginTime = beginTime
		menuIcons011ScaleXAnimation.fillMode = fillMode
		menuIcons011ScaleXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["menu_icons-01_1__xScale"]?.layer.add(menuIcons011ScaleXAnimation, forKey:"Camera Animation_ScaleX")

		let menuIcons011ScaleYAnimation = CAKeyframeAnimation(keyPath: "transform.scale.y")
		menuIcons011ScaleYAnimation.duration = 3.750
		menuIcons011ScaleYAnimation.values = [0.961, 0.804, 0.804] as [Float]
		menuIcons011ScaleYAnimation.keyTimes = [0.000, 0.067, 1.000] as [NSNumber]
		menuIcons011ScaleYAnimation.timingFunctions = [linearTiming, linearTiming]
		menuIcons011ScaleYAnimation.beginTime = beginTime
		menuIcons011ScaleYAnimation.fillMode = fillMode
		menuIcons011ScaleYAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["menu_icons-01_1__yScale"]?.layer.add(menuIcons011ScaleYAnimation, forKey:"Camera Animation_ScaleY")

		let menuIcons011TranslationXAnimation = CAKeyframeAnimation(keyPath: "transform.translation.x")
		menuIcons011TranslationXAnimation.duration = 3.750
		menuIcons011TranslationXAnimation.values = [3.055, -234.360, -234.360] as [Float]
		menuIcons011TranslationXAnimation.keyTimes = [0.000, 0.067, 1.000] as [NSNumber]
		menuIcons011TranslationXAnimation.timingFunctions = [linearTiming, linearTiming]
		menuIcons011TranslationXAnimation.beginTime = beginTime
		menuIcons011TranslationXAnimation.fillMode = fillMode
		menuIcons011TranslationXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["menu_icons-01_1__root"]?.layer.add(menuIcons011TranslationXAnimation, forKey:"Camera Animation_TranslationX")

		let menuIcons011TranslationYAnimation = CAKeyframeAnimation(keyPath: "transform.translation.y")
		menuIcons011TranslationYAnimation.duration = 3.750
		menuIcons011TranslationYAnimation.values = [-2.948, 951.095, 951.095] as [Float]
		menuIcons011TranslationYAnimation.keyTimes = [0.000, 0.067, 1.000] as [NSNumber]
		menuIcons011TranslationYAnimation.timingFunctions = [linearTiming, linearTiming]
		menuIcons011TranslationYAnimation.beginTime = beginTime
		menuIcons011TranslationYAnimation.fillMode = fillMode
		menuIcons011TranslationYAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["menu_icons-01_1__root"]?.layer.add(menuIcons011TranslationYAnimation, forKey:"Camera Animation_TranslationY")

		let cameraMinusOpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		cameraMinusOpacityAnimation.duration = 3.750
		cameraMinusOpacityAnimation.values = [0.000, 0.000, 1.000, 1.000] as [Float]
		cameraMinusOpacityAnimation.keyTimes = [0.000, 0.960, 0.987, 1.000] as [NSNumber]
		cameraMinusOpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		cameraMinusOpacityAnimation.beginTime = beginTime
		cameraMinusOpacityAnimation.fillMode = fillMode
		cameraMinusOpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Camera_minus__root"]?.layer.add(cameraMinusOpacityAnimation, forKey:"Camera Animation_Opacity")

		let infoOpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		infoOpacityAnimation.duration = 3.750
		infoOpacityAnimation.values = [0.000, 0.000, 1.000] as [Float]
		infoOpacityAnimation.keyTimes = [0.000, 0.973, 1.000] as [NSNumber]
		infoOpacityAnimation.timingFunctions = [linearTiming, linearTiming]
		infoOpacityAnimation.beginTime = beginTime
		infoOpacityAnimation.fillMode = fillMode
		infoOpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["info__root"]?.layer.add(infoOpacityAnimation, forKey:"Camera Animation_Opacity")

		let zoomOpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		zoomOpacityAnimation.duration = 3.750
		zoomOpacityAnimation.values = [0.000, 0.000, 1.000, 1.000] as [Float]
		zoomOpacityAnimation.keyTimes = [0.000, 0.960, 0.987, 1.000] as [NSNumber]
		zoomOpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		zoomOpacityAnimation.beginTime = beginTime
		zoomOpacityAnimation.fillMode = fillMode
		zoomOpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["zoom__root"]?.layer.add(zoomOpacityAnimation, forKey:"Camera Animation_Opacity")

		let cameraPlusOpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		cameraPlusOpacityAnimation.duration = 3.750
		cameraPlusOpacityAnimation.values = [0.000, 0.000, 1.000, 1.000] as [Float]
		cameraPlusOpacityAnimation.keyTimes = [0.000, 0.960, 0.987, 1.000] as [NSNumber]
		cameraPlusOpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		cameraPlusOpacityAnimation.beginTime = beginTime
		cameraPlusOpacityAnimation.fillMode = fillMode
		cameraPlusOpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Camera_plus__root"]?.layer.add(cameraPlusOpacityAnimation, forKey:"Camera Animation_Opacity")

		let _000122RotationAnimation = CAKeyframeAnimation(keyPath: "transform.rotation.z")
		_000122RotationAnimation.duration = 3.750
		_000122RotationAnimation.values = [-0.815, -0.815, -0.815] as [Float]
		_000122RotationAnimation.keyTimes = [0.000, 0.267, 1.000] as [NSNumber]
		_000122RotationAnimation.timingFunctions = [linearTiming, linearTiming]
		_000122RotationAnimation.beginTime = beginTime
		_000122RotationAnimation.fillMode = fillMode
		_000122RotationAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["0001 2 2__root"]?.layer.add(_000122RotationAnimation, forKey:"Camera Animation_Rotation")

		let _000122OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		_000122OpacityAnimation.duration = 3.750
		_000122OpacityAnimation.values = [1.000, 1.000, 0.000, 0.000, 0.000] as [Float]
		_000122OpacityAnimation.keyTimes = [0.000, 0.213, 0.213, 0.267, 1.000] as [NSNumber]
		_000122OpacityAnimation.timingFunctions = [instantTiming, instantTiming, linearTiming, linearTiming]
		_000122OpacityAnimation.beginTime = beginTime
		_000122OpacityAnimation.fillMode = fillMode
		_000122OpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["0001 2 2__root"]?.layer.add(_000122OpacityAnimation, forKey:"Camera Animation_Opacity")

		let _000122ScaleXAnimation = CAKeyframeAnimation(keyPath: "transform.scale.x")
		_000122ScaleXAnimation.duration = 3.750
		_000122ScaleXAnimation.values = [0.224, 0.440, 0.440, 0.440] as [Float]
		_000122ScaleXAnimation.keyTimes = [0.000, 0.213, 0.267, 1.000] as [NSNumber]
		_000122ScaleXAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		_000122ScaleXAnimation.beginTime = beginTime
		_000122ScaleXAnimation.fillMode = fillMode
		_000122ScaleXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["0001 2 2__xScale"]?.layer.add(_000122ScaleXAnimation, forKey:"Camera Animation_ScaleX")

		let _000122TranslationXAnimation = CAKeyframeAnimation(keyPath: "transform.translation.x")
		_000122TranslationXAnimation.duration = 3.750
		_000122TranslationXAnimation.values = [148.203, 374.453, 871.774, 871.774, 871.774] as [Float]
		_000122TranslationXAnimation.keyTimes = [0.000, 0.027, 0.213, 0.267, 1.000] as [NSNumber]
		_000122TranslationXAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming]
		_000122TranslationXAnimation.beginTime = beginTime
		_000122TranslationXAnimation.fillMode = fillMode
		_000122TranslationXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["0001 2 2__root"]?.layer.add(_000122TranslationXAnimation, forKey:"Camera Animation_TranslationX")

		let _000122TranslationYAnimation = CAKeyframeAnimation(keyPath: "transform.translation.y")
		_000122TranslationYAnimation.duration = 3.750
		_000122TranslationYAnimation.values = [64.648, -158.672, -695.271, -695.271, -695.271] as [Float]
		_000122TranslationYAnimation.keyTimes = [0.000, 0.027, 0.213, 0.267, 1.000] as [NSNumber]
		_000122TranslationYAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming]
		_000122TranslationYAnimation.beginTime = beginTime
		_000122TranslationYAnimation.fillMode = fillMode
		_000122TranslationYAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["0001 2 2__root"]?.layer.add(_000122TranslationYAnimation, forKey:"Camera Animation_TranslationY")

		let icon02Menu01OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		icon02Menu01OpacityAnimation.duration = 3.750
		icon02Menu01OpacityAnimation.values = [1.000, 0.000, 0.000] as [Float]
		icon02Menu01OpacityAnimation.keyTimes = [0.000, 0.093, 1.000] as [NSNumber]
		icon02Menu01OpacityAnimation.timingFunctions = [linearTiming, linearTiming]
		icon02Menu01OpacityAnimation.beginTime = beginTime
		icon02Menu01OpacityAnimation.fillMode = fillMode
		icon02Menu01OpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["icon_02_menu-01__root"]?.layer.add(icon02Menu01OpacityAnimation, forKey:"Camera Animation_Opacity")

		let homeArrows04OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		homeArrows04OpacityAnimation.duration = 3.750
		homeArrows04OpacityAnimation.values = [0.000, 0.000, 1.000, 1.000] as [Float]
		homeArrows04OpacityAnimation.keyTimes = [0.000, 0.907, 0.947, 1.000] as [NSNumber]
		homeArrows04OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		homeArrows04OpacityAnimation.beginTime = beginTime
		homeArrows04OpacityAnimation.fillMode = fillMode
		homeArrows04OpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Home_Arrows-04__root"]?.layer.add(homeArrows04OpacityAnimation, forKey:"Camera Animation_Opacity")

		let untitled22RotationAnimation = CAKeyframeAnimation(keyPath: "transform.rotation.z")
		untitled22RotationAnimation.duration = 3.750
		untitled22RotationAnimation.values = [2.735, 2.788, 3.197, 3.197] as [Float]
		untitled22RotationAnimation.keyTimes = [0.000, 0.240, 0.267, 1.000] as [NSNumber]
		untitled22RotationAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		untitled22RotationAnimation.beginTime = beginTime
		untitled22RotationAnimation.fillMode = fillMode
		untitled22RotationAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Untitled-2 2__root"]?.layer.add(untitled22RotationAnimation, forKey:"Camera Animation_Rotation")

		let untitled22OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		untitled22OpacityAnimation.duration = 3.750
		untitled22OpacityAnimation.values = [0.000, 0.000, 1.000, 1.000, 0.000, 0.000] as [Float]
		untitled22OpacityAnimation.keyTimes = [0.000, 0.240, 0.240, 0.267, 0.267, 1.000] as [NSNumber]
		untitled22OpacityAnimation.timingFunctions = [instantTiming, instantTiming, instantTiming, instantTiming, linearTiming]
		untitled22OpacityAnimation.beginTime = beginTime
		untitled22OpacityAnimation.fillMode = fillMode
		untitled22OpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Untitled-2 2__root"]?.layer.add(untitled22OpacityAnimation, forKey:"Camera Animation_Opacity")

		let untitled22ScaleXAnimation = CAKeyframeAnimation(keyPath: "transform.scale.x")
		untitled22ScaleXAnimation.duration = 3.750
		untitled22ScaleXAnimation.values = [3.612, 3.433, 3.433, 3.433] as [Float]
		untitled22ScaleXAnimation.keyTimes = [0.000, 0.240, 0.267, 1.000] as [NSNumber]
		untitled22ScaleXAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		untitled22ScaleXAnimation.beginTime = beginTime
		untitled22ScaleXAnimation.fillMode = fillMode
		untitled22ScaleXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Untitled-2 2__xScale"]?.layer.add(untitled22ScaleXAnimation, forKey:"Camera Animation_ScaleX")

		let untitled22TranslationXAnimation = CAKeyframeAnimation(keyPath: "transform.translation.x")
		untitled22TranslationXAnimation.duration = 3.750
		untitled22TranslationXAnimation.values = [0.000, -8.259, 164.858, 164.858] as [Float]
		untitled22TranslationXAnimation.keyTimes = [0.000, 0.240, 0.267, 1.000] as [NSNumber]
		untitled22TranslationXAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		untitled22TranslationXAnimation.beginTime = beginTime
		untitled22TranslationXAnimation.fillMode = fillMode
		untitled22TranslationXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Untitled-2 2__root"]?.layer.add(untitled22TranslationXAnimation, forKey:"Camera Animation_TranslationX")

		let untitled22TranslationYAnimation = CAKeyframeAnimation(keyPath: "transform.translation.y")
		untitled22TranslationYAnimation.duration = 3.750
		untitled22TranslationYAnimation.values = [0.000, -18.328, -28.877, -28.877] as [Float]
		untitled22TranslationYAnimation.keyTimes = [0.000, 0.240, 0.267, 1.000] as [NSNumber]
		untitled22TranslationYAnimation.timingFunctions = [linearTiming, easeOutTiming, linearTiming]
		untitled22TranslationYAnimation.beginTime = beginTime
		untitled22TranslationYAnimation.fillMode = fillMode
		untitled22TranslationYAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Untitled-2 2__root"]?.layer.add(untitled22TranslationYAnimation, forKey:"Camera Animation_TranslationY")

		let _000125RotationAnimation = CAKeyframeAnimation(keyPath: "transform.rotation.z")
		_000125RotationAnimation.duration = 3.750
		_000125RotationAnimation.values = [0.801, 0.638, 0.457, 0.268, 0.140, 0.101, 0.101] as [Float]
		_000125RotationAnimation.keyTimes = [0.000, 0.827, 0.853, 0.880, 0.907, 0.933, 1.000] as [NSNumber]
		_000125RotationAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming]
		_000125RotationAnimation.beginTime = beginTime
		_000125RotationAnimation.fillMode = fillMode
		_000125RotationAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["0001 2 5__root"]?.layer.add(_000125RotationAnimation, forKey:"Camera Animation_Rotation")

		let _000125OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		_000125OpacityAnimation.duration = 3.750
		_000125OpacityAnimation.values = [0.000, 0.000, 1.000, 1.000] as [Float]
		_000125OpacityAnimation.keyTimes = [0.000, 0.787, 0.787, 1.000] as [NSNumber]
		_000125OpacityAnimation.timingFunctions = [instantTiming, instantTiming, linearTiming]
		_000125OpacityAnimation.beginTime = beginTime
		_000125OpacityAnimation.fillMode = fillMode
		_000125OpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["0001 2 5__root"]?.layer.add(_000125OpacityAnimation, forKey:"Camera Animation_Opacity")

		let _000125ScaleXAnimation = CAKeyframeAnimation(keyPath: "transform.scale.x")
		_000125ScaleXAnimation.duration = 3.750
		_000125ScaleXAnimation.values = [-0.173, -0.173, -1.791, -0.004, -0.004] as [Float]
		_000125ScaleXAnimation.keyTimes = [0.000, 0.787, 0.920, 0.933, 1.000] as [NSNumber]
		_000125ScaleXAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming]
		_000125ScaleXAnimation.beginTime = beginTime
		_000125ScaleXAnimation.fillMode = fillMode
		_000125ScaleXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["0001 2 5__xScale"]?.layer.add(_000125ScaleXAnimation, forKey:"Camera Animation_ScaleX")

		let _000125TranslationXAnimation = CAKeyframeAnimation(keyPath: "transform.translation.x")
		_000125TranslationXAnimation.duration = 3.750
		_000125TranslationXAnimation.values = [0.000, 0.000, -849.062, -1600.812, -2364.197, -3079.249, -3503.990, -3503.990] as [Float]
		_000125TranslationXAnimation.keyTimes = [0.000, 0.787, 0.827, 0.853, 0.880, 0.907, 0.933, 1.000] as [NSNumber]
		_000125TranslationXAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming]
		_000125TranslationXAnimation.beginTime = beginTime
		_000125TranslationXAnimation.fillMode = fillMode
		_000125TranslationXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["0001 2 5__root"]?.layer.add(_000125TranslationXAnimation, forKey:"Camera Animation_TranslationX")

		let _000125TranslationYAnimation = CAKeyframeAnimation(keyPath: "transform.translation.y")
		_000125TranslationYAnimation.duration = 3.750
		_000125TranslationYAnimation.values = [0.000, -2.000, -732.029, -1183.451, -1500.561, -1683.868, -1728.988, -1728.988] as [Float]
		_000125TranslationYAnimation.keyTimes = [0.000, 0.787, 0.827, 0.853, 0.880, 0.907, 0.933, 1.000] as [NSNumber]
		_000125TranslationYAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming]
		_000125TranslationYAnimation.beginTime = beginTime
		_000125TranslationYAnimation.fillMode = fillMode
		_000125TranslationYAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["0001 2 5__root"]?.layer.add(_000125TranslationYAnimation, forKey:"Camera Animation_TranslationY")

		let homeIconOpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		homeIconOpacityAnimation.duration = 3.750
		homeIconOpacityAnimation.values = [0.000, 0.000, 1.000, 1.000] as [Float]
		homeIconOpacityAnimation.keyTimes = [0.000, 0.920, 0.960, 1.000] as [NSNumber]
		homeIconOpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		homeIconOpacityAnimation.beginTime = beginTime
		homeIconOpacityAnimation.fillMode = fillMode
		homeIconOpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["home_icon__root"]?.layer.add(homeIconOpacityAnimation, forKey:"Camera Animation_Opacity")

		let homeArrows03OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		homeArrows03OpacityAnimation.duration = 3.750
		homeArrows03OpacityAnimation.values = [0.000, 0.000, 1.000, 1.000] as [Float]
		homeArrows03OpacityAnimation.keyTimes = [0.000, 0.907, 0.947, 1.000] as [NSNumber]
		homeArrows03OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		homeArrows03OpacityAnimation.beginTime = beginTime
		homeArrows03OpacityAnimation.fillMode = fillMode
		homeArrows03OpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Home_Arrows-03__root"]?.layer.add(homeArrows03OpacityAnimation, forKey:"Camera Animation_Opacity")

		let _000127RotationAnimation = CAKeyframeAnimation(keyPath: "transform.rotation.z")
		_000127RotationAnimation.duration = 3.750
		_000127RotationAnimation.values = [0.801, 0.820, 0.820] as [Float]
		_000127RotationAnimation.keyTimes = [0.000, 0.733, 1.000] as [NSNumber]
		_000127RotationAnimation.timingFunctions = [linearTiming, linearTiming]
		_000127RotationAnimation.beginTime = beginTime
		_000127RotationAnimation.fillMode = fillMode
		_000127RotationAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["0001 2 7__root"]?.layer.add(_000127RotationAnimation, forKey:"Camera Animation_Rotation")

		let _000127OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		_000127OpacityAnimation.duration = 3.750
		_000127OpacityAnimation.values = [0.000, 0.000, 1.000, 1.000] as [Float]
		_000127OpacityAnimation.keyTimes = [0.000, 0.840, 0.840, 1.000] as [NSNumber]
		_000127OpacityAnimation.timingFunctions = [instantTiming, instantTiming, linearTiming]
		_000127OpacityAnimation.beginTime = beginTime
		_000127OpacityAnimation.fillMode = fillMode
		_000127OpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["0001 2 7__root"]?.layer.add(_000127OpacityAnimation, forKey:"Camera Animation_Opacity")

		let _000127ScaleXAnimation = CAKeyframeAnimation(keyPath: "transform.scale.x")
		_000127ScaleXAnimation.duration = 3.750
		_000127ScaleXAnimation.values = [0.091, 0.091, 0.687, 0.022, 0.022] as [Float]
		_000127ScaleXAnimation.keyTimes = [0.000, 0.840, 0.880, 0.907, 1.000] as [NSNumber]
		_000127ScaleXAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming]
		_000127ScaleXAnimation.beginTime = beginTime
		_000127ScaleXAnimation.fillMode = fillMode
		_000127ScaleXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["0001 2 7__xScale"]?.layer.add(_000127ScaleXAnimation, forKey:"Camera Animation_ScaleX")

		let _000127TranslationXAnimation = CAKeyframeAnimation(keyPath: "transform.translation.x")
		_000127TranslationXAnimation.duration = 3.750
		_000127TranslationXAnimation.values = [0.000, 0.000, 217.028, 314.215, 314.215] as [Float]
		_000127TranslationXAnimation.keyTimes = [0.000, 0.840, 0.880, 0.907, 1.000] as [NSNumber]
		_000127TranslationXAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming]
		_000127TranslationXAnimation.beginTime = beginTime
		_000127TranslationXAnimation.fillMode = fillMode
		_000127TranslationXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["0001 2 7__root"]?.layer.add(_000127TranslationXAnimation, forKey:"Camera Animation_TranslationX")

		let _000127TranslationYAnimation = CAKeyframeAnimation(keyPath: "transform.translation.y")
		_000127TranslationYAnimation.duration = 3.750
		_000127TranslationYAnimation.values = [0.000, 0.000, 255.053, 355.296, 355.296] as [Float]
		_000127TranslationYAnimation.keyTimes = [0.000, 0.840, 0.880, 0.907, 1.000] as [NSNumber]
		_000127TranslationYAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming]
		_000127TranslationYAnimation.beginTime = beginTime
		_000127TranslationYAnimation.fillMode = fillMode
		_000127TranslationYAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["0001 2 7__root"]?.layer.add(_000127TranslationYAnimation, forKey:"Camera Animation_TranslationY")

		let _00012RotationAnimation = CAKeyframeAnimation(keyPath: "transform.rotation.z")
		_00012RotationAnimation.duration = 3.750
		_00012RotationAnimation.values = [0.597, 0.597, -1.026, -1.026, 0.663, 0.744, 0.744, -0.717, -0.717] as [Float]
		_00012RotationAnimation.keyTimes = [0.000, 0.053, 0.053, 0.360, 0.360, 0.493, 0.533, 0.533, 1.000] as [NSNumber]
		_00012RotationAnimation.timingFunctions = [instantTiming, instantTiming, instantTiming, instantTiming, linearTiming, instantTiming, instantTiming, linearTiming]
		_00012RotationAnimation.beginTime = beginTime
		_00012RotationAnimation.fillMode = fillMode
		_00012RotationAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["0001 2__root"]?.layer.add(_00012RotationAnimation, forKey:"Camera Animation_Rotation")

		let _00012OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		_00012OpacityAnimation.duration = 3.750
		_00012OpacityAnimation.values = [1.000, 1.000, 0.000, 0.000, 1.000, 1.000] as [Float]
		_00012OpacityAnimation.keyTimes = [0.000, 0.240, 0.240, 0.267, 0.267, 1.000] as [NSNumber]
		_00012OpacityAnimation.timingFunctions = [instantTiming, instantTiming, instantTiming, instantTiming, linearTiming]
		_00012OpacityAnimation.beginTime = beginTime
		_00012OpacityAnimation.fillMode = fillMode
		_00012OpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["0001 2__root"]?.layer.add(_00012OpacityAnimation, forKey:"Camera Animation_Opacity")

		let _00012ScaleXAnimation = CAKeyframeAnimation(keyPath: "transform.scale.x")
		_00012ScaleXAnimation.duration = 3.750
		_00012ScaleXAnimation.values = [0.224, 0.224, 0.115, 0.012, 0.206, 0.534, 0.128, 0.295, 0.026, 0.347, 0.023, 1.806, 2.874, 0.046] as [Float]
		_00012ScaleXAnimation.keyTimes = [0.000, 0.040, 0.040, 0.053, 0.160, 0.240, 0.267, 0.320, 0.360, 0.493, 0.533, 0.613, 0.803, 1.000] as [NSNumber]
		_00012ScaleXAnimation.timingFunctions = [instantTiming, instantTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming]
		_00012ScaleXAnimation.beginTime = beginTime
		_00012ScaleXAnimation.fillMode = fillMode
		_00012ScaleXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["0001 2__xScale"]?.layer.add(_00012ScaleXAnimation, forKey:"Camera Animation_ScaleX")

		let _00012TranslationXAnimation = CAKeyframeAnimation(keyPath: "transform.translation.x")
		_00012TranslationXAnimation.duration = 3.750
		_00012TranslationXAnimation.values = [155.641, -57.180, -90.872, -69.768, 96.184, 335.294, 918.683, 983.424, 1012.670, 1394.708, 1444.707, 1724.806, 3541.615, 5833.829, 6112.456] as [Float]
		_00012TranslationXAnimation.keyTimes = [0.000, 0.027, 0.040, 0.133, 0.200, 0.240, 0.267, 0.320, 0.360, 0.493, 0.533, 0.613, 0.803, 0.933, 1.000] as [NSNumber]
		_00012TranslationXAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming]
		_00012TranslationXAnimation.beginTime = beginTime
		_00012TranslationXAnimation.fillMode = fillMode
		_00012TranslationXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["0001 2__root"]?.layer.add(_00012TranslationXAnimation, forKey:"Camera Animation_TranslationX")

		let _00012TranslationYAnimation = CAKeyframeAnimation(keyPath: "transform.translation.y")
		_00012TranslationYAnimation.duration = 3.750
		_00012TranslationYAnimation.values = [114.695, -32.344, -61.284, -96.147, -578.168, -995.278, -1158.547, -1244.859, -1293.171, -966.870, -920.829, -1175.819, -2855.192, -4944.686, -5187.479] as [Float]
		_00012TranslationYAnimation.keyTimes = [0.000, 0.027, 0.040, 0.133, 0.200, 0.240, 0.267, 0.320, 0.360, 0.493, 0.533, 0.613, 0.803, 0.933, 1.000] as [NSNumber]
		_00012TranslationYAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming]
		_00012TranslationYAnimation.beginTime = beginTime
		_00012TranslationYAnimation.fillMode = fillMode
		_00012TranslationYAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["0001 2__root"]?.layer.add(_00012TranslationYAnimation, forKey:"Camera Animation_TranslationY")

		let menuIcons03ScaleXAnimation = CAKeyframeAnimation(keyPath: "transform.scale.x")
		menuIcons03ScaleXAnimation.duration = 3.750
		menuIcons03ScaleXAnimation.values = [1.000, 1.000, 0.800, 0.800] as [Float]
		menuIcons03ScaleXAnimation.keyTimes = [0.000, 0.067, 0.133, 1.000] as [NSNumber]
		menuIcons03ScaleXAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		menuIcons03ScaleXAnimation.beginTime = beginTime
		menuIcons03ScaleXAnimation.fillMode = fillMode
		menuIcons03ScaleXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["menu_icons-03__xScale"]?.layer.add(menuIcons03ScaleXAnimation, forKey:"Camera Animation_ScaleX")

		let menuIcons03ScaleYAnimation = CAKeyframeAnimation(keyPath: "transform.scale.y")
		menuIcons03ScaleYAnimation.duration = 3.750
		menuIcons03ScaleYAnimation.values = [1.000, 1.000, 0.800, 0.800] as [Float]
		menuIcons03ScaleYAnimation.keyTimes = [0.000, 0.067, 0.133, 1.000] as [NSNumber]
		menuIcons03ScaleYAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		menuIcons03ScaleYAnimation.beginTime = beginTime
		menuIcons03ScaleYAnimation.fillMode = fillMode
		menuIcons03ScaleYAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["menu_icons-03__yScale"]?.layer.add(menuIcons03ScaleYAnimation, forKey:"Camera Animation_ScaleY")

		let menuIcons03TranslationXAnimation = CAKeyframeAnimation(keyPath: "transform.translation.x")
		menuIcons03TranslationXAnimation.duration = 3.750
		menuIcons03TranslationXAnimation.values = [0.000, 0.000, -702.993, -702.993] as [Float]
		menuIcons03TranslationXAnimation.keyTimes = [0.000, 0.067, 0.133, 1.000] as [NSNumber]
		menuIcons03TranslationXAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		menuIcons03TranslationXAnimation.beginTime = beginTime
		menuIcons03TranslationXAnimation.fillMode = fillMode
		menuIcons03TranslationXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["menu_icons-03__root"]?.layer.add(menuIcons03TranslationXAnimation, forKey:"Camera Animation_TranslationX")

		let menuIcons03TranslationYAnimation = CAKeyframeAnimation(keyPath: "transform.translation.y")
		menuIcons03TranslationYAnimation.duration = 3.750
		menuIcons03TranslationYAnimation.values = [0.000, 0.000, 507.814, 507.814] as [Float]
		menuIcons03TranslationYAnimation.keyTimes = [0.000, 0.067, 0.133, 1.000] as [NSNumber]
		menuIcons03TranslationYAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		menuIcons03TranslationYAnimation.beginTime = beginTime
		menuIcons03TranslationYAnimation.fillMode = fillMode
		menuIcons03TranslationYAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["menu_icons-03__root"]?.layer.add(menuIcons03TranslationYAnimation, forKey:"Camera Animation_TranslationY")

		let menuIcons04ScaleXAnimation = CAKeyframeAnimation(keyPath: "transform.scale.x")
		menuIcons04ScaleXAnimation.duration = 3.750
		menuIcons04ScaleXAnimation.values = [1.000, 0.998, 0.807, 0.807] as [Float]
		menuIcons04ScaleXAnimation.keyTimes = [0.000, 0.133, 0.200, 1.000] as [NSNumber]
		menuIcons04ScaleXAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		menuIcons04ScaleXAnimation.beginTime = beginTime
		menuIcons04ScaleXAnimation.fillMode = fillMode
		menuIcons04ScaleXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["menu_icons-04__xScale"]?.layer.add(menuIcons04ScaleXAnimation, forKey:"Camera Animation_ScaleX")

		let menuIcons04ScaleYAnimation = CAKeyframeAnimation(keyPath: "transform.scale.y")
		menuIcons04ScaleYAnimation.duration = 3.750
		menuIcons04ScaleYAnimation.values = [1.000, 0.998, 0.797, 0.797] as [Float]
		menuIcons04ScaleYAnimation.keyTimes = [0.000, 0.133, 0.200, 1.000] as [NSNumber]
		menuIcons04ScaleYAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		menuIcons04ScaleYAnimation.beginTime = beginTime
		menuIcons04ScaleYAnimation.fillMode = fillMode
		menuIcons04ScaleYAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["menu_icons-04__yScale"]?.layer.add(menuIcons04ScaleYAnimation, forKey:"Camera Animation_ScaleY")

		let menuIcons04TranslationXAnimation = CAKeyframeAnimation(keyPath: "transform.translation.x")
		menuIcons04TranslationXAnimation.duration = 3.750
		menuIcons04TranslationXAnimation.values = [0.000, -12.210, -1017.524, -1017.524] as [Float]
		menuIcons04TranslationXAnimation.keyTimes = [0.000, 0.133, 0.200, 1.000] as [NSNumber]
		menuIcons04TranslationXAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		menuIcons04TranslationXAnimation.beginTime = beginTime
		menuIcons04TranslationXAnimation.fillMode = fillMode
		menuIcons04TranslationXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["menu_icons-04__root"]?.layer.add(menuIcons04TranslationXAnimation, forKey:"Camera Animation_TranslationX")

		let menuIcons04TranslationYAnimation = CAKeyframeAnimation(keyPath: "transform.translation.y")
		menuIcons04TranslationYAnimation.duration = 3.750
		menuIcons04TranslationYAnimation.values = [0.000, 3.874, 322.814, 322.814] as [Float]
		menuIcons04TranslationYAnimation.keyTimes = [0.000, 0.133, 0.200, 1.000] as [NSNumber]
		menuIcons04TranslationYAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		menuIcons04TranslationYAnimation.beginTime = beginTime
		menuIcons04TranslationYAnimation.fillMode = fillMode
		menuIcons04TranslationYAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["menu_icons-04__root"]?.layer.add(menuIcons04TranslationYAnimation, forKey:"Camera Animation_TranslationY")

		let _000126OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		_000126OpacityAnimation.duration = 3.750
		_000126OpacityAnimation.values = [0.000, 0.000, 1.000, 1.000] as [Float]
		_000126OpacityAnimation.keyTimes = [0.000, 0.840, 0.840, 1.000] as [NSNumber]
		_000126OpacityAnimation.timingFunctions = [instantTiming, instantTiming, linearTiming]
		_000126OpacityAnimation.beginTime = beginTime
		_000126OpacityAnimation.fillMode = fillMode
		_000126OpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["0001 2 6__root"]?.layer.add(_000126OpacityAnimation, forKey:"Camera Animation_Opacity")

		let _000126ScaleXAnimation = CAKeyframeAnimation(keyPath: "transform.scale.x")
		_000126ScaleXAnimation.duration = 3.750
		_000126ScaleXAnimation.values = [0.091, 0.091, 0.848, -0.009, -0.009] as [Float]
		_000126ScaleXAnimation.keyTimes = [0.000, 0.840, 0.880, 0.907, 1.000] as [NSNumber]
		_000126ScaleXAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming]
		_000126ScaleXAnimation.beginTime = beginTime
		_000126ScaleXAnimation.fillMode = fillMode
		_000126ScaleXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["0001 2 6__xScale"]?.layer.add(_000126ScaleXAnimation, forKey:"Camera Animation_ScaleX")

		let _000126TranslationXAnimation = CAKeyframeAnimation(keyPath: "transform.translation.x")
		_000126TranslationXAnimation.duration = 3.750
		_000126TranslationXAnimation.values = [0.000, 0.000, -383.059, -508.306, -508.306] as [Float]
		_000126TranslationXAnimation.keyTimes = [0.000, 0.840, 0.880, 0.907, 1.000] as [NSNumber]
		_000126TranslationXAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming]
		_000126TranslationXAnimation.beginTime = beginTime
		_000126TranslationXAnimation.fillMode = fillMode
		_000126TranslationXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["0001 2 6__root"]?.layer.add(_000126TranslationXAnimation, forKey:"Camera Animation_TranslationX")

		let _000126TranslationYAnimation = CAKeyframeAnimation(keyPath: "transform.translation.y")
		_000126TranslationYAnimation.duration = 3.750
		_000126TranslationYAnimation.values = [0.000, 0.000, -372.749, -501.934, -501.934] as [Float]
		_000126TranslationYAnimation.keyTimes = [0.000, 0.840, 0.880, 0.907, 1.000] as [NSNumber]
		_000126TranslationYAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming]
		_000126TranslationYAnimation.beginTime = beginTime
		_000126TranslationYAnimation.fillMode = fillMode
		_000126TranslationYAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["0001 2 6__root"]?.layer.add(_000126TranslationYAnimation, forKey:"Camera Animation_TranslationY")

		let _000123RotationAnimation = CAKeyframeAnimation(keyPath: "transform.rotation.z")
		_000123RotationAnimation.duration = 3.750
		_000123RotationAnimation.values = [0.801, 0.935, 1.085, 1.085] as [Float]
		_000123RotationAnimation.keyTimes = [0.000, 0.920, 0.947, 1.000] as [NSNumber]
		_000123RotationAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		_000123RotationAnimation.beginTime = beginTime
		_000123RotationAnimation.fillMode = fillMode
		_000123RotationAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["0001 2 3__root"]?.layer.add(_000123RotationAnimation, forKey:"Camera Animation_Rotation")

		let _000123OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		_000123OpacityAnimation.duration = 3.750
		_000123OpacityAnimation.values = [0.000, 0.000, 1.000, 1.000] as [Float]
		_000123OpacityAnimation.keyTimes = [0.000, 0.720, 0.720, 1.000] as [NSNumber]
		_000123OpacityAnimation.timingFunctions = [instantTiming, instantTiming, linearTiming]
		_000123OpacityAnimation.beginTime = beginTime
		_000123OpacityAnimation.fillMode = fillMode
		_000123OpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["0001 2 3__root"]?.layer.add(_000123OpacityAnimation, forKey:"Camera Animation_Opacity")

		let _000123ScaleXAnimation = CAKeyframeAnimation(keyPath: "transform.scale.x")
		_000123ScaleXAnimation.duration = 3.750
		_000123ScaleXAnimation.values = [0.091, 0.091, 0.698, 0.040, 0.108, 1.771, 0.028, 0.028] as [Float]
		_000123ScaleXAnimation.keyTimes = [0.000, 0.720, 0.800, 0.840, 0.880, 0.960, 0.973, 1.000] as [NSNumber]
		_000123ScaleXAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming]
		_000123ScaleXAnimation.beginTime = beginTime
		_000123ScaleXAnimation.fillMode = fillMode
		_000123ScaleXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["0001 2 3__xScale"]?.layer.add(_000123ScaleXAnimation, forKey:"Camera Animation_ScaleX")

		let _000123TranslationXAnimation = CAKeyframeAnimation(keyPath: "transform.translation.x")
		_000123TranslationXAnimation.duration = 3.750
		_000123TranslationXAnimation.values = [0.000, 0.000, -327.570, -423.802, -423.802, 2414.916, 2943.480, 3572.803, 3572.803] as [Float]
		_000123TranslationXAnimation.keyTimes = [0.000, 0.720, 0.800, 0.840, 0.880, 0.880, 0.920, 0.973, 1.000] as [NSNumber]
		_000123TranslationXAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, instantTiming, instantTiming, linearTiming, linearTiming, linearTiming]
		_000123TranslationXAnimation.beginTime = beginTime
		_000123TranslationXAnimation.fillMode = fillMode
		_000123TranslationXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["0001 2 3__root"]?.layer.add(_000123TranslationXAnimation, forKey:"Camera Animation_TranslationX")

		let _000123TranslationYAnimation = CAKeyframeAnimation(keyPath: "transform.translation.y")
		_000123TranslationYAnimation.duration = 3.750
		_000123TranslationYAnimation.values = [0.000, 0.000, -311.086, -410.344, -410.344, -2154.778, -1504.572, -475.887, -475.887] as [Float]
		_000123TranslationYAnimation.keyTimes = [0.000, 0.720, 0.800, 0.840, 0.880, 0.880, 0.920, 0.973, 1.000] as [NSNumber]
		_000123TranslationYAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, instantTiming, instantTiming, linearTiming, linearTiming, linearTiming]
		_000123TranslationYAnimation.beginTime = beginTime
		_000123TranslationYAnimation.fillMode = fillMode
		_000123TranslationYAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["0001 2 3__root"]?.layer.add(_000123TranslationYAnimation, forKey:"Camera Animation_TranslationY")

		let homeArrows01OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		homeArrows01OpacityAnimation.duration = 3.750
		homeArrows01OpacityAnimation.values = [0.000, 0.000, 1.000, 1.000] as [Float]
		homeArrows01OpacityAnimation.keyTimes = [0.000, 0.800, 0.840, 1.000] as [NSNumber]
		homeArrows01OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		homeArrows01OpacityAnimation.beginTime = beginTime
		homeArrows01OpacityAnimation.fillMode = fillMode
		homeArrows01OpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Home_Arrows-01__root"]?.layer.add(homeArrows01OpacityAnimation, forKey:"Camera Animation_Opacity")

		let homeArrows05OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		homeArrows05OpacityAnimation.duration = 3.750
		homeArrows05OpacityAnimation.values = [0.000, 0.000, 1.000, 1.000] as [Float]
		homeArrows05OpacityAnimation.keyTimes = [0.000, 0.800, 0.840, 1.000] as [NSNumber]
		homeArrows05OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		homeArrows05OpacityAnimation.beginTime = beginTime
		homeArrows05OpacityAnimation.fillMode = fillMode
		homeArrows05OpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Home_Arrows-05__root"]?.layer.add(homeArrows05OpacityAnimation, forKey:"Camera Animation_Opacity")

		let _000124RotationAnimation = CAKeyframeAnimation(keyPath: "transform.rotation.z")
		_000124RotationAnimation.duration = 3.750
		_000124RotationAnimation.values = [0.801, 0.801, 0.897, 0.897] as [Float]
		_000124RotationAnimation.keyTimes = [0.000, 0.720, 0.800, 1.000] as [NSNumber]
		_000124RotationAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		_000124RotationAnimation.beginTime = beginTime
		_000124RotationAnimation.fillMode = fillMode
		_000124RotationAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["0001 2 4__root"]?.layer.add(_000124RotationAnimation, forKey:"Camera Animation_Rotation")

		let _000124OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		_000124OpacityAnimation.duration = 3.750
		_000124OpacityAnimation.values = [0.000, 0.000, 1.000, 1.000, 0.000, 0.000, 1.000, 1.000] as [Float]
		_000124OpacityAnimation.keyTimes = [0.000, 0.720, 0.720, 0.840, 0.840, 0.920, 0.920, 1.000] as [NSNumber]
		_000124OpacityAnimation.timingFunctions = [instantTiming, instantTiming, instantTiming, instantTiming, instantTiming, instantTiming, linearTiming]
		_000124OpacityAnimation.beginTime = beginTime
		_000124OpacityAnimation.fillMode = fillMode
		_000124OpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["0001 2 4__root"]?.layer.add(_000124OpacityAnimation, forKey:"Camera Animation_Opacity")

		let _000124ScaleXAnimation = CAKeyframeAnimation(keyPath: "transform.scale.x")
		_000124ScaleXAnimation.duration = 3.750
		_000124ScaleXAnimation.values = [0.091, 0.091, 0.745, 0.006, -0.109, -0.477, -0.016] as [Float]
		_000124ScaleXAnimation.keyTimes = [0.000, 0.720, 0.800, 0.840, 0.920, 0.960, 1.000] as [NSNumber]
		_000124ScaleXAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming]
		_000124ScaleXAnimation.beginTime = beginTime
		_000124ScaleXAnimation.fillMode = fillMode
		_000124ScaleXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["0001 2 4__xScale"]?.layer.add(_000124ScaleXAnimation, forKey:"Camera Animation_ScaleX")

		let _000124TranslationXAnimation = CAKeyframeAnimation(keyPath: "transform.translation.x")
		_000124TranslationXAnimation.duration = 3.750
		_000124TranslationXAnimation.values = [0.000, 0.000, 531.013, 446.529, 3023.814, 3224.388, 3398.451] as [Float]
		_000124TranslationXAnimation.keyTimes = [0.000, 0.720, 0.800, 0.840, 0.920, 0.960, 1.000] as [NSNumber]
		_000124TranslationXAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming]
		_000124TranslationXAnimation.beginTime = beginTime
		_000124TranslationXAnimation.fillMode = fillMode
		_000124TranslationXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["0001 2 4__root"]?.layer.add(_000124TranslationXAnimation, forKey:"Camera Animation_TranslationX")

		let _000124TranslationYAnimation = CAKeyframeAnimation(keyPath: "transform.translation.y")
		_000124TranslationYAnimation.duration = 3.750
		_000124TranslationYAnimation.values = [0.000, 0.000, 684.258, 578.474, -2874.650, -2647.407, -2430.518] as [Float]
		_000124TranslationYAnimation.keyTimes = [0.000, 0.720, 0.800, 0.840, 0.920, 0.960, 1.000] as [NSNumber]
		_000124TranslationYAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming]
		_000124TranslationYAnimation.beginTime = beginTime
		_000124TranslationYAnimation.fillMode = fillMode
		_000124TranslationYAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["0001 2 4__root"]?.layer.add(_000124TranslationYAnimation, forKey:"Camera Animation_TranslationY")

		let untitled2RotationAnimation = CAKeyframeAnimation(keyPath: "transform.rotation.z")
		untitled2RotationAnimation.duration = 3.750
		untitled2RotationAnimation.values = [4.745, 4.794, 4.601, 4.332, 4.332] as [Float]
		untitled2RotationAnimation.keyTimes = [0.000, 0.213, 0.227, 0.267, 1.000] as [NSNumber]
		untitled2RotationAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming]
		untitled2RotationAnimation.beginTime = beginTime
		untitled2RotationAnimation.fillMode = fillMode
		untitled2RotationAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Untitled-2__root"]?.layer.add(untitled2RotationAnimation, forKey:"Camera Animation_Rotation")

		let untitled2OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		untitled2OpacityAnimation.duration = 3.750
		untitled2OpacityAnimation.values = [0.000, 0.000, 1.000, 1.000, 0.000, 0.000] as [Float]
		untitled2OpacityAnimation.keyTimes = [0.000, 0.213, 0.213, 0.267, 0.267, 1.000] as [NSNumber]
		untitled2OpacityAnimation.timingFunctions = [instantTiming, instantTiming, instantTiming, instantTiming, linearTiming]
		untitled2OpacityAnimation.beginTime = beginTime
		untitled2OpacityAnimation.fillMode = fillMode
		untitled2OpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Untitled-2__root"]?.layer.add(untitled2OpacityAnimation, forKey:"Camera Animation_Opacity")

		let untitled2ScaleXAnimation = CAKeyframeAnimation(keyPath: "transform.scale.x")
		untitled2ScaleXAnimation.duration = 3.750
		untitled2ScaleXAnimation.values = [3.612, 2.869, 3.343, 3.343] as [Float]
		untitled2ScaleXAnimation.keyTimes = [0.000, 0.213, 0.267, 1.000] as [NSNumber]
		untitled2ScaleXAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		untitled2ScaleXAnimation.beginTime = beginTime
		untitled2ScaleXAnimation.fillMode = fillMode
		untitled2ScaleXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Untitled-2__xScale"]?.layer.add(untitled2ScaleXAnimation, forKey:"Camera Animation_ScaleX")

		let untitled2ScaleYAnimation = CAKeyframeAnimation(keyPath: "transform.scale.y")
		untitled2ScaleYAnimation.duration = 3.750
		untitled2ScaleYAnimation.values = [1.891, 1.445, 1.534, 1.534] as [Float]
		untitled2ScaleYAnimation.keyTimes = [0.000, 0.213, 0.267, 1.000] as [NSNumber]
		untitled2ScaleYAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		untitled2ScaleYAnimation.beginTime = beginTime
		untitled2ScaleYAnimation.fillMode = fillMode
		untitled2ScaleYAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Untitled-2__yScale"]?.layer.add(untitled2ScaleYAnimation, forKey:"Camera Animation_ScaleY")

		let untitled2TranslationXAnimation = CAKeyframeAnimation(keyPath: "transform.translation.x")
		untitled2TranslationXAnimation.duration = 3.750
		untitled2TranslationXAnimation.values = [0.000, 5.336, 11.961, -33.021, -33.021] as [Float]
		untitled2TranslationXAnimation.keyTimes = [0.000, 0.213, 0.227, 0.267, 1.000] as [NSNumber]
		untitled2TranslationXAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming]
		untitled2TranslationXAnimation.beginTime = beginTime
		untitled2TranslationXAnimation.fillMode = fillMode
		untitled2TranslationXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Untitled-2__root"]?.layer.add(untitled2TranslationXAnimation, forKey:"Camera Animation_TranslationX")

		let untitled2TranslationYAnimation = CAKeyframeAnimation(keyPath: "transform.translation.y")
		untitled2TranslationYAnimation.duration = 3.750
		untitled2TranslationYAnimation.values = [0.000, 32.233, -47.939, -142.721, -142.721] as [Float]
		untitled2TranslationYAnimation.keyTimes = [0.000, 0.213, 0.227, 0.267, 1.000] as [NSNumber]
		untitled2TranslationYAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming]
		untitled2TranslationYAnimation.beginTime = beginTime
		untitled2TranslationYAnimation.fillMode = fillMode
		untitled2TranslationYAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Untitled-2__root"]?.layer.add(untitled2TranslationYAnimation, forKey:"Camera Animation_TranslationY")
	}

	func removeCameraAnimation() {
		self.layer.removeAnimation(forKey: "CameraAnimation")
		self.viewsByName["numpad__root"]?.layer.removeAnimation(forKey: "Camera Animation_Opacity")
		self.viewsByName["menu_icons-01_1__xScale"]?.layer.removeAnimation(forKey: "Camera Animation_ScaleX")
		self.viewsByName["menu_icons-01_1__yScale"]?.layer.removeAnimation(forKey: "Camera Animation_ScaleY")
		self.viewsByName["menu_icons-01_1__root"]?.layer.removeAnimation(forKey: "Camera Animation_TranslationX")
		self.viewsByName["menu_icons-01_1__root"]?.layer.removeAnimation(forKey: "Camera Animation_TranslationY")
		self.viewsByName["Camera_minus__root"]?.layer.removeAnimation(forKey: "Camera Animation_Opacity")
		self.viewsByName["info__root"]?.layer.removeAnimation(forKey: "Camera Animation_Opacity")
		self.viewsByName["zoom__root"]?.layer.removeAnimation(forKey: "Camera Animation_Opacity")
		self.viewsByName["Camera_plus__root"]?.layer.removeAnimation(forKey: "Camera Animation_Opacity")
		self.viewsByName["0001 2 2__root"]?.layer.removeAnimation(forKey: "Camera Animation_Rotation")
		self.viewsByName["0001 2 2__root"]?.layer.removeAnimation(forKey: "Camera Animation_Opacity")
		self.viewsByName["0001 2 2__xScale"]?.layer.removeAnimation(forKey: "Camera Animation_ScaleX")
		self.viewsByName["0001 2 2__root"]?.layer.removeAnimation(forKey: "Camera Animation_TranslationX")
		self.viewsByName["0001 2 2__root"]?.layer.removeAnimation(forKey: "Camera Animation_TranslationY")
		self.viewsByName["icon_02_menu-01__root"]?.layer.removeAnimation(forKey: "Camera Animation_Opacity")
		self.viewsByName["Home_Arrows-04__root"]?.layer.removeAnimation(forKey: "Camera Animation_Opacity")
		self.viewsByName["Untitled-2 2__root"]?.layer.removeAnimation(forKey: "Camera Animation_Rotation")
		self.viewsByName["Untitled-2 2__root"]?.layer.removeAnimation(forKey: "Camera Animation_Opacity")
		self.viewsByName["Untitled-2 2__xScale"]?.layer.removeAnimation(forKey: "Camera Animation_ScaleX")
		self.viewsByName["Untitled-2 2__root"]?.layer.removeAnimation(forKey: "Camera Animation_TranslationX")
		self.viewsByName["Untitled-2 2__root"]?.layer.removeAnimation(forKey: "Camera Animation_TranslationY")
		self.viewsByName["0001 2 5__root"]?.layer.removeAnimation(forKey: "Camera Animation_Rotation")
		self.viewsByName["0001 2 5__root"]?.layer.removeAnimation(forKey: "Camera Animation_Opacity")
		self.viewsByName["0001 2 5__xScale"]?.layer.removeAnimation(forKey: "Camera Animation_ScaleX")
		self.viewsByName["0001 2 5__root"]?.layer.removeAnimation(forKey: "Camera Animation_TranslationX")
		self.viewsByName["0001 2 5__root"]?.layer.removeAnimation(forKey: "Camera Animation_TranslationY")
		self.viewsByName["home_icon__root"]?.layer.removeAnimation(forKey: "Camera Animation_Opacity")
		self.viewsByName["Home_Arrows-03__root"]?.layer.removeAnimation(forKey: "Camera Animation_Opacity")
		self.viewsByName["0001 2 7__root"]?.layer.removeAnimation(forKey: "Camera Animation_Rotation")
		self.viewsByName["0001 2 7__root"]?.layer.removeAnimation(forKey: "Camera Animation_Opacity")
		self.viewsByName["0001 2 7__xScale"]?.layer.removeAnimation(forKey: "Camera Animation_ScaleX")
		self.viewsByName["0001 2 7__root"]?.layer.removeAnimation(forKey: "Camera Animation_TranslationX")
		self.viewsByName["0001 2 7__root"]?.layer.removeAnimation(forKey: "Camera Animation_TranslationY")
		self.viewsByName["0001 2__root"]?.layer.removeAnimation(forKey: "Camera Animation_Rotation")
		self.viewsByName["0001 2__root"]?.layer.removeAnimation(forKey: "Camera Animation_Opacity")
		self.viewsByName["0001 2__xScale"]?.layer.removeAnimation(forKey: "Camera Animation_ScaleX")
		self.viewsByName["0001 2__root"]?.layer.removeAnimation(forKey: "Camera Animation_TranslationX")
		self.viewsByName["0001 2__root"]?.layer.removeAnimation(forKey: "Camera Animation_TranslationY")
		self.viewsByName["menu_icons-03__xScale"]?.layer.removeAnimation(forKey: "Camera Animation_ScaleX")
		self.viewsByName["menu_icons-03__yScale"]?.layer.removeAnimation(forKey: "Camera Animation_ScaleY")
		self.viewsByName["menu_icons-03__root"]?.layer.removeAnimation(forKey: "Camera Animation_TranslationX")
		self.viewsByName["menu_icons-03__root"]?.layer.removeAnimation(forKey: "Camera Animation_TranslationY")
		self.viewsByName["menu_icons-04__xScale"]?.layer.removeAnimation(forKey: "Camera Animation_ScaleX")
		self.viewsByName["menu_icons-04__yScale"]?.layer.removeAnimation(forKey: "Camera Animation_ScaleY")
		self.viewsByName["menu_icons-04__root"]?.layer.removeAnimation(forKey: "Camera Animation_TranslationX")
		self.viewsByName["menu_icons-04__root"]?.layer.removeAnimation(forKey: "Camera Animation_TranslationY")
		self.viewsByName["0001 2 6__root"]?.layer.removeAnimation(forKey: "Camera Animation_Opacity")
		self.viewsByName["0001 2 6__xScale"]?.layer.removeAnimation(forKey: "Camera Animation_ScaleX")
		self.viewsByName["0001 2 6__root"]?.layer.removeAnimation(forKey: "Camera Animation_TranslationX")
		self.viewsByName["0001 2 6__root"]?.layer.removeAnimation(forKey: "Camera Animation_TranslationY")
		self.viewsByName["0001 2 3__root"]?.layer.removeAnimation(forKey: "Camera Animation_Rotation")
		self.viewsByName["0001 2 3__root"]?.layer.removeAnimation(forKey: "Camera Animation_Opacity")
		self.viewsByName["0001 2 3__xScale"]?.layer.removeAnimation(forKey: "Camera Animation_ScaleX")
		self.viewsByName["0001 2 3__root"]?.layer.removeAnimation(forKey: "Camera Animation_TranslationX")
		self.viewsByName["0001 2 3__root"]?.layer.removeAnimation(forKey: "Camera Animation_TranslationY")
		self.viewsByName["Home_Arrows-01__root"]?.layer.removeAnimation(forKey: "Camera Animation_Opacity")
		self.viewsByName["Home_Arrows-05__root"]?.layer.removeAnimation(forKey: "Camera Animation_Opacity")
		self.viewsByName["0001 2 4__root"]?.layer.removeAnimation(forKey: "Camera Animation_Rotation")
		self.viewsByName["0001 2 4__root"]?.layer.removeAnimation(forKey: "Camera Animation_Opacity")
		self.viewsByName["0001 2 4__xScale"]?.layer.removeAnimation(forKey: "Camera Animation_ScaleX")
		self.viewsByName["0001 2 4__root"]?.layer.removeAnimation(forKey: "Camera Animation_TranslationX")
		self.viewsByName["0001 2 4__root"]?.layer.removeAnimation(forKey: "Camera Animation_TranslationY")
		self.viewsByName["Untitled-2__root"]?.layer.removeAnimation(forKey: "Camera Animation_Rotation")
		self.viewsByName["Untitled-2__root"]?.layer.removeAnimation(forKey: "Camera Animation_Opacity")
		self.viewsByName["Untitled-2__xScale"]?.layer.removeAnimation(forKey: "Camera Animation_ScaleX")
		self.viewsByName["Untitled-2__yScale"]?.layer.removeAnimation(forKey: "Camera Animation_ScaleY")
		self.viewsByName["Untitled-2__root"]?.layer.removeAnimation(forKey: "Camera Animation_TranslationX")
		self.viewsByName["Untitled-2__root"]?.layer.removeAnimation(forKey: "Camera Animation_TranslationY")
	}

	// MARK: CAAnimationDelegate
	func animationDidStop(_ anim: CAAnimation, finished flag: Bool) {
		if let completion = self.animationCompletions[anim] {
			self.animationCompletions.removeValue(forKey: anim)
			completion(flag)
		}
	}

	func removeAllAnimations() {
		for subview in viewsByName.values {
			subview.layer.removeAllAnimations()
		}
		self.layer.removeAnimation(forKey: "CameraAnimation")
	}
}